# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2013-2016 The Bitcoin Core developers
# Copyright (c) 2018-2021 Bitcoin Association
# Distributed under the Open BSV software license, see the accompanying file LICENSE.

# Copyright (c) 2019 The Bitcoin Core developers
# Copyright (c) 2021 Bitcoin Association
# Distributed under the Open BSV software license, see the accompanying file LICENSE.

# Copyright (c) 2016 The Bitcoin Core developers
# Copyright (c) 2021 Bitcoin Association
# Distributed under the Open BSV software license, see the accompanying file LICENSE.

# Copyright (c) 2013-2016 The Bitcoin Core developers
# Copyright (c) 2019 Bitcoin Association
# Distributed under the Open BSV software license, see the accompanying file LICENSE.

# Copyright (c) 2015-2016 The Bitcoin Core developers
# Copyright (c) 2019 Bitcoin Association
# Distributed under the Open BSV software license, see the accompanying file LICENSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/bitcoin-sv
pkgincludedir = $(includedir)/bitcoin-sv
pkglibdir = $(libdir)/bitcoin-sv
pkglibexecdir = $(libexecdir)/bitcoin-sv
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
noinst_PROGRAMS =
TESTS = $(am__EXEEXT_3)
am__append_1 = bitcoind
am__append_2 = bitcoin-cli bitcoin-tx bitcoin-miner
am__append_3 = crypto/sha256_sse4.cpp
#am__append_4 = compat/glibc_compat.cpp
#am__append_5 = $(COMPAT_LDFLAGS)
#am__append_6 = bitcoind-res.rc
#am__append_7 = bitcoin-cli-res.rc
#am__append_8 = bitcoin-tx-res.rc
#am__append_9 = compat/glibc_compat.cpp
am__append_10 = $(LIBCRC32C_INT)
am__append_11 = -DHAVE_SSE42=1
#am__append_12 = -DHAVE_SSE42=0
#am__append_13 = -DBYTE_ORDER_BIG_ENDIAN=1
am__append_14 = -DBYTE_ORDER_BIG_ENDIAN=0
am__append_15 = $(LIBCRC32C_SSE42_INT)
am__append_16 = $(LIBCRC32C_SSE42_INT)
am__append_17 = $(LIBLEVELDB_INT) \
	$(LIBMEMENV_INT)
am__append_18 = $(LIBLEVELDB_INT) $(LIBCRC32C)
am__append_19 = $(LIBMEMENV_INT)
am__append_20 = -I$(srcdir)/leveldb/include \
	-I$(srcdir)/leveldb/helpers/memenv
#am__append_21 = -DLEVELDB_IS_BIG_ENDIAN=1
am__append_22 = -DLEVELDB_IS_BIG_ENDIAN=0
#am__append_23 = -DLEVELDB_PLATFORM_WINDOWS -D_UNICODE -DUNICODE -D__USE_MINGW_ANSI_STDIO=1
am__append_24 = -DLEVELDB_PLATFORM_POSIX
#am__append_25 = leveldb/util/env_windows.cc
am__append_26 = leveldb/util/env_posix.cc
am__append_27 = test/test_bitcoin
am__append_28 = test/test-bitcoin-driver
am__append_29 = test/test_bitcoin
am__append_30 = \
  wallet/test/wallet_test_fixture.cpp \
  wallet/test/wallet_test_fixture.h \
  wallet/test/accounting_tests.cpp \
  wallet/test/wallet_tests.cpp \
  wallet/test/walletdb_tests.cpp \
  wallet/test/crypto_tests.cpp

am__append_31 = $(LIBBITCOIN_WALLET)
#am__append_32 = $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
am__append_33 = $(CLEAN_BITCOIN_TEST)
am__append_34 = bench/bench_bitcoin
#am__append_35 = $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)
am__append_36 = bench/coin_selection.cpp
am__append_37 = $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CRYPTO)
am__append_38 = $(CLEAN_BITCOIN_BENCH)
subdir = src
SUBDIRS =
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_find_bdb53.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/l_atomic.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/bitcoin-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = bitcoind$(EXEEXT)
am__EXEEXT_2 = bitcoin-cli$(EXEEXT) \
	bitcoin-tx$(EXEEXT) \
	bitcoin-miner$(EXEEXT)
am__EXEEXT_3 = test/test_bitcoin$(EXEEXT)
am__EXEEXT_4 = bench/bench_bitcoin$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(includedir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
crypto_libbitcoin_crypto_a_AR = $(AR) $(ARFLAGS)
crypto_libbitcoin_crypto_a_LIBADD =
am__crypto_libbitcoin_crypto_a_SOURCES_DIST = crypto/aes.cpp \
	crypto/aes.h crypto/chacha20.h crypto/chacha20.cpp \
	crypto/common.h crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/sha256_sse4.cpp
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = crypto/libbitcoin_crypto_a-sha256_sse4.$(OBJEXT)
am_crypto_libbitcoin_crypto_a_OBJECTS =  \
	crypto/libbitcoin_crypto_a-aes.$(OBJEXT) \
	crypto/libbitcoin_crypto_a-chacha20.$(OBJEXT) \
	crypto/libbitcoin_crypto_a-hmac_sha256.$(OBJEXT) \
	crypto/libbitcoin_crypto_a-hmac_sha512.$(OBJEXT) \
	crypto/libbitcoin_crypto_a-ripemd160.$(OBJEXT) \
	crypto/libbitcoin_crypto_a-sha1.$(OBJEXT) \
	crypto/libbitcoin_crypto_a-sha256.$(OBJEXT) \
	crypto/libbitcoin_crypto_a-sha512.$(OBJEXT) $(am__objects_1)
crypto_libbitcoin_crypto_a_OBJECTS =  \
	$(am_crypto_libbitcoin_crypto_a_OBJECTS)
leveldb_crc32c_libcrc32c_a_AR = $(AR) $(ARFLAGS)
leveldb_crc32c_libcrc32c_a_LIBADD =
am__leveldb_crc32c_libcrc32c_a_SOURCES_DIST =  \
	leveldb/crc32c/include/crc32c/crc32c.h \
	leveldb/crc32c/src/crc32c_arm64.h \
	leveldb/crc32c/src/crc32c_arm64_check.h \
	leveldb/crc32c/src/crc32c_internal.h \
	leveldb/crc32c/src/crc32c_prefetch.h \
	leveldb/crc32c/src/crc32c_read_le.h \
	leveldb/crc32c/src/crc32c_round_up.h \
	leveldb/crc32c/src/crc32c_sse42_check.h \
	leveldb/crc32c/src/crc32c_sse42.h leveldb/crc32c/src/crc32c.cc \
	leveldb/crc32c/src/crc32c_portable.cc
am_leveldb_crc32c_libcrc32c_a_OBJECTS = leveldb/crc32c/src/libcrc32c_a-crc32c.$(OBJEXT) \
	leveldb/crc32c/src/libcrc32c_a-crc32c_portable.$(OBJEXT)
leveldb_crc32c_libcrc32c_a_OBJECTS =  \
	$(am_leveldb_crc32c_libcrc32c_a_OBJECTS)
leveldb_crc32c_libcrc32c_sse42_a_AR = $(AR) $(ARFLAGS)
leveldb_crc32c_libcrc32c_sse42_a_LIBADD =
am__leveldb_crc32c_libcrc32c_sse42_a_SOURCES_DIST =  \
	leveldb/crc32c/src/crc32c_sse42.cc
am_leveldb_crc32c_libcrc32c_sse42_a_OBJECTS = leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.$(OBJEXT)
leveldb_crc32c_libcrc32c_sse42_a_OBJECTS =  \
	$(am_leveldb_crc32c_libcrc32c_sse42_a_OBJECTS)
leveldb_libleveldb_a_AR = $(AR) $(ARFLAGS)
leveldb_libleveldb_a_LIBADD =
am__leveldb_libleveldb_a_SOURCES_DIST = leveldb/port/port_stdcxx.h \
	leveldb/port/port.h leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h leveldb/include/leveldb/export.h \
	leveldb/include/leveldb/c.h leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h leveldb/db/log_format.h \
	leveldb/db/memtable.h leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h leveldb/db/filename.h \
	leveldb/db/version_edit.h leveldb/db/dbformat.h \
	leveldb/db/builder.h leveldb/db/log_writer.h \
	leveldb/db/db_iter.h leveldb/db/skiplist.h \
	leveldb/db/db_impl.h leveldb/db/table_cache.h \
	leveldb/db/snapshot.h leveldb/db/log_reader.h \
	leveldb/table/filter_block.h leveldb/table/block_builder.h \
	leveldb/table/block.h leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h \
	leveldb/util/env_windows_test_helper.h leveldb/util/arena.h \
	leveldb/util/random.h leveldb/util/posix_logger.h \
	leveldb/util/hash.h leveldb/util/histogram.h \
	leveldb/util/coding.h leveldb/util/testutil.h \
	leveldb/util/mutexlock.h leveldb/util/logging.h \
	leveldb/util/no_destructor.h leveldb/util/windows_logger.h \
	leveldb/db/builder.cc leveldb/db/c.cc leveldb/db/dbformat.cc \
	leveldb/db/db_impl.cc leveldb/db/db_iter.cc \
	leveldb/db/dumpfile.cc leveldb/db/filename.cc \
	leveldb/db/log_reader.cc leveldb/db/log_writer.cc \
	leveldb/db/memtable.cc leveldb/db/repair.cc \
	leveldb/db/table_cache.cc leveldb/db/version_edit.cc \
	leveldb/db/version_set.cc leveldb/db/write_batch.cc \
	leveldb/table/block_builder.cc leveldb/table/block.cc \
	leveldb/table/filter_block.cc leveldb/table/format.cc \
	leveldb/table/iterator.cc leveldb/table/merger.cc \
	leveldb/table/table_builder.cc leveldb/table/table.cc \
	leveldb/table/two_level_iterator.cc leveldb/util/arena.cc \
	leveldb/util/bloom.cc leveldb/util/cache.cc \
	leveldb/util/coding.cc leveldb/util/comparator.cc \
	leveldb/util/crc32c.cc leveldb/util/env.cc \
	leveldb/util/filter_policy.cc leveldb/util/hash.cc \
	leveldb/util/histogram.cc leveldb/util/logging.cc \
	leveldb/util/options.cc leveldb/util/status.cc \
	leveldb/util/env_windows.cc leveldb/util/env_posix.cc
#am__objects_2 = leveldb/util/libleveldb_a-env_windows.$(OBJEXT)
am__objects_3 = leveldb/util/libleveldb_a-env_posix.$(OBJEXT)
am_leveldb_libleveldb_a_OBJECTS = leveldb/db/libleveldb_a-builder.$(OBJEXT) \
	leveldb/db/libleveldb_a-c.$(OBJEXT) \
	leveldb/db/libleveldb_a-dbformat.$(OBJEXT) \
	leveldb/db/libleveldb_a-db_impl.$(OBJEXT) \
	leveldb/db/libleveldb_a-db_iter.$(OBJEXT) \
	leveldb/db/libleveldb_a-dumpfile.$(OBJEXT) \
	leveldb/db/libleveldb_a-filename.$(OBJEXT) \
	leveldb/db/libleveldb_a-log_reader.$(OBJEXT) \
	leveldb/db/libleveldb_a-log_writer.$(OBJEXT) \
	leveldb/db/libleveldb_a-memtable.$(OBJEXT) \
	leveldb/db/libleveldb_a-repair.$(OBJEXT) \
	leveldb/db/libleveldb_a-table_cache.$(OBJEXT) \
	leveldb/db/libleveldb_a-version_edit.$(OBJEXT) \
	leveldb/db/libleveldb_a-version_set.$(OBJEXT) \
	leveldb/db/libleveldb_a-write_batch.$(OBJEXT) \
	leveldb/table/libleveldb_a-block_builder.$(OBJEXT) \
	leveldb/table/libleveldb_a-block.$(OBJEXT) \
	leveldb/table/libleveldb_a-filter_block.$(OBJEXT) \
	leveldb/table/libleveldb_a-format.$(OBJEXT) \
	leveldb/table/libleveldb_a-iterator.$(OBJEXT) \
	leveldb/table/libleveldb_a-merger.$(OBJEXT) \
	leveldb/table/libleveldb_a-table_builder.$(OBJEXT) \
	leveldb/table/libleveldb_a-table.$(OBJEXT) \
	leveldb/table/libleveldb_a-two_level_iterator.$(OBJEXT) \
	leveldb/util/libleveldb_a-arena.$(OBJEXT) \
	leveldb/util/libleveldb_a-bloom.$(OBJEXT) \
	leveldb/util/libleveldb_a-cache.$(OBJEXT) \
	leveldb/util/libleveldb_a-coding.$(OBJEXT) \
	leveldb/util/libleveldb_a-comparator.$(OBJEXT) \
	leveldb/util/libleveldb_a-crc32c.$(OBJEXT) \
	leveldb/util/libleveldb_a-env.$(OBJEXT) \
	leveldb/util/libleveldb_a-filter_policy.$(OBJEXT) \
	leveldb/util/libleveldb_a-hash.$(OBJEXT) \
	leveldb/util/libleveldb_a-histogram.$(OBJEXT) \
	leveldb/util/libleveldb_a-logging.$(OBJEXT) \
	leveldb/util/libleveldb_a-options.$(OBJEXT) \
	leveldb/util/libleveldb_a-status.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3)
leveldb_libleveldb_a_OBJECTS = $(am_leveldb_libleveldb_a_OBJECTS)
leveldb_libmemenv_a_AR = $(AR) $(ARFLAGS)
leveldb_libmemenv_a_LIBADD =
am__leveldb_libmemenv_a_SOURCES_DIST =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
am_leveldb_libmemenv_a_OBJECTS = leveldb/helpers/memenv/libmemenv_a-memenv.$(OBJEXT)
leveldb_libmemenv_a_OBJECTS = $(am_leveldb_libmemenv_a_OBJECTS)
libbitcoin_cli_a_AR = $(AR) $(ARFLAGS)
libbitcoin_cli_a_LIBADD =
am__objects_4 =
am_libbitcoin_cli_a_OBJECTS = libbitcoin_cli_a-cfile_util.$(OBJEXT) \
	net/libbitcoin_cli_a-netaddress.$(OBJEXT) \
	net/libbitcoin_cli_a-netbase.$(OBJEXT) \
	rpc/libbitcoin_cli_a-client.$(OBJEXT) \
	rpc/libbitcoin_cli_a-client_config.$(OBJEXT) \
	rpc/libbitcoin_cli_a-client_utils.$(OBJEXT) \
	rpc/libbitcoin_cli_a-http_request.$(OBJEXT) \
	rpc/libbitcoin_cli_a-http_response.$(OBJEXT) $(am__objects_4)
libbitcoin_cli_a_OBJECTS = $(am_libbitcoin_cli_a_OBJECTS)
libbitcoin_common_a_AR = $(AR) $(ARFLAGS)
libbitcoin_common_a_LIBADD =
am_libbitcoin_common_a_OBJECTS = libbitcoin_common_a-amount.$(OBJEXT) \
	libbitcoin_common_a-base58.$(OBJEXT) \
	libbitcoin_common_a-chainparams.$(OBJEXT) \
	libbitcoin_common_a-config.$(OBJEXT) \
	libbitcoin_common_a-coins.$(OBJEXT) \
	libbitcoin_common_a-compressor.$(OBJEXT) \
	libbitcoin_common_a-dstencode.$(OBJEXT) \
	libbitcoin_common_a-core_read.$(OBJEXT) \
	libbitcoin_common_a-core_write.$(OBJEXT) \
	libbitcoin_common_a-key.$(OBJEXT) \
	libbitcoin_common_a-keystore.$(OBJEXT) \
	net/libbitcoin_common_a-netaddress.$(OBJEXT) \
	net/libbitcoin_common_a-netbase.$(OBJEXT) \
	libbitcoin_common_a-protocol.$(OBJEXT) \
	rpc/libbitcoin_common_a-jsonwriter.$(OBJEXT) \
	libbitcoin_common_a-scheduler.$(OBJEXT) \
	script/libbitcoin_common_a-sign.$(OBJEXT) \
	script/libbitcoin_common_a-standard.$(OBJEXT) \
	libbitcoin_common_a-transaction_specific_config.$(OBJEXT) \
	libbitcoin_common_a-txhasher.$(OBJEXT) \
	libbitcoin_common_a-warnings.$(OBJEXT) \
	libbitcoin_common_a-write_preferring_upgradable_mutex.$(OBJEXT) \
	$(am__objects_4)
libbitcoin_common_a_OBJECTS = $(am_libbitcoin_common_a_OBJECTS)
libbitcoin_consensus_a_AR = $(AR) $(ARFLAGS)
libbitcoin_consensus_a_LIBADD =
am_libbitcoin_consensus_a_OBJECTS =  \
	libbitcoin_consensus_a-arith_uint256.$(OBJEXT) \
	libbitcoin_consensus_a-big_int.$(OBJEXT) \
	libbitcoin_consensus_a-cfile_util.$(OBJEXT) \
	consensus/libbitcoin_consensus_a-merkle.$(OBJEXT) \
	libbitcoin_consensus_a-hash.$(OBJEXT) \
	primitives/libbitcoin_consensus_a-block.$(OBJEXT) \
	primitives/libbitcoin_consensus_a-transaction.$(OBJEXT) \
	libbitcoin_consensus_a-pubkey.$(OBJEXT) \
	script/libbitcoin_consensus_a-bitcoinconsensus.$(OBJEXT) \
	script/libbitcoin_consensus_a-interpreter.$(OBJEXT) \
	script/libbitcoin_consensus_a-limitedstack.$(OBJEXT) \
	script/libbitcoin_consensus_a-opcodes.$(OBJEXT) \
	script/libbitcoin_consensus_a-script.$(OBJEXT) \
	script/libbitcoin_consensus_a-script_num.$(OBJEXT) \
	script/libbitcoin_consensus_a-script_error.$(OBJEXT) \
	libbitcoin_consensus_a-taskcancellation.$(OBJEXT) \
	libbitcoin_consensus_a-utilstrencodings.$(OBJEXT)
libbitcoin_consensus_a_OBJECTS = $(am_libbitcoin_consensus_a_OBJECTS)
libbitcoin_server_a_AR = $(AR) $(ARFLAGS)
libbitcoin_server_a_LIBADD =
am_libbitcoin_server_a_OBJECTS =  \
	libbitcoin_server_a-abort_node.$(OBJEXT) \
	libbitcoin_server_a-addrman.$(OBJEXT) \
	libbitcoin_server_a-addrdb.$(OBJEXT) \
	libbitcoin_server_a-bloom.$(OBJEXT) \
	libbitcoin_server_a-block_index.$(OBJEXT) \
	libbitcoin_server_a-blockencodings.$(OBJEXT) \
	libbitcoin_server_a-block_file_info.$(OBJEXT) \
	libbitcoin_server_a-blockfileinfostore.$(OBJEXT) \
	libbitcoin_server_a-block_file_access.$(OBJEXT) \
	libbitcoin_server_a-block_index_store_loader.$(OBJEXT) \
	libbitcoin_server_a-chain.$(OBJEXT) \
	libbitcoin_server_a-checkpoints.$(OBJEXT) \
	miner_id/libbitcoin_server_a-coinbase_doc.$(OBJEXT) \
	libbitcoin_server_a-frozentxo.$(OBJEXT) \
	libbitcoin_server_a-frozentxo_db.$(OBJEXT) \
	libbitcoin_server_a-frozentxo_logging.$(OBJEXT) \
	libbitcoin_server_a-httprpc.$(OBJEXT) \
	libbitcoin_server_a-httpserver.$(OBJEXT) \
	libbitcoin_server_a-init.$(OBJEXT) \
	libbitcoin_server_a-invalid_txn_publisher.$(OBJEXT) \
	invalid_txn_sinks/libbitcoin_server_a-file_sink.$(OBJEXT) \
	invalid_txn_sinks/libbitcoin_server_a-zmq_sink.$(OBJEXT) \
	libbitcoin_server_a-dbwrapper.$(OBJEXT) \
	double_spend/libbitcoin_server_a-dsattempt_handler.$(OBJEXT) \
	double_spend/libbitcoin_server_a-dscallback_msg.$(OBJEXT) \
	double_spend/libbitcoin_server_a-dsdetected_message.$(OBJEXT) \
	double_spend/libbitcoin_server_a-dstxn_serialiser.$(OBJEXT) \
	libbitcoin_server_a-mempooltxdb.$(OBJEXT) \
	libbitcoin_server_a-merkleblock.$(OBJEXT) \
	libbitcoin_server_a-merkleproof.$(OBJEXT) \
	libbitcoin_server_a-merkletree.$(OBJEXT) \
	libbitcoin_server_a-merkletreedb.$(OBJEXT) \
	libbitcoin_server_a-merkletreestore.$(OBJEXT) \
	miner_id/libbitcoin_server_a-dataref_index.$(OBJEXT) \
	miner_id/libbitcoin_server_a-datareftx.$(OBJEXT) \
	miner_id/libbitcoin_server_a-miner_id.$(OBJEXT) \
	miner_id/libbitcoin_server_a-miner_id_db.$(OBJEXT) \
	miner_id/libbitcoin_server_a-miner_info.$(OBJEXT) \
	miner_id/libbitcoin_server_a-miner_info_doc.$(OBJEXT) \
	miner_id/libbitcoin_server_a-miner_info_error.$(OBJEXT) \
	miner_id/libbitcoin_server_a-miner_info_ref.$(OBJEXT) \
	miner_id/libbitcoin_server_a-revokemid.$(OBJEXT) \
	miner_id/libbitcoin_server_a-miner_info_tracker.$(OBJEXT) \
	mining/libbitcoin_server_a-assembler.$(OBJEXT) \
	mining/libbitcoin_server_a-candidates.$(OBJEXT) \
	mining/libbitcoin_server_a-factory.$(OBJEXT) \
	mining/libbitcoin_server_a-group_builder.$(OBJEXT) \
	mining/libbitcoin_server_a-journal.$(OBJEXT) \
	mining/libbitcoin_server_a-journal_builder.$(OBJEXT) \
	mining/libbitcoin_server_a-journal_change_set.$(OBJEXT) \
	mining/libbitcoin_server_a-journal_entry.$(OBJEXT) \
	mining/libbitcoin_server_a-journaling_block_assembler.$(OBJEXT) \
	net/libbitcoin_server_a-association.$(OBJEXT) \
	net/libbitcoin_server_a-association_id.$(OBJEXT) \
	net/libbitcoin_server_a-block_download_tracker.$(OBJEXT) \
	net/libbitcoin_server_a-block_parser.$(OBJEXT) \
	net/libbitcoin_server_a-blocktxn_parser.$(OBJEXT) \
	net/libbitcoin_server_a-cmpct_size.$(OBJEXT) \
	net/libbitcoin_server_a-cmpctblock_parser.$(OBJEXT) \
	net/libbitcoin_server_a-fixed_len_multi_parser.$(OBJEXT) \
	net/libbitcoin_server_a-fixed_len_parser.$(OBJEXT) \
	net/libbitcoin_server_a-msg_buffer.$(OBJEXT) \
	net/libbitcoin_server_a-msg_parser_buffer.$(OBJEXT) \
	net/libbitcoin_server_a-net.$(OBJEXT) \
	net/libbitcoin_server_a-net_message.$(OBJEXT) \
	net/libbitcoin_server_a-net_processing.$(OBJEXT) \
	net/libbitcoin_server_a-node_state.$(OBJEXT) \
	net/libbitcoin_server_a-prefilled_tx_parser.$(OBJEXT) \
	net/libbitcoin_server_a-single_seg_parser.$(OBJEXT) \
	net/libbitcoin_server_a-stream.$(OBJEXT) \
	net/libbitcoin_server_a-stream_policy.$(OBJEXT) \
	net/libbitcoin_server_a-stream_policy_factory.$(OBJEXT) \
	net/libbitcoin_server_a-tx_parser.$(OBJEXT) \
	net/libbitcoin_server_a-validation_scheduler.$(OBJEXT) \
	libbitcoin_server_a-noui.$(OBJEXT) \
	libbitcoin_server_a-orphan_txns.$(OBJEXT) \
	policy/libbitcoin_server_a-fees.$(OBJEXT) \
	policy/libbitcoin_server_a-policy.$(OBJEXT) \
	libbitcoin_server_a-pow.$(OBJEXT) \
	libbitcoin_server_a-processing_block_index.$(OBJEXT) \
	libbitcoin_server_a-rawtxvalidator.$(OBJEXT) \
	libbitcoin_server_a-rest.$(OBJEXT) \
	rpc/libbitcoin_server_a-abc.$(OBJEXT) \
	rpc/libbitcoin_server_a-blockchain.$(OBJEXT) \
	rpc/libbitcoin_server_a-frozentxo_rpc.$(OBJEXT) \
	rpc/libbitcoin_server_a-mining.$(OBJEXT) \
	rpc/libbitcoin_server_a-miner_info.$(OBJEXT) \
	rpc/libbitcoin_server_a-mining-fbb.$(OBJEXT) \
	rpc/libbitcoin_server_a-misc.$(OBJEXT) \
	rpc/libbitcoin_server_a-net.$(OBJEXT) \
	rpc/libbitcoin_server_a-rawtransaction.$(OBJEXT) \
	rpc/libbitcoin_server_a-safe_mode.$(OBJEXT) \
	rpc/libbitcoin_server_a-server.$(OBJEXT) \
	rpc/libbitcoin_server_a-webhook_client.$(OBJEXT) \
	libbitcoin_server_a-safe_mode.$(OBJEXT) \
	script/libbitcoin_server_a-scriptcache.$(OBJEXT) \
	script/libbitcoin_server_a-sigcache.$(OBJEXT) \
	script/libbitcoin_server_a-ismine.$(OBJEXT) \
	libbitcoin_server_a-taskcancellation.$(OBJEXT) \
	libbitcoin_server_a-timedata.$(OBJEXT) \
	libbitcoin_server_a-time_locked_mempool.$(OBJEXT) \
	libbitcoin_server_a-txdb.$(OBJEXT) \
	libbitcoin_server_a-txmempool.$(OBJEXT) \
	libbitcoin_server_a-txmempoolevictioncandidates.$(OBJEXT) \
	libbitcoin_server_a-tx_mempool_info.$(OBJEXT) \
	libbitcoin_server_a-txn_double_spend_detector.$(OBJEXT) \
	libbitcoin_server_a-txn_grouper.$(OBJEXT) \
	libbitcoin_server_a-txn_propagator.$(OBJEXT) \
	libbitcoin_server_a-txn_validation_data.$(OBJEXT) \
	libbitcoin_server_a-txn_recent_rejects.$(OBJEXT) \
	libbitcoin_server_a-txn_validator.$(OBJEXT) \
	libbitcoin_server_a-ui_interface.$(OBJEXT) \
	libbitcoin_server_a-unique_array.$(OBJEXT) \
	libbitcoin_server_a-validation.$(OBJEXT) \
	libbitcoin_server_a-validationinterface.$(OBJEXT) \
	libbitcoin_server_a-vmtouch.$(OBJEXT) $(am__objects_4)
libbitcoin_server_a_OBJECTS = $(am_libbitcoin_server_a_OBJECTS)
libbitcoin_util_a_AR = $(AR) $(ARFLAGS)
libbitcoin_util_a_LIBADD =
am__libbitcoin_util_a_SOURCES_DIST = support/lockedpool.cpp \
	chainparamsbase.cpp clientversion.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp fs.cpp \
	logging.cpp random.cpp rpc/protocol.cpp rpc/text_writer.cpp \
	support/cleanse.cpp sync.cpp threadinterrupt.cpp \
	threadpriority.cpp uint256.h util.cpp utilmoneystr.cpp \
	utilstrencodings.cpp utiltime.cpp abort_node.h addrdb.h \
	addrman.h async_file_reader.h base58.h bloom.h block_hasher.h \
	block_index.h block_index_store.h block_index_store_loader.h \
	dirty_block_index_store.h blockencodings.h \
	blockfileinfostore.h block_file_access.h block_file_info.h \
	blockindex_with_descendants.h blockstreams.h blockvalidation.h \
	cfile_util.h chain.h chainparams.h chainparamsbase.h \
	chainparamsseeds.h checkpoints.h checkqueue.h checkqueuepool.h \
	clientversion.h coins.h miner_id/coinbase_doc.h compat.h \
	compat/byteswap.h compat/endian.h compat/sanity.h \
	compiler_warnings.h compressor.h config.h \
	consensus/consensus.h core_io.h core_memusage.h cuckoocache.h \
	disk_block_index.h disk_block_pos.h disk_tx_pos.h \
	double_spend/dsattempt_handler.h double_spend/dscallback_msg.h \
	double_spend/dsdetected_defaults.h \
	double_spend/dsdetected_message.h \
	double_spend/dstxn_serialiser.h \
	double_spend/time_limited_blacklist.h dstencode.h enum_cast.h \
	frozentxo.h frozentxo_db.h frozentxo_logging.h fs.h httprpc.h \
	httpserver.h indirectmap.h init.h invalid_txn_publisher.h \
	invalid_txn_sinks/file_sink.h invalid_txn_sinks/zmq_sink.h \
	key.h keystore.h dbwrapper.h leaky_bucket.h limitedmap.h \
	limited_cache.h locked_ref.h logging.h memusage.h \
	mempooltxdb.h merkleblock.h merkleproof.h merkletree.h \
	merkletreedb.h merkletreestore.h metrics.h \
	miner_id/dataref_index.h miner_id/dataref_index_detail.h \
	miner_id/datareftx.h miner_id/miner_id.h \
	miner_id/miner_id_db.h miner_id/miner_id_db_defaults.h \
	miner_id/miner_info.h miner_id/miner_info_doc.h \
	miner_id/miner_info_error.h miner_id/miner_info_ref.h \
	miner_id/revokemid.h miner_id/miner_info_tracker.h \
	mining/assembler.h mining/candidates.h mining/factory.h \
	mining/group_builder.h mining/journal.h \
	mining/journal_builder.h mining/journal_change_set.h \
	mining/journal_entry.h mining/journaling_block_assembler.h \
	net/array_parser.h net/association.h net/association_id.h \
	net/authconn.h net/block_download_tracker.h net/block_parser.h \
	net/blocktxn_parser.h net/cmpct_size.h net/cmpctblock_parser.h \
	net/fixed_len_multi_parser.h net/fixed_len_parser.h \
	net/msg_buffer.h net/msg_parser.h net/msg_parser_buffer.h \
	net/net.h net/netaddress.h net/netbase.h net/net_message.h \
	net/net_processing.h net/net_types.h net/node_state.h \
	net/node_stats.h net/parser_utils.h net/prefilled_tx_parser.h \
	net/p2p_msg_lengths.h net/send_queue_bytes.h \
	net/single_seg_parser.h net/stream.h net/stream_policy.h \
	net/stream_policy_factory.h net/tx_parser.h \
	net/validation_scheduler.h netmessagemaker.h noui.h \
	orphan_txns.h policy/fees.h policy/policy.h pow.h \
	processing_block_index.h protocol.h random.h rawtxvalidator.h \
	reverselock.h rpc/blockchain.h rpc/client.h \
	rpc/client_config.h rpc/client_utils.h rpc/http_protocol.h \
	rpc/http_request.h rpc/http_response.h rpc/jsonwriter.h \
	rpc/mining.h rpc/misc.h rpc/protocol.h rpc/server.h \
	rpc/tojson.h rpc/register.h rpc/text_writer.h \
	rpc/webhook_client.h rpc/webhook_client_defaults.h safe_mode.h \
	scheduler.h script_config.h script/scriptcache.h \
	script/sigcache.h script/sign.h script/standard.h \
	script/ismine.h streams.h support/allocators/secure.h \
	support/allocators/zeroafterfree.h support/cleanse.h \
	support/events.h support/lockedpool.h sync.h task.h \
	taskcancellation.h task_helpers.h thread_safe_queue.h \
	threadpool.h threadpoolT.h threadpriority.h threadsafety.h \
	threadinterrupt.h timedata.h time_locked_mempool.h \
	transaction_specific_config.h txdb.h txhasher.h txmempool.h \
	txmempoolevictioncandidates.h tx_mempool_info.h \
	txn_double_spend_detector.h txn_grouper.h txn_handlers.h \
	txn_propagator.h txn_recent_rejects.h txn_sending_details.h \
	txn_util.h txn_validation_config.h txn_validation_data.h \
	txn_validation_result.h txn_validator.h ui_interface.h undo.h \
	unique_array.h util.h utilmoneystr.h utiltime.h validation.h \
	validationinterface.h versionbits.h vmtouch.h \
	wallet/coincontrol.h wallet/crypter.h wallet/db.h \
	wallet/finaltx.h wallet/rpcdump.h wallet/rpcwallet.h \
	wallet/wallet.h wallet/walletdb.h warnings.h \
	write_preferring_upgradable_mutex.h zmq/zmq_publisher.h \
	zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	compat/glibc_compat.cpp
#am__objects_5 = compat/libbitcoin_util_a-glibc_compat.$(OBJEXT)
am_libbitcoin_util_a_OBJECTS =  \
	support/libbitcoin_util_a-lockedpool.$(OBJEXT) \
	libbitcoin_util_a-chainparamsbase.$(OBJEXT) \
	libbitcoin_util_a-clientversion.$(OBJEXT) \
	compat/libbitcoin_util_a-glibc_sanity.$(OBJEXT) \
	compat/libbitcoin_util_a-glibcxx_sanity.$(OBJEXT) \
	compat/libbitcoin_util_a-strnlen.$(OBJEXT) \
	libbitcoin_util_a-fs.$(OBJEXT) \
	libbitcoin_util_a-logging.$(OBJEXT) \
	libbitcoin_util_a-random.$(OBJEXT) \
	rpc/libbitcoin_util_a-protocol.$(OBJEXT) \
	rpc/libbitcoin_util_a-text_writer.$(OBJEXT) \
	support/libbitcoin_util_a-cleanse.$(OBJEXT) \
	libbitcoin_util_a-sync.$(OBJEXT) \
	libbitcoin_util_a-threadinterrupt.$(OBJEXT) \
	libbitcoin_util_a-threadpriority.$(OBJEXT) \
	libbitcoin_util_a-util.$(OBJEXT) \
	libbitcoin_util_a-utilmoneystr.$(OBJEXT) \
	libbitcoin_util_a-utilstrencodings.$(OBJEXT) \
	libbitcoin_util_a-utiltime.$(OBJEXT) $(am__objects_4) \
	$(am__objects_5)
libbitcoin_util_a_OBJECTS = $(am_libbitcoin_util_a_OBJECTS)
libbitcoin_wallet_a_AR = $(AR) $(ARFLAGS)
libbitcoin_wallet_a_LIBADD =
am_libbitcoin_wallet_a_OBJECTS =  \
	wallet/libbitcoin_wallet_a-crypter.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-db.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-finaltx.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-rpcdump.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-rpcwallet.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-wallet.$(OBJEXT) \
	wallet/libbitcoin_wallet_a-walletdb.$(OBJEXT) $(am__objects_4)
libbitcoin_wallet_a_OBJECTS = $(am_libbitcoin_wallet_a_OBJECTS)
libbitcoin_zmq_a_AR = $(AR) $(ARFLAGS)
libbitcoin_zmq_a_LIBADD =
am__libbitcoin_zmq_a_SOURCES_DIST = zmq/zmq_publisher.cpp \
	zmq/zmqabstractnotifier.cpp zmq/zmqnotificationinterface.cpp \
	zmq/zmqpublishnotifier.cpp
#am_libbitcoin_zmq_a_OBJECTS =  \
#	zmq/libbitcoin_zmq_a-zmq_publisher.$(OBJEXT) \
#	zmq/libbitcoin_zmq_a-zmqabstractnotifier.$(OBJEXT) \
#	zmq/libbitcoin_zmq_a-zmqnotificationinterface.$(OBJEXT) \
#	zmq/libbitcoin_zmq_a-zmqpublishnotifier.$(OBJEXT)
libbitcoin_zmq_a_OBJECTS = $(am_libbitcoin_zmq_a_OBJECTS)
libbitcoinconsensus_la_DEPENDENCIES =  \
	$(LIBSECP256K1)
am__libbitcoinconsensus_la_SOURCES_DIST = crypto/aes.cpp crypto/aes.h \
	crypto/chacha20.h crypto/chacha20.cpp crypto/common.h \
	crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h crypto/sha256_sse4.cpp \
	amount.h arith_uint256.cpp arith_uint256.h big_int.cpp \
	big_int.h cfile_util.cpp cfile_util.h consensus/merkle.cpp \
	consensus/merkle.h consensus/params.h consensus/validation.h \
	ecc_guard.h hash.cpp hash.h prevector.h primitives/block.cpp \
	primitives/block.h primitives/transaction.cpp \
	primitives/transaction.h pubkey.cpp pubkey.h \
	script/bitcoinconsensus.cpp script/sighashtype.h \
	script/instruction.h script/instruction_iterator.h \
	script/interpreter.cpp script/interpreter.h \
	script/int_serialization.h script/limitedstack.cpp \
	script/limitedstack.h script/opcodes.cpp script/opcodes.h \
	script/script_flags.h script/script.cpp script/script.h \
	script/script_num.cpp script/script_num.h \
	script/script_error.cpp script/script_error.h serialize.h \
	taskcancellation.h taskcancellation.cpp tinyformat.h uint256.h \
	utilstrencodings.cpp utilstrencodings.h version.h \
	compat/glibc_compat.cpp
am__objects_6 =  \
	crypto/libbitcoinconsensus_la-sha256_sse4.lo
am__objects_7 = crypto/libbitcoinconsensus_la-aes.lo \
	crypto/libbitcoinconsensus_la-chacha20.lo \
	crypto/libbitcoinconsensus_la-hmac_sha256.lo \
	crypto/libbitcoinconsensus_la-hmac_sha512.lo \
	crypto/libbitcoinconsensus_la-ripemd160.lo \
	crypto/libbitcoinconsensus_la-sha1.lo \
	crypto/libbitcoinconsensus_la-sha256.lo \
	crypto/libbitcoinconsensus_la-sha512.lo $(am__objects_6)
am__objects_8 = libbitcoinconsensus_la-arith_uint256.lo \
	libbitcoinconsensus_la-big_int.lo \
	libbitcoinconsensus_la-cfile_util.lo \
	consensus/libbitcoinconsensus_la-merkle.lo \
	libbitcoinconsensus_la-hash.lo \
	primitives/libbitcoinconsensus_la-block.lo \
	primitives/libbitcoinconsensus_la-transaction.lo \
	libbitcoinconsensus_la-pubkey.lo \
	script/libbitcoinconsensus_la-bitcoinconsensus.lo \
	script/libbitcoinconsensus_la-interpreter.lo \
	script/libbitcoinconsensus_la-limitedstack.lo \
	script/libbitcoinconsensus_la-opcodes.lo \
	script/libbitcoinconsensus_la-script.lo \
	script/libbitcoinconsensus_la-script_num.lo \
	script/libbitcoinconsensus_la-script_error.lo \
	libbitcoinconsensus_la-taskcancellation.lo \
	libbitcoinconsensus_la-utilstrencodings.lo
#am__objects_9 = compat/libbitcoinconsensus_la-glibc_compat.lo
am_libbitcoinconsensus_la_OBJECTS =  \
	$(am__objects_7) $(am__objects_8) \
	$(am__objects_9)
libbitcoinconsensus_la_OBJECTS = $(am_libbitcoinconsensus_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libbitcoinconsensus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) \
	$(libbitcoinconsensus_la_LDFLAGS) $(LDFLAGS) -o $@
am_libbitcoinconsensus_la_rpath = -rpath \
	$(libdir)
am__bench_bench_bitcoin_SOURCES_DIST = bench/bench_bitcoin.cpp \
	bench/bench.cpp bench/bench.h bench/checkblock.cpp \
	bench/checkqueue.cpp bench/Examples.cpp bench/rollingbloom.cpp \
	bench/crypto_hash.cpp bench/ccoins_caching.cpp \
	bench/mempool_eviction.cpp bench/mempooltxdb.cpp \
	bench/base58.cpp bench/lockedpool.cpp bench/perf.cpp \
	bench/perf.h bench/cscript.cpp bench/interpreter.cpp \
	bench/serialisation.cpp bench/thread_safe_queue.cpp \
	bench/data/hexhdr.py bench/coin_selection.cpp
am__objects_10 = bench/bench_bitcoin-coin_selection.$(OBJEXT)
am_bench_bench_bitcoin_OBJECTS = bench/bench_bitcoin-bench_bitcoin.$(OBJEXT) \
	bench/bench_bitcoin-bench.$(OBJEXT) \
	bench/bench_bitcoin-checkblock.$(OBJEXT) \
	bench/bench_bitcoin-checkqueue.$(OBJEXT) \
	bench/bench_bitcoin-Examples.$(OBJEXT) \
	bench/bench_bitcoin-rollingbloom.$(OBJEXT) \
	bench/bench_bitcoin-crypto_hash.$(OBJEXT) \
	bench/bench_bitcoin-ccoins_caching.$(OBJEXT) \
	bench/bench_bitcoin-mempool_eviction.$(OBJEXT) \
	bench/bench_bitcoin-mempooltxdb.$(OBJEXT) \
	bench/bench_bitcoin-base58.$(OBJEXT) \
	bench/bench_bitcoin-lockedpool.$(OBJEXT) \
	bench/bench_bitcoin-perf.$(OBJEXT) \
	bench/bench_bitcoin-cscript.$(OBJEXT) \
	bench/bench_bitcoin-interpreter.$(OBJEXT) \
	bench/bench_bitcoin-serialisation.$(OBJEXT) \
	bench/bench_bitcoin-thread_safe_queue.$(OBJEXT) \
	$(am__objects_10)
#am__objects_11 =  \
#	$(am__objects_4) \
#	$(am__objects_4)
am__objects_11 = $(am__objects_4)
nodist_bench_bench_bitcoin_OBJECTS =  \
	$(am__objects_11)
bench_bench_bitcoin_OBJECTS = $(am_bench_bench_bitcoin_OBJECTS) \
	$(nodist_bench_bench_bitcoin_OBJECTS)
am__DEPENDENCIES_1 = $(am__append_18)
am__DEPENDENCIES_2 = $(am__append_19)
am__DEPENDENCIES_3 =
#am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3)
am__DEPENDENCIES_4 = univalue/libunivalue.la
#am__DEPENDENCIES_5 =  \
#	$(LIBBITCOIN_ZMQ) \
#	$(am__DEPENDENCIES_3)
bench_bench_bitcoin_DEPENDENCIES =  \
	$(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(am__DEPENDENCIES_1) \
	$(LIBCRC32C) $(am__DEPENDENCIES_2) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__append_37) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
bench_bench_bitcoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) \
	$(bench_bench_bitcoin_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoin_cli_SOURCES_DIST = bitcoin-cli.cpp bitcoin-cli-res.rc
#am__objects_12 = bitcoin-cli-res.$(OBJEXT)
am_bitcoin_cli_OBJECTS = bitcoin_cli-bitcoin-cli.$(OBJEXT) \
	$(am__objects_12)
bitcoin_cli_OBJECTS = $(am_bitcoin_cli_OBJECTS)
bitcoin_cli_DEPENDENCIES = $(LIBBITCOIN_CLI) $(am__DEPENDENCIES_4) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
bitcoin_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoin_cli_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoin_cli_LDFLAGS) $(LDFLAGS) -o $@
am_bitcoin_miner_OBJECTS = bitcoin_miner-bitcoin-miner.$(OBJEXT) \
	bitcoin_miner-arith_uint256.$(OBJEXT) \
	crypto/bitcoin_miner-sha512.$(OBJEXT) \
	crypto/bitcoin_miner-chacha20.$(OBJEXT)
bitcoin_miner_OBJECTS = $(am_bitcoin_miner_OBJECTS)
bitcoin_miner_DEPENDENCIES = $(LIBBITCOIN_CLI) $(LIBBITCOIN_CRYPTO) \
	$(am__DEPENDENCIES_4) $(LIBBITCOIN_UTIL) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
bitcoin_miner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) $(bitcoin_miner_LDFLAGS) \
	$(LDFLAGS) -o $@
am__bitcoin_tx_SOURCES_DIST = bitcoin-tx.cpp bitcoin-tx-res.rc
#am__objects_13 = bitcoin-tx-res.$(OBJEXT)
am_bitcoin_tx_OBJECTS = bitcoin_tx-bitcoin-tx.$(OBJEXT) \
	$(am__objects_13)
bitcoin_tx_OBJECTS = $(am_bitcoin_tx_OBJECTS)
bitcoin_tx_DEPENDENCIES = $(am__DEPENDENCIES_4) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBSECP256K1) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3)
bitcoin_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoin_tx_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoin_tx_LDFLAGS) $(LDFLAGS) -o $@
am__bitcoind_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc
#am__objects_14 = bitcoind-res.$(OBJEXT)
am_bitcoind_OBJECTS = bitcoind-bitcoind.$(OBJEXT) $(am__objects_14)
bitcoind_OBJECTS = $(am_bitcoind_OBJECTS)
bitcoind_DEPENDENCIES = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_COMMON) $(am__DEPENDENCIES_4) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_ZMQ) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(am__DEPENDENCIES_1) $(LIBCRC32C) \
	$(am__DEPENDENCIES_2) $(LIBSECP256K1) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
bitcoind_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bitcoind_CXXFLAGS) \
	$(CXXFLAGS) $(bitcoind_LDFLAGS) $(LDFLAGS) -o $@
am__test_test_bitcoin_SOURCES_DIST = test/alertnotify_tests.cpp \
	test/arith_uint256_tests.cpp test/scriptnum10.h \
	test/addrman_tests.cpp test/amount_tests.cpp \
	test/allocator_tests.cpp test/array_parser_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bip32_tests.cpp \
	test/big_int_tests.cpp test/blockcheck_tests.cpp \
	test/block_download_tracking_tests.cpp \
	test/blockencodings_tests.cpp test/blockfile_reading_tests.cpp \
	test/block_index_mutex_distribution_tests.cpp \
	test/block_info_tests.cpp \
	test/blockindex_with_descendants_tests.cpp \
	test/blockmaxsize_tests.cpp test/block_parser_tests.cpp \
	test/blocktxn_parser_tests.cpp test/blockstatus_tests.cpp \
	test/blockvalidationstatus_tests.cpp test/bloom_tests.cpp \
	test/bn_helpers.h test/bn_op_tests.cpp test/bswap_tests.cpp \
	test/checkpoints_tests.cpp test/checkqueue_tests.cpp \
	test/check_selfish_mining_tests.cpp \
	test/cmpctblock_parser_tests.cpp test/cmpct_size_tests.cpp \
	test/coins_tests.cpp \
	test/write_preferring_upgradable_mutex_tests.cpp \
	test/compress_tests.cpp test/config_tests.cpp \
	test/coinbase_doc_tests.cpp test/core_io_tests.cpp \
	test/cpfp_tests.cpp test/crypto_tests.cpp \
	test/cscript_tests.cpp test/cuckoocache_tests.cpp \
	test/dataref_index_tests.cpp test/datareftx_tests.cpp \
	test/dsattempt_tests.cpp test/dsdetected_tests.cpp \
	test/dstxn_serialiser_tests.cpp test/dbwrapper_tests.cpp \
	test/frozentxo_db_tests.cpp test/frozentxo_mempool_tests.cpp \
	test/frozentxo_tests.cpp test/DoS_tests.cpp \
	test/dstencode_tests.cpp test/enum_cast_tests.cpp \
	test/eviction_candidates_tracker_tests.cpp \
	test/excessiveblock_tests.cpp \
	test/fixed_len_multi_parser_tests.cpp \
	test/fixed_len_parser_tests.cpp test/getarg_tests.cpp \
	test/hash_tests.cpp test/instruction_iterator_tests.cpp \
	test/int_serialization_tests.cpp test/inv_tests.cpp \
	test/invalid_txn_publisher_tests.cpp \
	test/jba_selfish_mining_tests.cpp \
	test/journal_assembler_group_tests.cpp test/journal_tests.cpp \
	test/jsonutil.cpp test/json_tests.cpp test/jsonutil.h \
	test/key_tests.cpp test/leaky_bucket_tests.cpp \
	test/limitedmap_tests.cpp test/limitedstack_tests.cpp \
	test/locked_ref_tests.cpp test/m_candidates_tests.cpp \
	test/main_tests.cpp test/mempool_test_access.h \
	test/mempool_dump_load_tests.cpp test/mempool_limit_tests.cpp \
	test/mempool_snapshot_tests.cpp test/mempool_tests.cpp \
	test/mempooltxdb_tests.cpp test/merkle_tests.cpp \
	test/merkletreefile_readwrite_tests.cpp \
	test/mining_group_builder_tests.cpp test/miner_id_db_tests.cpp \
	test/miner_id_db_tests3.cpp test/miner_info_tests.cpp \
	test/miner_info_doc_tests.cpp test/miner_info_error_tests.cpp \
	test/miner_info_ref_tests.cpp test/miner_tests.cpp \
	test/minerid_tests.cpp test/mod_n_byte_parser.h \
	test/msg_buffer_tests.cpp test/msg_parser_buffer_tests.cpp \
	test/multisig_tests.cpp test/net_association_tests.cpp \
	test/net_message_tests.cpp test/net_message_maker_tests.cpp \
	test/net_tests.cpp test/netbase_tests.cpp \
	test/object_stream_deserialization_tests.cpp \
	test/opcode_tests.cpp test/pmt_tests.cpp \
	test/prefilled_tx_parser_tests.cpp \
	test/prefilled_txs_parser_tests.cpp test/pow_tests.cpp \
	test/prevector_tests.cpp test/protocol_tests.cpp \
	test/raii_event_tests.cpp test/random_tests.cpp \
	test/reverselock_tests.cpp test/revokemid_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp test/script_P2SH_tests.cpp \
	test/script_tests.cpp test/scriptflags.cpp test/scriptflags.h \
	test/script_macros.h test/scriptnum_tests.cpp \
	test/serialize_tests.cpp test/sighash_tests.cpp \
	test/sighashtype_tests.cpp test/sigopcount_tests.cpp \
	test/sigutil.cpp test/sigutil.h \
	test/single_seg_parser_tests.cpp test/skiplist_tests.cpp \
	test/streams_tests.cpp test/stream_serialization_tests.cpp \
	test/stream_test_helpers.h test/string_writer_tests.cpp \
	test/taskcancellation_tests.cpp test/test_bitcoin.cpp \
	test/test_bitcoin.h test/test_bitcoin_main.cpp \
	test/test_double_spend_detector.cpp test/test_orphantxns.cpp \
	test/test_recent_rejects.cpp test/test_txid_tracker.cpp \
	test/test_txnvalidation_utils.cpp test/test_txnvalidator.cpp \
	test/testutil.cpp test/testutil.h \
	test/thread_safe_queue_tests.cpp test/threadpool_tests.cpp \
	test/timedata_tests.cpp test/time_limited_blacklist_tests.cpp \
	test/time_locked_mempool_tests.cpp test/ttor_tests.cpp \
	test/transaction_tests.cpp test/txn_grouper_tests.cpp \
	test/txs_parser_tests.cpp test/tx_parser_tests.cpp \
	test/txvalidationcache_tests.cpp test/uint256_tests.cpp \
	test/undo_tests.cpp test/unique_array_tests.cpp \
	test/univalue_tests.cpp test/util_tests.cpp \
	test/validation_scheduler_tests.cpp test/validation_tests.cpp \
	test/webhook_client_tests.cpp \
	wallet/test/wallet_test_fixture.cpp \
	wallet/test/wallet_test_fixture.h \
	wallet/test/accounting_tests.cpp wallet/test/wallet_tests.cpp \
	wallet/test/walletdb_tests.cpp wallet/test/crypto_tests.cpp \
	test/data/script_tests.json test/data/base58_keys_valid.json \
	test/data/base58_encode_decode.json \
	test/data/base58_keys_invalid.json test/data/tx_invalid.json \
	test/data/tx_valid.json test/data/sighash.json \
	bench/data/block413567.raw
am__objects_15 = wallet/test/test_test_bitcoin-wallet_test_fixture.$(OBJEXT) \
	wallet/test/test_test_bitcoin-accounting_tests.$(OBJEXT) \
	wallet/test/test_test_bitcoin-wallet_tests.$(OBJEXT) \
	wallet/test/test_test_bitcoin-walletdb_tests.$(OBJEXT) \
	wallet/test/test_test_bitcoin-crypto_tests.$(OBJEXT)
am__objects_16 = test/test_bitcoin-alertnotify_tests.$(OBJEXT) \
	test/test_bitcoin-arith_uint256_tests.$(OBJEXT) \
	test/test_bitcoin-addrman_tests.$(OBJEXT) \
	test/test_bitcoin-amount_tests.$(OBJEXT) \
	test/test_bitcoin-allocator_tests.$(OBJEXT) \
	test/test_bitcoin-array_parser_tests.$(OBJEXT) \
	test/test_bitcoin-base32_tests.$(OBJEXT) \
	test/test_bitcoin-base58_tests.$(OBJEXT) \
	test/test_bitcoin-base64_tests.$(OBJEXT) \
	test/test_bitcoin-bip32_tests.$(OBJEXT) \
	test/test_bitcoin-big_int_tests.$(OBJEXT) \
	test/test_bitcoin-blockcheck_tests.$(OBJEXT) \
	test/test_bitcoin-block_download_tracking_tests.$(OBJEXT) \
	test/test_bitcoin-blockencodings_tests.$(OBJEXT) \
	test/test_bitcoin-blockfile_reading_tests.$(OBJEXT) \
	test/test_bitcoin-block_index_mutex_distribution_tests.$(OBJEXT) \
	test/test_bitcoin-block_info_tests.$(OBJEXT) \
	test/test_bitcoin-blockindex_with_descendants_tests.$(OBJEXT) \
	test/test_bitcoin-blockmaxsize_tests.$(OBJEXT) \
	test/test_bitcoin-block_parser_tests.$(OBJEXT) \
	test/test_bitcoin-blocktxn_parser_tests.$(OBJEXT) \
	test/test_bitcoin-blockstatus_tests.$(OBJEXT) \
	test/test_bitcoin-blockvalidationstatus_tests.$(OBJEXT) \
	test/test_bitcoin-bloom_tests.$(OBJEXT) \
	test/test_bitcoin-bn_op_tests.$(OBJEXT) \
	test/test_bitcoin-bswap_tests.$(OBJEXT) \
	test/test_bitcoin-checkpoints_tests.$(OBJEXT) \
	test/test_bitcoin-checkqueue_tests.$(OBJEXT) \
	test/test_bitcoin-check_selfish_mining_tests.$(OBJEXT) \
	test/test_bitcoin-cmpctblock_parser_tests.$(OBJEXT) \
	test/test_bitcoin-cmpct_size_tests.$(OBJEXT) \
	test/test_bitcoin-coins_tests.$(OBJEXT) \
	test/test_bitcoin-write_preferring_upgradable_mutex_tests.$(OBJEXT) \
	test/test_bitcoin-compress_tests.$(OBJEXT) \
	test/test_bitcoin-config_tests.$(OBJEXT) \
	test/test_bitcoin-coinbase_doc_tests.$(OBJEXT) \
	test/test_bitcoin-core_io_tests.$(OBJEXT) \
	test/test_bitcoin-cpfp_tests.$(OBJEXT) \
	test/test_bitcoin-crypto_tests.$(OBJEXT) \
	test/test_bitcoin-cscript_tests.$(OBJEXT) \
	test/test_bitcoin-cuckoocache_tests.$(OBJEXT) \
	test/test_bitcoin-dataref_index_tests.$(OBJEXT) \
	test/test_bitcoin-datareftx_tests.$(OBJEXT) \
	test/test_bitcoin-dsattempt_tests.$(OBJEXT) \
	test/test_bitcoin-dsdetected_tests.$(OBJEXT) \
	test/test_bitcoin-dstxn_serialiser_tests.$(OBJEXT) \
	test/test_bitcoin-dbwrapper_tests.$(OBJEXT) \
	test/test_bitcoin-frozentxo_db_tests.$(OBJEXT) \
	test/test_bitcoin-frozentxo_mempool_tests.$(OBJEXT) \
	test/test_bitcoin-frozentxo_tests.$(OBJEXT) \
	test/test_bitcoin-DoS_tests.$(OBJEXT) \
	test/test_bitcoin-dstencode_tests.$(OBJEXT) \
	test/test_bitcoin-enum_cast_tests.$(OBJEXT) \
	test/test_bitcoin-eviction_candidates_tracker_tests.$(OBJEXT) \
	test/test_bitcoin-excessiveblock_tests.$(OBJEXT) \
	test/test_bitcoin-fixed_len_multi_parser_tests.$(OBJEXT) \
	test/test_bitcoin-fixed_len_parser_tests.$(OBJEXT) \
	test/test_bitcoin-getarg_tests.$(OBJEXT) \
	test/test_bitcoin-hash_tests.$(OBJEXT) \
	test/test_bitcoin-instruction_iterator_tests.$(OBJEXT) \
	test/test_bitcoin-int_serialization_tests.$(OBJEXT) \
	test/test_bitcoin-inv_tests.$(OBJEXT) \
	test/test_bitcoin-invalid_txn_publisher_tests.$(OBJEXT) \
	test/test_bitcoin-jba_selfish_mining_tests.$(OBJEXT) \
	test/test_bitcoin-journal_assembler_group_tests.$(OBJEXT) \
	test/test_bitcoin-journal_tests.$(OBJEXT) \
	test/test_bitcoin-jsonutil.$(OBJEXT) \
	test/test_bitcoin-json_tests.$(OBJEXT) \
	test/test_bitcoin-key_tests.$(OBJEXT) \
	test/test_bitcoin-leaky_bucket_tests.$(OBJEXT) \
	test/test_bitcoin-limitedmap_tests.$(OBJEXT) \
	test/test_bitcoin-limitedstack_tests.$(OBJEXT) \
	test/test_bitcoin-locked_ref_tests.$(OBJEXT) \
	test/test_bitcoin-m_candidates_tests.$(OBJEXT) \
	test/test_bitcoin-main_tests.$(OBJEXT) \
	test/test_bitcoin-mempool_dump_load_tests.$(OBJEXT) \
	test/test_bitcoin-mempool_limit_tests.$(OBJEXT) \
	test/test_bitcoin-mempool_snapshot_tests.$(OBJEXT) \
	test/test_bitcoin-mempool_tests.$(OBJEXT) \
	test/test_bitcoin-mempooltxdb_tests.$(OBJEXT) \
	test/test_bitcoin-merkle_tests.$(OBJEXT) \
	test/test_bitcoin-merkletreefile_readwrite_tests.$(OBJEXT) \
	test/test_bitcoin-mining_group_builder_tests.$(OBJEXT) \
	test/test_bitcoin-miner_id_db_tests.$(OBJEXT) \
	test/test_bitcoin-miner_id_db_tests3.$(OBJEXT) \
	test/test_bitcoin-miner_info_tests.$(OBJEXT) \
	test/test_bitcoin-miner_info_doc_tests.$(OBJEXT) \
	test/test_bitcoin-miner_info_error_tests.$(OBJEXT) \
	test/test_bitcoin-miner_info_ref_tests.$(OBJEXT) \
	test/test_bitcoin-miner_tests.$(OBJEXT) \
	test/test_bitcoin-minerid_tests.$(OBJEXT) \
	test/test_bitcoin-msg_buffer_tests.$(OBJEXT) \
	test/test_bitcoin-msg_parser_buffer_tests.$(OBJEXT) \
	test/test_bitcoin-multisig_tests.$(OBJEXT) \
	test/test_bitcoin-net_association_tests.$(OBJEXT) \
	test/test_bitcoin-net_message_tests.$(OBJEXT) \
	test/test_bitcoin-net_message_maker_tests.$(OBJEXT) \
	test/test_bitcoin-net_tests.$(OBJEXT) \
	test/test_bitcoin-netbase_tests.$(OBJEXT) \
	test/test_bitcoin-object_stream_deserialization_tests.$(OBJEXT) \
	test/test_bitcoin-opcode_tests.$(OBJEXT) \
	test/test_bitcoin-pmt_tests.$(OBJEXT) \
	test/test_bitcoin-prefilled_tx_parser_tests.$(OBJEXT) \
	test/test_bitcoin-prefilled_txs_parser_tests.$(OBJEXT) \
	test/test_bitcoin-pow_tests.$(OBJEXT) \
	test/test_bitcoin-prevector_tests.$(OBJEXT) \
	test/test_bitcoin-protocol_tests.$(OBJEXT) \
	test/test_bitcoin-raii_event_tests.$(OBJEXT) \
	test/test_bitcoin-random_tests.$(OBJEXT) \
	test/test_bitcoin-reverselock_tests.$(OBJEXT) \
	test/test_bitcoin-revokemid_tests.$(OBJEXT) \
	test/test_bitcoin-rpc_tests.$(OBJEXT) \
	test/test_bitcoin-sanity_tests.$(OBJEXT) \
	test/test_bitcoin-scheduler_tests.$(OBJEXT) \
	test/test_bitcoin-script_P2SH_tests.$(OBJEXT) \
	test/test_bitcoin-script_tests.$(OBJEXT) \
	test/test_bitcoin-scriptflags.$(OBJEXT) \
	test/test_bitcoin-scriptnum_tests.$(OBJEXT) \
	test/test_bitcoin-serialize_tests.$(OBJEXT) \
	test/test_bitcoin-sighash_tests.$(OBJEXT) \
	test/test_bitcoin-sighashtype_tests.$(OBJEXT) \
	test/test_bitcoin-sigopcount_tests.$(OBJEXT) \
	test/test_bitcoin-sigutil.$(OBJEXT) \
	test/test_bitcoin-single_seg_parser_tests.$(OBJEXT) \
	test/test_bitcoin-skiplist_tests.$(OBJEXT) \
	test/test_bitcoin-streams_tests.$(OBJEXT) \
	test/test_bitcoin-stream_serialization_tests.$(OBJEXT) \
	test/test_bitcoin-string_writer_tests.$(OBJEXT) \
	test/test_bitcoin-taskcancellation_tests.$(OBJEXT) \
	test/test_bitcoin-test_bitcoin.$(OBJEXT) \
	test/test_bitcoin-test_bitcoin_main.$(OBJEXT) \
	test/test_bitcoin-test_double_spend_detector.$(OBJEXT) \
	test/test_bitcoin-test_orphantxns.$(OBJEXT) \
	test/test_bitcoin-test_recent_rejects.$(OBJEXT) \
	test/test_bitcoin-test_txid_tracker.$(OBJEXT) \
	test/test_bitcoin-test_txnvalidation_utils.$(OBJEXT) \
	test/test_bitcoin-test_txnvalidator.$(OBJEXT) \
	test/test_bitcoin-testutil.$(OBJEXT) \
	test/test_bitcoin-thread_safe_queue_tests.$(OBJEXT) \
	test/test_bitcoin-threadpool_tests.$(OBJEXT) \
	test/test_bitcoin-timedata_tests.$(OBJEXT) \
	test/test_bitcoin-time_limited_blacklist_tests.$(OBJEXT) \
	test/test_bitcoin-time_locked_mempool_tests.$(OBJEXT) \
	test/test_bitcoin-ttor_tests.$(OBJEXT) \
	test/test_bitcoin-transaction_tests.$(OBJEXT) \
	test/test_bitcoin-txn_grouper_tests.$(OBJEXT) \
	test/test_bitcoin-txs_parser_tests.$(OBJEXT) \
	test/test_bitcoin-tx_parser_tests.$(OBJEXT) \
	test/test_bitcoin-txvalidationcache_tests.$(OBJEXT) \
	test/test_bitcoin-uint256_tests.$(OBJEXT) \
	test/test_bitcoin-undo_tests.$(OBJEXT) \
	test/test_bitcoin-unique_array_tests.$(OBJEXT) \
	test/test_bitcoin-univalue_tests.$(OBJEXT) \
	test/test_bitcoin-util_tests.$(OBJEXT) \
	test/test_bitcoin-validation_scheduler_tests.$(OBJEXT) \
	test/test_bitcoin-validation_tests.$(OBJEXT) \
	test/test_bitcoin-webhook_client_tests.$(OBJEXT) \
	$(am__objects_15)
am_test_test_bitcoin_OBJECTS = $(am__objects_16) \
	$(am__objects_4) $(am__objects_4)
nodist_test_test_bitcoin_OBJECTS =  \
	$(am__objects_11)
test_test_bitcoin_OBJECTS = $(am_test_test_bitcoin_OBJECTS) \
	$(nodist_test_test_bitcoin_OBJECTS)
#am__DEPENDENCIES_6 =  \
#	$(LIBBITCOIN_ZMQ) \
#	$(am__DEPENDENCIES_3)
test_test_bitcoin_DEPENDENCIES = $(am__append_31) \
	$(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(LIBCRC32C) \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(LIBBITCOIN_CONSENSUS) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_6)
test_test_bitcoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) \
	$(test_test_bitcoin_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/bitcoin_cli-bitcoin-cli.Po \
	./$(DEPDIR)/bitcoin_miner-arith_uint256.Po \
	./$(DEPDIR)/bitcoin_miner-bitcoin-miner.Po \
	./$(DEPDIR)/bitcoin_tx-bitcoin-tx.Po \
	./$(DEPDIR)/bitcoind-bitcoind.Po \
	./$(DEPDIR)/libbitcoin_cli_a-cfile_util.Po \
	./$(DEPDIR)/libbitcoin_common_a-amount.Po \
	./$(DEPDIR)/libbitcoin_common_a-base58.Po \
	./$(DEPDIR)/libbitcoin_common_a-chainparams.Po \
	./$(DEPDIR)/libbitcoin_common_a-coins.Po \
	./$(DEPDIR)/libbitcoin_common_a-compressor.Po \
	./$(DEPDIR)/libbitcoin_common_a-config.Po \
	./$(DEPDIR)/libbitcoin_common_a-core_read.Po \
	./$(DEPDIR)/libbitcoin_common_a-core_write.Po \
	./$(DEPDIR)/libbitcoin_common_a-dstencode.Po \
	./$(DEPDIR)/libbitcoin_common_a-key.Po \
	./$(DEPDIR)/libbitcoin_common_a-keystore.Po \
	./$(DEPDIR)/libbitcoin_common_a-protocol.Po \
	./$(DEPDIR)/libbitcoin_common_a-scheduler.Po \
	./$(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Po \
	./$(DEPDIR)/libbitcoin_common_a-txhasher.Po \
	./$(DEPDIR)/libbitcoin_common_a-warnings.Po \
	./$(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Po \
	./$(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po \
	./$(DEPDIR)/libbitcoin_consensus_a-big_int.Po \
	./$(DEPDIR)/libbitcoin_consensus_a-cfile_util.Po \
	./$(DEPDIR)/libbitcoin_consensus_a-hash.Po \
	./$(DEPDIR)/libbitcoin_consensus_a-pubkey.Po \
	./$(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Po \
	./$(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Po \
	./$(DEPDIR)/libbitcoin_server_a-abort_node.Po \
	./$(DEPDIR)/libbitcoin_server_a-addrdb.Po \
	./$(DEPDIR)/libbitcoin_server_a-addrman.Po \
	./$(DEPDIR)/libbitcoin_server_a-block_file_access.Po \
	./$(DEPDIR)/libbitcoin_server_a-block_file_info.Po \
	./$(DEPDIR)/libbitcoin_server_a-block_index.Po \
	./$(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Po \
	./$(DEPDIR)/libbitcoin_server_a-blockencodings.Po \
	./$(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Po \
	./$(DEPDIR)/libbitcoin_server_a-bloom.Po \
	./$(DEPDIR)/libbitcoin_server_a-chain.Po \
	./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po \
	./$(DEPDIR)/libbitcoin_server_a-dbwrapper.Po \
	./$(DEPDIR)/libbitcoin_server_a-frozentxo.Po \
	./$(DEPDIR)/libbitcoin_server_a-frozentxo_db.Po \
	./$(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Po \
	./$(DEPDIR)/libbitcoin_server_a-httprpc.Po \
	./$(DEPDIR)/libbitcoin_server_a-httpserver.Po \
	./$(DEPDIR)/libbitcoin_server_a-init.Po \
	./$(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Po \
	./$(DEPDIR)/libbitcoin_server_a-mempooltxdb.Po \
	./$(DEPDIR)/libbitcoin_server_a-merkleblock.Po \
	./$(DEPDIR)/libbitcoin_server_a-merkleproof.Po \
	./$(DEPDIR)/libbitcoin_server_a-merkletree.Po \
	./$(DEPDIR)/libbitcoin_server_a-merkletreedb.Po \
	./$(DEPDIR)/libbitcoin_server_a-merkletreestore.Po \
	./$(DEPDIR)/libbitcoin_server_a-noui.Po \
	./$(DEPDIR)/libbitcoin_server_a-orphan_txns.Po \
	./$(DEPDIR)/libbitcoin_server_a-pow.Po \
	./$(DEPDIR)/libbitcoin_server_a-processing_block_index.Po \
	./$(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Po \
	./$(DEPDIR)/libbitcoin_server_a-rest.Po \
	./$(DEPDIR)/libbitcoin_server_a-safe_mode.Po \
	./$(DEPDIR)/libbitcoin_server_a-taskcancellation.Po \
	./$(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Po \
	./$(DEPDIR)/libbitcoin_server_a-timedata.Po \
	./$(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Po \
	./$(DEPDIR)/libbitcoin_server_a-txdb.Po \
	./$(DEPDIR)/libbitcoin_server_a-txmempool.Po \
	./$(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Po \
	./$(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Po \
	./$(DEPDIR)/libbitcoin_server_a-txn_grouper.Po \
	./$(DEPDIR)/libbitcoin_server_a-txn_propagator.Po \
	./$(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Po \
	./$(DEPDIR)/libbitcoin_server_a-txn_validation_data.Po \
	./$(DEPDIR)/libbitcoin_server_a-txn_validator.Po \
	./$(DEPDIR)/libbitcoin_server_a-ui_interface.Po \
	./$(DEPDIR)/libbitcoin_server_a-unique_array.Po \
	./$(DEPDIR)/libbitcoin_server_a-validation.Po \
	./$(DEPDIR)/libbitcoin_server_a-validationinterface.Po \
	./$(DEPDIR)/libbitcoin_server_a-vmtouch.Po \
	./$(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po \
	./$(DEPDIR)/libbitcoin_util_a-clientversion.Po \
	./$(DEPDIR)/libbitcoin_util_a-fs.Po \
	./$(DEPDIR)/libbitcoin_util_a-logging.Po \
	./$(DEPDIR)/libbitcoin_util_a-random.Po \
	./$(DEPDIR)/libbitcoin_util_a-sync.Po \
	./$(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po \
	./$(DEPDIR)/libbitcoin_util_a-threadpriority.Po \
	./$(DEPDIR)/libbitcoin_util_a-util.Po \
	./$(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po \
	./$(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po \
	./$(DEPDIR)/libbitcoin_util_a-utiltime.Po \
	./$(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Plo \
	./$(DEPDIR)/libbitcoinconsensus_la-big_int.Plo \
	./$(DEPDIR)/libbitcoinconsensus_la-cfile_util.Plo \
	./$(DEPDIR)/libbitcoinconsensus_la-hash.Plo \
	./$(DEPDIR)/libbitcoinconsensus_la-pubkey.Plo \
	./$(DEPDIR)/libbitcoinconsensus_la-taskcancellation.Plo \
	./$(DEPDIR)/libbitcoinconsensus_la-utilstrencodings.Plo \
	bench/$(DEPDIR)/bench_bitcoin-Examples.Po \
	bench/$(DEPDIR)/bench_bitcoin-base58.Po \
	bench/$(DEPDIR)/bench_bitcoin-bench.Po \
	bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Po \
	bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Po \
	bench/$(DEPDIR)/bench_bitcoin-checkblock.Po \
	bench/$(DEPDIR)/bench_bitcoin-checkqueue.Po \
	bench/$(DEPDIR)/bench_bitcoin-coin_selection.Po \
	bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Po \
	bench/$(DEPDIR)/bench_bitcoin-cscript.Po \
	bench/$(DEPDIR)/bench_bitcoin-interpreter.Po \
	bench/$(DEPDIR)/bench_bitcoin-lockedpool.Po \
	bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Po \
	bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Po \
	bench/$(DEPDIR)/bench_bitcoin-perf.Po \
	bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Po \
	bench/$(DEPDIR)/bench_bitcoin-serialisation.Po \
	bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Po \
	compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po \
	compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po \
	compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po \
	compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po \
	compat/$(DEPDIR)/libbitcoinconsensus_la-glibc_compat.Plo \
	consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po \
	consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Plo \
	crypto/$(DEPDIR)/bitcoin_miner-chacha20.Po \
	crypto/$(DEPDIR)/bitcoin_miner-sha512.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Po \
	crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Po \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Plo \
	crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Plo \
	double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Po \
	double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Po \
	double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Po \
	double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Po \
	invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Po \
	invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Po \
	leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Po \
	leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Po \
	leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-c.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po \
	leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po \
	leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-block.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-format.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-table.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po \
	leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-env.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-options.Po \
	leveldb/util/$(DEPDIR)/libleveldb_a-status.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Po \
	miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-assembler.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-candidates.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-factory.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-journal.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Po \
	mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Po \
	net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Po \
	net/$(DEPDIR)/libbitcoin_cli_a-netbase.Po \
	net/$(DEPDIR)/libbitcoin_common_a-netaddress.Po \
	net/$(DEPDIR)/libbitcoin_common_a-netbase.Po \
	net/$(DEPDIR)/libbitcoin_server_a-association.Po \
	net/$(DEPDIR)/libbitcoin_server_a-association_id.Po \
	net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Po \
	net/$(DEPDIR)/libbitcoin_server_a-block_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Po \
	net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Po \
	net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Po \
	net/$(DEPDIR)/libbitcoin_server_a-net.Po \
	net/$(DEPDIR)/libbitcoin_server_a-net_message.Po \
	net/$(DEPDIR)/libbitcoin_server_a-net_processing.Po \
	net/$(DEPDIR)/libbitcoin_server_a-node_state.Po \
	net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-stream.Po \
	net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Po \
	net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Po \
	net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Po \
	net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Po \
	policy/$(DEPDIR)/libbitcoin_server_a-fees.Po \
	policy/$(DEPDIR)/libbitcoin_server_a-policy.Po \
	primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po \
	primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po \
	primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Plo \
	primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Plo \
	rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po \
	rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Po \
	rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Po \
	rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Po \
	rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Po \
	rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-abc.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-net.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-server.Po \
	rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Po \
	rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po \
	rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Po \
	script/$(DEPDIR)/libbitcoin_common_a-sign.Po \
	script/$(DEPDIR)/libbitcoin_common_a-standard.Po \
	script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po \
	script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po \
	script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Po \
	script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Po \
	script/$(DEPDIR)/libbitcoin_consensus_a-script.Po \
	script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po \
	script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Po \
	script/$(DEPDIR)/libbitcoin_server_a-ismine.Po \
	script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Po \
	script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po \
	script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Plo \
	script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Plo \
	script/$(DEPDIR)/libbitcoinconsensus_la-limitedstack.Plo \
	script/$(DEPDIR)/libbitcoinconsensus_la-opcodes.Plo \
	script/$(DEPDIR)/libbitcoinconsensus_la-script.Plo \
	script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Plo \
	script/$(DEPDIR)/libbitcoinconsensus_la-script_num.Plo \
	support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po \
	support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po \
	test/$(DEPDIR)/test_bitcoin-DoS_tests.Po \
	test/$(DEPDIR)/test_bitcoin-addrman_tests.Po \
	test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Po \
	test/$(DEPDIR)/test_bitcoin-allocator_tests.Po \
	test/$(DEPDIR)/test_bitcoin-amount_tests.Po \
	test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Po \
	test/$(DEPDIR)/test_bitcoin-array_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-base32_tests.Po \
	test/$(DEPDIR)/test_bitcoin-base58_tests.Po \
	test/$(DEPDIR)/test_bitcoin-base64_tests.Po \
	test/$(DEPDIR)/test_bitcoin-big_int_tests.Po \
	test/$(DEPDIR)/test_bitcoin-bip32_tests.Po \
	test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Po \
	test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Po \
	test/$(DEPDIR)/test_bitcoin-block_info_tests.Po \
	test/$(DEPDIR)/test_bitcoin-block_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Po \
	test/$(DEPDIR)/test_bitcoin-bloom_tests.Po \
	test/$(DEPDIR)/test_bitcoin-bn_op_tests.Po \
	test/$(DEPDIR)/test_bitcoin-bswap_tests.Po \
	test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Po \
	test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Po \
	test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Po \
	test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Po \
	test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Po \
	test/$(DEPDIR)/test_bitcoin-coins_tests.Po \
	test/$(DEPDIR)/test_bitcoin-compress_tests.Po \
	test/$(DEPDIR)/test_bitcoin-config_tests.Po \
	test/$(DEPDIR)/test_bitcoin-core_io_tests.Po \
	test/$(DEPDIR)/test_bitcoin-cpfp_tests.Po \
	test/$(DEPDIR)/test_bitcoin-crypto_tests.Po \
	test/$(DEPDIR)/test_bitcoin-cscript_tests.Po \
	test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Po \
	test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Po \
	test/$(DEPDIR)/test_bitcoin-datareftx_tests.Po \
	test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Po \
	test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Po \
	test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Po \
	test/$(DEPDIR)/test_bitcoin-dstencode_tests.Po \
	test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Po \
	test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Po \
	test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Po \
	test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Po \
	test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Po \
	test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Po \
	test/$(DEPDIR)/test_bitcoin-getarg_tests.Po \
	test/$(DEPDIR)/test_bitcoin-hash_tests.Po \
	test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Po \
	test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Po \
	test/$(DEPDIR)/test_bitcoin-inv_tests.Po \
	test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Po \
	test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Po \
	test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Po \
	test/$(DEPDIR)/test_bitcoin-journal_tests.Po \
	test/$(DEPDIR)/test_bitcoin-json_tests.Po \
	test/$(DEPDIR)/test_bitcoin-jsonutil.Po \
	test/$(DEPDIR)/test_bitcoin-key_tests.Po \
	test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Po \
	test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Po \
	test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Po \
	test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Po \
	test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Po \
	test/$(DEPDIR)/test_bitcoin-main_tests.Po \
	test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Po \
	test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Po \
	test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Po \
	test/$(DEPDIR)/test_bitcoin-mempool_tests.Po \
	test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Po \
	test/$(DEPDIR)/test_bitcoin-merkle_tests.Po \
	test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Po \
	test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Po \
	test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Po \
	test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Po \
	test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Po \
	test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Po \
	test/$(DEPDIR)/test_bitcoin-miner_info_tests.Po \
	test/$(DEPDIR)/test_bitcoin-miner_tests.Po \
	test/$(DEPDIR)/test_bitcoin-minerid_tests.Po \
	test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Po \
	test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Po \
	test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Po \
	test/$(DEPDIR)/test_bitcoin-multisig_tests.Po \
	test/$(DEPDIR)/test_bitcoin-net_association_tests.Po \
	test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Po \
	test/$(DEPDIR)/test_bitcoin-net_message_tests.Po \
	test/$(DEPDIR)/test_bitcoin-net_tests.Po \
	test/$(DEPDIR)/test_bitcoin-netbase_tests.Po \
	test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Po \
	test/$(DEPDIR)/test_bitcoin-opcode_tests.Po \
	test/$(DEPDIR)/test_bitcoin-pmt_tests.Po \
	test/$(DEPDIR)/test_bitcoin-pow_tests.Po \
	test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-prevector_tests.Po \
	test/$(DEPDIR)/test_bitcoin-protocol_tests.Po \
	test/$(DEPDIR)/test_bitcoin-raii_event_tests.Po \
	test/$(DEPDIR)/test_bitcoin-random_tests.Po \
	test/$(DEPDIR)/test_bitcoin-reverselock_tests.Po \
	test/$(DEPDIR)/test_bitcoin-revokemid_tests.Po \
	test/$(DEPDIR)/test_bitcoin-rpc_tests.Po \
	test/$(DEPDIR)/test_bitcoin-sanity_tests.Po \
	test/$(DEPDIR)/test_bitcoin-scheduler_tests.Po \
	test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Po \
	test/$(DEPDIR)/test_bitcoin-script_tests.Po \
	test/$(DEPDIR)/test_bitcoin-scriptflags.Po \
	test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Po \
	test/$(DEPDIR)/test_bitcoin-serialize_tests.Po \
	test/$(DEPDIR)/test_bitcoin-sighash_tests.Po \
	test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Po \
	test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Po \
	test/$(DEPDIR)/test_bitcoin-sigutil.Po \
	test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-skiplist_tests.Po \
	test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Po \
	test/$(DEPDIR)/test_bitcoin-streams_tests.Po \
	test/$(DEPDIR)/test_bitcoin-string_writer_tests.Po \
	test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Po \
	test/$(DEPDIR)/test_bitcoin-test_bitcoin.Po \
	test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Po \
	test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Po \
	test/$(DEPDIR)/test_bitcoin-test_orphantxns.Po \
	test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Po \
	test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Po \
	test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Po \
	test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Po \
	test/$(DEPDIR)/test_bitcoin-testutil.Po \
	test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Po \
	test/$(DEPDIR)/test_bitcoin-threadpool_tests.Po \
	test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Po \
	test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Po \
	test/$(DEPDIR)/test_bitcoin-timedata_tests.Po \
	test/$(DEPDIR)/test_bitcoin-transaction_tests.Po \
	test/$(DEPDIR)/test_bitcoin-ttor_tests.Po \
	test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Po \
	test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Po \
	test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Po \
	test/$(DEPDIR)/test_bitcoin-uint256_tests.Po \
	test/$(DEPDIR)/test_bitcoin-undo_tests.Po \
	test/$(DEPDIR)/test_bitcoin-unique_array_tests.Po \
	test/$(DEPDIR)/test_bitcoin-univalue_tests.Po \
	test/$(DEPDIR)/test_bitcoin-util_tests.Po \
	test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Po \
	test/$(DEPDIR)/test_bitcoin-validation_tests.Po \
	test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Po \
	test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Po \
	wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po \
	wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po \
	wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Po \
	wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po \
	wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po \
	wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po \
	wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po \
	wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Po \
	wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po \
	wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po \
	wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po \
	wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po \
	zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Po \
	zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po \
	zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po \
	zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(crypto_libbitcoin_crypto_a_SOURCES) \
	$(leveldb_crc32c_libcrc32c_a_SOURCES) \
	$(leveldb_crc32c_libcrc32c_sse42_a_SOURCES) \
	$(leveldb_libleveldb_a_SOURCES) $(leveldb_libmemenv_a_SOURCES) \
	$(libbitcoin_cli_a_SOURCES) $(libbitcoin_common_a_SOURCES) \
	$(libbitcoin_consensus_a_SOURCES) \
	$(libbitcoin_server_a_SOURCES) $(libbitcoin_util_a_SOURCES) \
	$(libbitcoin_wallet_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) \
	$(libbitcoinconsensus_la_SOURCES) \
	$(bench_bench_bitcoin_SOURCES) \
	$(nodist_bench_bench_bitcoin_SOURCES) $(bitcoin_cli_SOURCES) \
	$(bitcoin_miner_SOURCES) $(bitcoin_tx_SOURCES) \
	$(bitcoind_SOURCES) $(test_test_bitcoin_SOURCES) \
	$(nodist_test_test_bitcoin_SOURCES)
DIST_SOURCES = $(am__crypto_libbitcoin_crypto_a_SOURCES_DIST) \
	$(am__leveldb_crc32c_libcrc32c_a_SOURCES_DIST) \
	$(am__leveldb_crc32c_libcrc32c_sse42_a_SOURCES_DIST) \
	$(am__leveldb_libleveldb_a_SOURCES_DIST) \
	$(am__leveldb_libmemenv_a_SOURCES_DIST) \
	$(libbitcoin_cli_a_SOURCES) $(libbitcoin_common_a_SOURCES) \
	$(libbitcoin_consensus_a_SOURCES) \
	$(libbitcoin_server_a_SOURCES) \
	$(am__libbitcoin_util_a_SOURCES_DIST) \
	$(libbitcoin_wallet_a_SOURCES) \
	$(am__libbitcoin_zmq_a_SOURCES_DIST) \
	$(am__libbitcoinconsensus_la_SOURCES_DIST) \
	$(am__bench_bench_bitcoin_SOURCES_DIST) \
	$(am__bitcoin_cli_SOURCES_DIST) $(bitcoin_miner_SOURCES) \
	$(am__bitcoin_tx_SOURCES_DIST) $(am__bitcoind_SOURCES_DIST) \
	$(am__test_test_bitcoin_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = script/bitcoinconsensus.h
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.bench.include \
	$(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.leveldb.include \
	$(srcdir)/Makefile.test.include \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/build-aux/missing aclocal-1.16
AIO_LIBS = -lrt
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = /usr/bin/ar
AUTOCONF = ${SHELL} /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/build-aux/missing automake-1.16
AWK = gawk
BDB_CFLAGS = 
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-5.3
BITCOIN_CLI_NAME = bitcoin-cli
BITCOIN_DAEMON_NAME = bitcoind
BITCOIN_TX_NAME = bitcoin-tx
BOOST_CHRONO_LIB = -lboost_chrono
BOOST_CPPFLAGS = -DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC -pthread -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_LIBS = -L/usr/lib/x86_64-linux-gnu -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework
BREW = 
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CLIENT_VERSION_BUILD = 0
CLIENT_VERSION_IS_RELEASE = false
CLIENT_VERSION_MAJOR = 1
CLIENT_VERSION_MINOR = 1
CLIENT_VERSION_REVISION = 0
COMPAT_LDFLAGS = 
COPYRIGHT_HOLDERS = The %s Association
COPYRIGHT_HOLDERS_FINAL = The Bitcoin Association
COPYRIGHT_HOLDERS_SUBSTITUTION = Bitcoin
COPYRIGHT_YEAR = 2024
CPP = gcc -E
CPPFILT = /usr/bin/c++filt
CPPFLAGS =  -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS
CRYPTO_CFLAGS = 
CRYPTO_LIBS = -lcrypto 
CXX = g++ -std=c++20
CXXCPP = g++ -std=c++20 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -Wall -Wextra -Wformat -Wvla -Wformat-security -Wno-unused-parameter
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ERROR_CXXFLAGS = 
EVENT_CFLAGS = 
EVENT_LIBS = -levent 
EVENT_PTHREADS_CFLAGS = 
EVENT_PTHREADS_LIBS = -levent_pthreads -levent 
EXEEXT = 
EXTENDED_FUNCTIONAL_TESTS = 
FGREP = /usr/bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/bin/git
GREP = /usr/bin/grep
HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
HARDENED_CXXFLAGS =  -Wstack-protector -fstack-protector-all -fwrapv
HARDENED_LDFLAGS =  -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack -Wl,-z,nodlopen -pie
HAVE_BUILTIN_PREFETCH = 1
HAVE_CXX20 = 1
HAVE_FDATASYNC = 1
HAVE_FULLFSYNC = 0
HAVE_MM_PREFETCH = 1
HAVE_O_CLOEXEC = 1
HAVE_STRONG_GETAUXVAL = 1
HAVE_WEAK_GETAUXVAL = 1
HEXDUMP = /usr/bin/hexdump
IMAGEMAGICK_CONVERT = 
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEVELDB_CPPFLAGS =  $(am__append_20)
LIBLEVELDB =  $(am__append_18)
LIBMEMENV =  $(am__append_19)
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = 
MAKEINFO = ${SHELL} /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/build-aux/missing makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = 
MINIUPNPC_LIBS = 
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJCOPY = /usr/bin/objcopy
OBJCXX = g++ -std=c++20
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OPENSSL_LIBS = -lssl  -lcrypto 
OTOOL = 
OTOOL64 = 
PACKAGE = bitcoin-sv
PACKAGE_BUGREPORT = https://github.com/bitcoin-sv/bitcoin-sv/issues
PACKAGE_NAME = Bitcoin SV
PACKAGE_STRING = Bitcoin SV 1.1.0
PACKAGE_TARNAME = bitcoin-sv
PACKAGE_URL = https://bitcoinsv.io/
PACKAGE_VERSION = 1.1.0
PATH_SEPARATOR = :
PIC_FLAGS = -fPIC
PIE_FLAGS = -fPIE
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PORT = 
PROTOBUF_LIBS = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python3
PYTHONPATH = 
QR_LIBS = 
RANLIB = /usr/bin/ranlib
READELF = /usr/bin/readelf
RELDFLAGS = 
RSVG_CONVERT = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSE42_CXXFLAGS = -msse4.2
SSL_CFLAGS = 
SSL_LIBS = -lssl 
STRIP = /usr/bin/strip
TBB_LIBS = 
TESTDEFS =  -DBOOST_TEST_DYN_LINK
TIFFCP = 
UNIVALUE_CFLAGS = -I$(srcdir)/univalue/include
UNIVALUE_LIBS = univalue/libunivalue.la
USE_UPNP = 
VERSION = 1.1.0
WINDOWS_BITS = 
WINDRES = 
XGETTEXT = /usr/bin/xgettext
ZMQ_CFLAGS = 
ZMQ_LIBS = 
abs_builddir = /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/src
abs_srcdir = /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/src
abs_top_builddir = /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0
abs_top_srcdir = /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/allanregistos/apps/bsv/bitcoin-sv-1.1.0/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/univalue src/secp256k1
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
DIST_SUBDIRS = secp256k1 univalue
AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) \
	$(am__append_5)
AM_CXXFLAGS = $(HARDENED_CXXFLAGS) $(ERROR_CXXFLAGS)
AM_CPPFLAGS = $(HARDENED_CPPFLAGS)

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
EXTRA_LIBRARIES = $(LIBBITCOIN_CRYPTO) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_WALLET) \
	$(LIBBITCOIN_ZMQ) $(am__append_10) $(am__append_15) \
	$(am__append_17)
#LIBUNIVALUE = $(UNIVALUE_LIBS)
LIBUNIVALUE = univalue/libunivalue.la
BITCOIN_INCLUDES = -I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) \
	$(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) \
	$(SSL_CFLAGS) -I$(srcdir)/secp256k1/include $(UNIVALUE_CFLAGS)
LIBBITCOIN_SERVER = libbitcoin_server.a
LIBBITCOIN_COMMON = libbitcoin_common.a
LIBBITCOIN_CONSENSUS = libbitcoin_consensus.a
LIBBITCOIN_CLI = libbitcoin_cli.a
LIBBITCOIN_UTIL = libbitcoin_util.a
LIBBITCOIN_CRYPTO = crypto/libbitcoin_crypto.a
LIBSECP256K1 = secp256k1/libsecp256k1.la
#LIBBITCOIN_ZMQ = libbitcoin_zmq.a
LIBBITCOINCONSENSUS = libbitcoinconsensus.la
LIBBITCOIN_WALLET = libbitcoin_wallet.a
lib_LTLIBRARIES = $(LIBBITCOINCONSENSUS)
BENCHMARKS = 
# bitcoin core #
BITCOIN_CORE_H = \
  abort_node.h \
  addrdb.h \
  addrman.h \
  async_file_reader.h \
  base58.h \
  bloom.h \
  block_hasher.h \
  block_index.h \
  block_index_store.h \
  block_index_store_loader.h \
  dirty_block_index_store.h \
  blockencodings.h \
  blockfileinfostore.h \
  block_file_access.h \
  block_file_info.h \
  blockindex_with_descendants.h \
  blockstreams.h \
  blockvalidation.h \
  cfile_util.h \
  chain.h \
  chainparams.h \
  chainparamsbase.h \
  chainparamsseeds.h \
  checkpoints.h \
  checkqueue.h \
  checkqueuepool.h \
  clientversion.h \
  coins.h \
  miner_id/coinbase_doc.h \
  compat.h \
  compat/byteswap.h \
  compat/endian.h \
  compat/sanity.h \
  compiler_warnings.h \
  compressor.h \
  config.h \
  consensus/consensus.h \
  core_io.h \
  core_memusage.h \
  cuckoocache.h \
  disk_block_index.h \
  disk_block_pos.h \
  disk_tx_pos.h \
  double_spend/dsattempt_handler.h \
  double_spend/dscallback_msg.h \
  double_spend/dsdetected_defaults.h \
  double_spend/dsdetected_message.h \
  double_spend/dstxn_serialiser.h \
  double_spend/time_limited_blacklist.h \
  dstencode.h \
  enum_cast.h \
  frozentxo.h \
  frozentxo_db.h \
  frozentxo_logging.h \
  fs.h \
  httprpc.h \
  httpserver.h \
  indirectmap.h \
  init.h \
  invalid_txn_publisher.h \
  invalid_txn_sinks/file_sink.h \
  invalid_txn_sinks/zmq_sink.h \
  key.h \
  keystore.h \
  dbwrapper.h \
  leaky_bucket.h \
  limitedmap.h \
  limited_cache.h \
  locked_ref.h \
  logging.h \
  memusage.h \
  mempooltxdb.h \
  merkleblock.h \
  merkleproof.h \
  merkletree.h \
  merkletreedb.h \
  merkletreestore.h \
  metrics.h \
  miner_id/dataref_index.h \
  miner_id/dataref_index_detail.h \
  miner_id/datareftx.h \
  miner_id/miner_id.h \
  miner_id/miner_id_db.h \
  miner_id/miner_id_db_defaults.h \
  miner_id/miner_info.h \
  miner_id/miner_info_doc.h \
  miner_id/miner_info_error.h \
  miner_id/miner_info_ref.h \
  miner_id/revokemid.h \
  miner_id/miner_info_tracker.h \
  mining/assembler.h \
  mining/candidates.h \
  mining/factory.h \
  mining/group_builder.h \
  mining/journal.h \
  mining/journal_builder.h \
  mining/journal_change_set.h \
  mining/journal_entry.h \
  mining/journaling_block_assembler.h \
  net/array_parser.h \
  net/association.h \
  net/association_id.h \
  net/authconn.h \
  net/block_download_tracker.h \
  net/block_parser.h \
  net/blocktxn_parser.h \
  net/cmpct_size.h \
  net/cmpctblock_parser.h \
  net/fixed_len_multi_parser.h \
  net/fixed_len_parser.h \
  net/msg_buffer.h \
  net/msg_parser.h \
  net/msg_parser_buffer.h \
  net/net.h \
  net/netaddress.h \
  net/netbase.h \
  net/net_message.h \
  net/net_processing.h \
  net/net_types.h \
  net/node_state.h \
  net/node_stats.h \
  net/parser_utils.h \
  net/prefilled_tx_parser.h \
  net/p2p_msg_lengths.h \
  net/send_queue_bytes.h \
  net/single_seg_parser.h \
  net/stream.h \
  net/stream_policy.h \
  net/stream_policy_factory.h \
  net/tx_parser.h \
  net/validation_scheduler.h \
  netmessagemaker.h \
  noui.h \
  orphan_txns.h \
  policy/fees.h \
  policy/policy.h \
  pow.h \
  processing_block_index.h \
  protocol.h \
  random.h \
  rawtxvalidator.h \
  reverselock.h \
  rpc/blockchain.h \
  rpc/client.h \
  rpc/client_config.h \
  rpc/client_utils.h \
  rpc/http_protocol.h \
  rpc/http_request.h \
  rpc/http_response.h \
  rpc/jsonwriter.h \
  rpc/mining.h \
  rpc/misc.h \
  rpc/protocol.h \
  rpc/server.h \
  rpc/tojson.h \
  rpc/register.h \
  rpc/text_writer.h \
  rpc/webhook_client.h \
  rpc/webhook_client_defaults.h \
  safe_mode.h \
  scheduler.h \
  script_config.h \
  script/scriptcache.h \
  script/sigcache.h \
  script/sign.h \
  script/standard.h \
  script/ismine.h \
  streams.h \
  support/allocators/secure.h \
  support/allocators/zeroafterfree.h \
  support/cleanse.h \
  support/events.h \
  support/lockedpool.h \
  sync.h \
  task.h \
  taskcancellation.h \
  task_helpers.h \
  thread_safe_queue.h \
  threadpool.h \
  threadpoolT.h \
  threadpriority.h \
  threadsafety.h \
  threadinterrupt.h \
  timedata.h \
  time_locked_mempool.h \
  transaction_specific_config.h \
  txdb.h \
  txhasher.h \
  txmempool.h \
  txmempoolevictioncandidates.h \
  tx_mempool_info.h \
  txn_double_spend_detector.h \
  txn_grouper.h \
  txn_handlers.h \
  txn_propagator.h \
  txn_recent_rejects.h \
  txn_sending_details.h \
  txn_util.h \
  txn_validation_config.h \
  txn_validation_data.h \
  txn_validation_result.h \
  txn_validator.h \
  ui_interface.h \
  undo.h \
  unique_array.h \
  util.h \
  utilmoneystr.h \
  utiltime.h \
  validation.h \
  validationinterface.h \
  versionbits.h \
  vmtouch.h \
  wallet/coincontrol.h \
  wallet/crypter.h \
  wallet/db.h \
  wallet/finaltx.h \
  wallet/rpcdump.h \
  wallet/rpcwallet.h \
  wallet/wallet.h \
  wallet/walletdb.h \
  warnings.h \
  write_preferring_upgradable_mutex.h \
  zmq/zmq_publisher.h \
  zmq/zmqabstractnotifier.h \
  zmq/zmqconfig.h\
  zmq/zmqnotificationinterface.h \
  zmq/zmqpublishnotifier.h


# server:
libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)
libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_server_a_SOURCES = \
  abort_node.cpp \
  addrman.cpp \
  addrdb.cpp \
  bloom.cpp \
  block_index.cpp \
  blockencodings.cpp \
  block_file_info.cpp \
  blockfileinfostore.cpp \
  block_file_access.cpp \
  block_index_store_loader.cpp \
  chain.cpp \
  checkpoints.cpp \
  miner_id/coinbase_doc.cpp \
  frozentxo.cpp \
  frozentxo_db.cpp \
  frozentxo_logging.cpp \
  httprpc.cpp \
  httpserver.cpp \
  init.cpp \
  invalid_txn_publisher.cpp \
  invalid_txn_sinks/file_sink.cpp \
  invalid_txn_sinks/zmq_sink.cpp \
  dbwrapper.cpp \
  double_spend/dsattempt_handler.cpp \
  double_spend/dscallback_msg.cpp \
  double_spend/dsdetected_message.cpp \
  double_spend/dstxn_serialiser.cpp \
  mempooltxdb.cpp \
  merkleblock.cpp \
  merkleproof.cpp \
  merkletree.cpp \
  merkletreedb.cpp \
  merkletreestore.cpp \
  miner_id/dataref_index.cpp \
  miner_id/datareftx.cpp \
  miner_id/miner_id.cpp \
  miner_id/miner_id_db.cpp \
  miner_id/miner_info.cpp \
  miner_id/miner_info_doc.cpp \
  miner_id/miner_info_error.cpp \
  miner_id/miner_info_ref.cpp \
  miner_id/revokemid.cpp \
  miner_id/miner_info_tracker.cpp \
  mining/assembler.cpp \
  mining/candidates.cpp \
  mining/factory.cpp \
  mining/group_builder.cpp \
  mining/journal.cpp \
  mining/journal_builder.cpp \
  mining/journal_change_set.cpp \
  mining/journal_entry.cpp \
  mining/journaling_block_assembler.cpp \
  net/association.cpp \
  net/association_id.cpp \
  net/block_download_tracker.cpp \
  net/block_parser.cpp \
  net/blocktxn_parser.cpp \
  net/cmpct_size.cpp \
  net/cmpctblock_parser.cpp \
  net/fixed_len_multi_parser.cpp \
  net/fixed_len_parser.cpp \
  net/msg_buffer.cpp \
  net/msg_parser_buffer.cpp \
  net/net.cpp \
  net/net_message.cpp \
  net/net_processing.cpp \
  net/node_state.cpp \
  net/prefilled_tx_parser.cpp \
  net/single_seg_parser.cpp \
  net/stream.cpp \
  net/stream_policy.cpp \
  net/stream_policy_factory.cpp \
  net/tx_parser.cpp \
  net/validation_scheduler.cpp \
  noui.cpp \
  orphan_txns.cpp \
  policy/fees.cpp \
  policy/policy.cpp \
  pow.cpp \
  processing_block_index.cpp \
  rawtxvalidator.cpp \
  rest.cpp \
  rpc/abc.cpp \
  rpc/blockchain.cpp \
  rpc/frozentxo_rpc.cpp \
  rpc/mining.cpp \
  rpc/miner_info.cpp \
  rpc/mining-fbb.cpp \
  rpc/misc.cpp \
  rpc/net.cpp \
  rpc/rawtransaction.cpp \
  rpc/safe_mode.cpp \
  rpc/server.cpp \
  rpc/webhook_client.cpp \
  safe_mode.cpp \
  script/scriptcache.cpp \
  script/sigcache.cpp \
  script/ismine.cpp \
  taskcancellation.cpp \
  timedata.cpp \
  time_locked_mempool.cpp \
  txdb.cpp \
  txmempool.cpp \
  txmempoolevictioncandidates.cpp \
  tx_mempool_info.cpp \
  txn_double_spend_detector.cpp \
  txn_grouper.cpp \
  txn_propagator.cpp \
  txn_validation_data.cpp \
  txn_recent_rejects.cpp \
  txn_validator.cpp \
  ui_interface.cpp \
  unique_array.cpp \
  validation.cpp \
  validationinterface.cpp \
  vmtouch.cpp \
  $(BITCOIN_CORE_H)

#libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)
#libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
#libbitcoin_zmq_a_SOURCES = \
#  zmq/zmq_publisher.cpp \
#  zmq/zmqabstractnotifier.cpp \
#  zmq/zmqnotificationinterface.cpp \
#  zmq/zmqpublishnotifier.cpp


# wallet: only linked when wallet enabled
libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_wallet_a_SOURCES = \
  wallet/crypter.cpp \
  wallet/db.cpp \
  wallet/finaltx.cpp \
  wallet/rpcdump.cpp \
  wallet/rpcwallet.cpp \
  wallet/wallet.cpp \
  wallet/walletdb.cpp \
  $(BITCOIN_CORE_H)


# crypto primitives library
crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS)
crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
crypto_libbitcoin_crypto_a_SOURCES = crypto/aes.cpp crypto/aes.h \
	crypto/chacha20.h crypto/chacha20.cpp crypto/common.h \
	crypto/hmac_sha256.cpp crypto/hmac_sha256.h \
	crypto/hmac_sha512.cpp crypto/hmac_sha512.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h $(am__append_3)

# consensus: shared between all executables that validate any consensus rules.
libbitcoin_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS) $(BITCOIN_INCLUDES)
libbitcoin_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS) $(PIE_FLAGS)
libbitcoin_consensus_a_SOURCES = \
  amount.h \
  arith_uint256.cpp \
  arith_uint256.h \
  big_int.cpp \
  big_int.h \
  cfile_util.cpp \
  cfile_util.h \
  consensus/merkle.cpp \
  consensus/merkle.h \
  consensus/params.h \
  consensus/validation.h \
  ecc_guard.h \
  hash.cpp \
  hash.h \
  prevector.h \
  primitives/block.cpp \
  primitives/block.h \
  primitives/transaction.cpp \
  primitives/transaction.h \
  pubkey.cpp \
  pubkey.h \
  script/bitcoinconsensus.cpp \
  script/sighashtype.h \
  script/instruction.h \
  script/instruction_iterator.h \
  script/interpreter.cpp \
  script/interpreter.h \
  script/int_serialization.h \
  script/limitedstack.cpp \
  script/limitedstack.h \
  script/opcodes.cpp \
  script/opcodes.h \
  script/script_flags.h \
  script/script.cpp \
  script/script.h \
  script/script_num.cpp \
  script/script_num.h \
  script/script_error.cpp \
  script/script_error.h \
  serialize.h \
  taskcancellation.h \
  taskcancellation.cpp \
  tinyformat.h \
  uint256.h \
  utilstrencodings.cpp \
  utilstrencodings.h \
  version.h


# common: shared between bitcoind and non-server tools
libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_common_a_SOURCES = \
  amount.cpp \
  base58.cpp \
  chainparams.cpp \
  config.cpp \
  coins.cpp \
  compressor.cpp \
  dstencode.cpp \
  core_read.cpp \
  core_write.cpp \
  key.cpp \
  keystore.cpp \
  net/netaddress.cpp \
  net/netbase.cpp \
  protocol.cpp \
  rpc/jsonwriter.cpp \
  scheduler.cpp \
  script/sign.cpp \
  script/standard.cpp \
  transaction_specific_config.cpp \
  txhasher.cpp \
  warnings.cpp \
  write_preferring_upgradable_mutex.cpp \
  $(BITCOIN_CORE_H)


# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_util_a_SOURCES = support/lockedpool.cpp chainparamsbase.cpp \
	clientversion.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp fs.cpp \
	logging.cpp random.cpp rpc/protocol.cpp rpc/text_writer.cpp \
	support/cleanse.cpp sync.cpp threadinterrupt.cpp \
	threadpriority.cpp uint256.h util.cpp utilmoneystr.cpp \
	utilstrencodings.cpp utiltime.cpp $(BITCOIN_CORE_H) \
	$(am__append_4)

# cli:
libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libbitcoin_cli_a_SOURCES = \
  cfile_util.cpp \
  net/netaddress.cpp \
  net/netbase.cpp \
  rpc/client.cpp \
  rpc/client_config.cpp \
  rpc/client_utils.cpp \
  rpc/http_request.cpp \
  rpc/http_response.cpp \
  $(BITCOIN_CORE_H)


# bitcoind binary #
bitcoind_SOURCES = bitcoind.cpp $(am__append_6)
bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitcoind_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_COMMON) $(LIBUNIVALUE) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_ZMQ) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) $(LIBCRC32C) $(LIBMEMENV) \
	$(LIBSECP256K1) $(BOOST_LIBS) $(BDB_LIBS) $(OPENSSL_LIBS) \
	$(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(ZMQ_LIBS) $(AIO_LIBS) $(TBB_LIBS)

# bitcoin-cli binary #
bitcoin_cli_SOURCES = bitcoin-cli.cpp $(am__append_7)
bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitcoin_cli_LDADD = $(LIBBITCOIN_CLI) $(LIBUNIVALUE) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CRYPTO) $(BOOST_LIBS) \
	$(OPENSSL_LIBS) $(EVENT_LIBS)
#

# bitcoin-tx binary #
bitcoin_tx_SOURCES = bitcoin-tx.cpp $(am__append_8)
bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)
bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitcoin_tx_LDADD = $(LIBUNIVALUE) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBSECP256K1) $(BOOST_LIBS) \
	$(OPENSSL_LIBS)
#

# bitcoin-miner binary #
bitcoin_miner_SOURCES = bitcoin-miner.cpp \
arith_uint256.cpp \
arith_uint256.h \
uint256.h \
crypto/sha512.cpp \
crypto/sha512.h \
crypto/chacha20.cpp \
crypto/chacha20.h

bitcoin_miner_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)
bitcoin_miner_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bitcoin_miner_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
bitcoin_miner_LDADD = $(LIBBITCOIN_CLI) $(LIBBITCOIN_CRYPTO) \
	$(LIBUNIVALUE) $(LIBBITCOIN_UTIL) $(BOOST_LIBS) \
	$(OPENSSL_LIBS) $(EVENT_LIBS)
#

# bitcoinconsensus library #
include_HEADERS = script/bitcoinconsensus.h
libbitcoinconsensus_la_SOURCES = $(crypto_libbitcoin_crypto_a_SOURCES) \
	$(libbitcoin_consensus_a_SOURCES) \
	$(am__append_9)
libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
libbitcoinconsensus_la_LIBADD = $(LIBSECP256K1)
libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL
libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(BITCOIN_INCLUDES) $(OPENSSL_INCLUDES) $(OPENSSL_LDFLAGS) $(OPENSSL_LIBS) $(PIE_FLAGS)

#
CTAES_DIST = crypto/ctaes/bench.c crypto/ctaes/ctaes.c \
	crypto/ctaes/ctaes.h crypto/ctaes/README.md \
	crypto/ctaes/test.c
CLEANFILES = $(EXTRA_LIBRARIES) *.gcda *.gcno compat/*.gcda \
	compat/*.gcno consensus/*.gcda consensus/*.gcno crypto/*.gcda \
	crypto/*.gcno policy/*.gcda policy/*.gcno primitives/*.gcda \
	primitives/*.gcno rpc/*.gcda rpc/*.gcno script/*.gcda \
	script/*.gcno support/*.gcda support/*.gcno univalue/*.gcda \
	univalue/*.gcno wallet/*.gcda wallet/*.gcno wallet/test/*.gcda \
	wallet/test/*.gcno zmq/*.gcda zmq/*.gcno $(am__append_33) \
	$(am__append_38)
DISTCLEANFILES = obj/build.h
EXTRA_DIST = $(CTAES_DIST) $(am__append_28)
LIBCRC32C_INT = leveldb/crc32c/libcrc32c.a
LIBCRC32C = $(LIBCRC32C_INT) $(am__append_16)
CRC32C_CPPFLAGS_INT =  \
	-I$(srcdir)/leveldb/crc32c/include \
	-DHAVE_BUILTIN_PREFETCH=1 \
	-DHAVE_MM_PREFETCH=1 \
	-DHAVE_STRONG_GETAUXVAL=1 \
	-DHAVE_WEAK_GETAUXVAL=1 \
	-DCRC32C_TESTS_BUILT_WITH_GLOG=0 \
	$(am__append_11) $(am__append_12) \
	$(am__append_13) $(am__append_14)
leveldb_crc32c_libcrc32c_a_CPPFLAGS = $(AM_CPPFLAGS) $(CRC32C_CPPFLAGS_INT) $(CRC32C_CPPFLAGS)
leveldb_crc32c_libcrc32c_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
leveldb_crc32c_libcrc32c_a_SOURCES =  \
	leveldb/crc32c/include/crc32c/crc32c.h \
	leveldb/crc32c/src/crc32c_arm64.h \
	leveldb/crc32c/src/crc32c_arm64_check.h \
	leveldb/crc32c/src/crc32c_internal.h \
	leveldb/crc32c/src/crc32c_prefetch.h \
	leveldb/crc32c/src/crc32c_read_le.h \
	leveldb/crc32c/src/crc32c_round_up.h \
	leveldb/crc32c/src/crc32c_sse42_check.h \
	leveldb/crc32c/src/crc32c_sse42.h \
	leveldb/crc32c/src/crc32c.cc \
	leveldb/crc32c/src/crc32c_portable.cc
LIBCRC32C_SSE42_INT = leveldb/crc32c/libcrc32c_sse42.a
leveldb_crc32c_libcrc32c_sse42_a_CPPFLAGS = $(leveldb_crc32c_libcrc32c_a_CPPFLAGS)
leveldb_crc32c_libcrc32c_sse42_a_CXXFLAGS = $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(SSE42_CXXFLAGS)
leveldb_crc32c_libcrc32c_sse42_a_SOURCES = leveldb/crc32c/src/crc32c_sse42.cc
LIBLEVELDB_INT = leveldb/libleveldb.a
LIBMEMENV_INT = leveldb/libmemenv.a
LEVELDB_CPPFLAGS_INT = -I$(srcdir)/leveldb \
	-I$(srcdir)/leveldb/crc32c/include \
	-D__STDC_LIMIT_MACROS -DHAVE_SNAPPY=0 \
	-DHAVE_CRC32C=1 \
	-DHAVE_FDATASYNC=1 \
	-DHAVE_FULLFSYNC=0 \
	-DHAVE_O_CLOEXEC=1 \
	$(am__append_21) $(am__append_22) \
	$(am__append_23) $(am__append_24)
leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)
leveldb_libleveldb_a_CXXFLAGS = $(filter-out -Wconditional-uninitialized -Werror=conditional-uninitialized -Wsuggest-override -Werror=suggest-override, $(AM_CXXFLAGS)) $(PIE_FLAGS)
leveldb_libleveldb_a_SOURCES =  \
	leveldb/port/port_stdcxx.h \
	leveldb/port/port.h \
	leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h \
	leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h \
	leveldb/include/leveldb/export.h \
	leveldb/include/leveldb/c.h \
	leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h \
	leveldb/db/log_format.h \
	leveldb/db/memtable.h \
	leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h \
	leveldb/db/filename.h \
	leveldb/db/version_edit.h \
	leveldb/db/dbformat.h \
	leveldb/db/builder.h \
	leveldb/db/log_writer.h \
	leveldb/db/db_iter.h \
	leveldb/db/skiplist.h \
	leveldb/db/db_impl.h \
	leveldb/db/table_cache.h \
	leveldb/db/snapshot.h \
	leveldb/db/log_reader.h \
	leveldb/table/filter_block.h \
	leveldb/table/block_builder.h \
	leveldb/table/block.h \
	leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h \
	leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h \
	leveldb/util/crc32c.h \
	leveldb/util/env_posix_test_helper.h \
	leveldb/util/env_windows_test_helper.h \
	leveldb/util/arena.h \
	leveldb/util/random.h \
	leveldb/util/posix_logger.h \
	leveldb/util/hash.h \
	leveldb/util/histogram.h \
	leveldb/util/coding.h \
	leveldb/util/testutil.h \
	leveldb/util/mutexlock.h \
	leveldb/util/logging.h \
	leveldb/util/no_destructor.h \
	leveldb/util/windows_logger.h \
	leveldb/db/builder.cc leveldb/db/c.cc \
	leveldb/db/dbformat.cc \
	leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc \
	leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc \
	leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc \
	leveldb/db/memtable.cc \
	leveldb/db/repair.cc \
	leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc \
	leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc \
	leveldb/table/block_builder.cc \
	leveldb/table/block.cc \
	leveldb/table/filter_block.cc \
	leveldb/table/format.cc \
	leveldb/table/iterator.cc \
	leveldb/table/merger.cc \
	leveldb/table/table_builder.cc \
	leveldb/table/table.cc \
	leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc \
	leveldb/util/bloom.cc \
	leveldb/util/cache.cc \
	leveldb/util/coding.cc \
	leveldb/util/comparator.cc \
	leveldb/util/crc32c.cc \
	leveldb/util/env.cc \
	leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc \
	leveldb/util/histogram.cc \
	leveldb/util/logging.cc \
	leveldb/util/options.cc \
	leveldb/util/status.cc $(am__append_25) \
	$(am__append_26)
leveldb_libmemenv_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)
leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)
leveldb_libmemenv_a_SOURCES =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
LOG_DRIVER = $(srcdir)/test/test-bitcoin-driver
TEST_SRCDIR = test
TEST_BINARY = test/test_bitcoin$(EXEEXT)
JSON_TEST_FILES = \
  test/data/script_tests.json \
  test/data/base58_keys_valid.json \
  test/data/base58_encode_decode.json \
  test/data/base58_keys_invalid.json \
  test/data/tx_invalid.json \
  test/data/tx_valid.json \
  test/data/sighash.json

RAW_TEST_FILES = \
  bench/data/block413567.raw

RAW_TEST_FILES = 
GENERATED_TEST_FILES = $(RAW_TEST_FILES:.raw=.raw.h)
GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)

# test_bitcoin binary #
BITCOIN_TESTS = test/alertnotify_tests.cpp \
	test/arith_uint256_tests.cpp \
	test/scriptnum10.h test/addrman_tests.cpp \
	test/amount_tests.cpp \
	test/allocator_tests.cpp \
	test/array_parser_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bip32_tests.cpp \
	test/big_int_tests.cpp \
	test/blockcheck_tests.cpp \
	test/block_download_tracking_tests.cpp \
	test/blockencodings_tests.cpp \
	test/blockfile_reading_tests.cpp \
	test/block_index_mutex_distribution_tests.cpp \
	test/block_info_tests.cpp \
	test/blockindex_with_descendants_tests.cpp \
	test/blockmaxsize_tests.cpp \
	test/block_parser_tests.cpp \
	test/blocktxn_parser_tests.cpp \
	test/blockstatus_tests.cpp \
	test/blockvalidationstatus_tests.cpp \
	test/bloom_tests.cpp test/bn_helpers.h \
	test/bn_op_tests.cpp test/bswap_tests.cpp \
	test/checkpoints_tests.cpp \
	test/checkqueue_tests.cpp \
	test/check_selfish_mining_tests.cpp \
	test/cmpctblock_parser_tests.cpp \
	test/cmpct_size_tests.cpp \
	test/coins_tests.cpp \
	test/write_preferring_upgradable_mutex_tests.cpp \
	test/compress_tests.cpp \
	test/config_tests.cpp \
	test/coinbase_doc_tests.cpp \
	test/core_io_tests.cpp test/cpfp_tests.cpp \
	test/crypto_tests.cpp \
	test/cscript_tests.cpp \
	test/cuckoocache_tests.cpp \
	test/dataref_index_tests.cpp \
	test/datareftx_tests.cpp \
	test/dsattempt_tests.cpp \
	test/dsdetected_tests.cpp \
	test/dstxn_serialiser_tests.cpp \
	test/dbwrapper_tests.cpp \
	test/frozentxo_db_tests.cpp \
	test/frozentxo_mempool_tests.cpp \
	test/frozentxo_tests.cpp test/DoS_tests.cpp \
	test/dstencode_tests.cpp \
	test/enum_cast_tests.cpp \
	test/eviction_candidates_tracker_tests.cpp \
	test/excessiveblock_tests.cpp \
	test/fixed_len_multi_parser_tests.cpp \
	test/fixed_len_parser_tests.cpp \
	test/getarg_tests.cpp test/hash_tests.cpp \
	test/instruction_iterator_tests.cpp \
	test/int_serialization_tests.cpp \
	test/inv_tests.cpp \
	test/invalid_txn_publisher_tests.cpp \
	test/jba_selfish_mining_tests.cpp \
	test/journal_assembler_group_tests.cpp \
	test/journal_tests.cpp test/jsonutil.cpp \
	test/json_tests.cpp test/jsonutil.h \
	test/key_tests.cpp \
	test/leaky_bucket_tests.cpp \
	test/limitedmap_tests.cpp \
	test/limitedstack_tests.cpp \
	test/locked_ref_tests.cpp \
	test/m_candidates_tests.cpp \
	test/main_tests.cpp \
	test/mempool_test_access.h \
	test/mempool_dump_load_tests.cpp \
	test/mempool_limit_tests.cpp \
	test/mempool_snapshot_tests.cpp \
	test/mempool_tests.cpp \
	test/mempooltxdb_tests.cpp \
	test/merkle_tests.cpp \
	test/merkletreefile_readwrite_tests.cpp \
	test/mining_group_builder_tests.cpp \
	test/miner_id_db_tests.cpp \
	test/miner_id_db_tests3.cpp \
	test/miner_info_tests.cpp \
	test/miner_info_doc_tests.cpp \
	test/miner_info_error_tests.cpp \
	test/miner_info_ref_tests.cpp \
	test/miner_tests.cpp test/minerid_tests.cpp \
	test/mod_n_byte_parser.h \
	test/msg_buffer_tests.cpp \
	test/msg_parser_buffer_tests.cpp \
	test/multisig_tests.cpp \
	test/net_association_tests.cpp \
	test/net_message_tests.cpp \
	test/net_message_maker_tests.cpp \
	test/net_tests.cpp test/netbase_tests.cpp \
	test/object_stream_deserialization_tests.cpp \
	test/opcode_tests.cpp test/pmt_tests.cpp \
	test/prefilled_tx_parser_tests.cpp \
	test/prefilled_txs_parser_tests.cpp \
	test/pow_tests.cpp test/prevector_tests.cpp \
	test/protocol_tests.cpp \
	test/raii_event_tests.cpp \
	test/random_tests.cpp \
	test/reverselock_tests.cpp \
	test/revokemid_tests.cpp test/rpc_tests.cpp \
	test/sanity_tests.cpp \
	test/scheduler_tests.cpp \
	test/script_P2SH_tests.cpp \
	test/script_tests.cpp test/scriptflags.cpp \
	test/scriptflags.h test/script_macros.h \
	test/scriptnum_tests.cpp \
	test/serialize_tests.cpp \
	test/sighash_tests.cpp \
	test/sighashtype_tests.cpp \
	test/sigopcount_tests.cpp test/sigutil.cpp \
	test/sigutil.h \
	test/single_seg_parser_tests.cpp \
	test/skiplist_tests.cpp \
	test/streams_tests.cpp \
	test/stream_serialization_tests.cpp \
	test/stream_test_helpers.h \
	test/string_writer_tests.cpp \
	test/taskcancellation_tests.cpp \
	test/test_bitcoin.cpp test/test_bitcoin.h \
	test/test_bitcoin_main.cpp \
	test/test_double_spend_detector.cpp \
	test/test_orphantxns.cpp \
	test/test_recent_rejects.cpp \
	test/test_txid_tracker.cpp \
	test/test_txnvalidation_utils.cpp \
	test/test_txnvalidator.cpp \
	test/testutil.cpp test/testutil.h \
	test/thread_safe_queue_tests.cpp \
	test/threadpool_tests.cpp \
	test/timedata_tests.cpp \
	test/time_limited_blacklist_tests.cpp \
	test/time_locked_mempool_tests.cpp \
	test/ttor_tests.cpp \
	test/transaction_tests.cpp \
	test/txn_grouper_tests.cpp \
	test/txs_parser_tests.cpp \
	test/tx_parser_tests.cpp \
	test/txvalidationcache_tests.cpp \
	test/uint256_tests.cpp test/undo_tests.cpp \
	test/unique_array_tests.cpp \
	test/univalue_tests.cpp test/util_tests.cpp \
	test/validation_scheduler_tests.cpp \
	test/validation_tests.cpp \
	test/webhook_client_tests.cpp \
	$(am__append_30)
test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)
test_test_bitcoin_LDADD = $(am__append_31) \
	$(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) \
	$(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \
	$(LIBLEVELDB) $(LIBCRC32C) $(LIBMEMENV) \
	$(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
	$(LIBSECP256K1) $(EVENT_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(AIO_LIBS) \
	$(TBB_LIBS) $(LIBBITCOIN_CONSENSUS) \
	$(BDB_LIBS) $(OPENSSL_LIBS) \
	$(MINIUPNPC_LIBS) $(am__append_32)
test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
#
nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)
CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)
BENCH_SRCDIR = bench
BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)
bench_bench_bitcoin_SOURCES =  \
	bench/bench_bitcoin.cpp bench/bench.cpp \
	bench/bench.h bench/checkblock.cpp \
	bench/checkqueue.cpp bench/Examples.cpp \
	bench/rollingbloom.cpp \
	bench/crypto_hash.cpp \
	bench/ccoins_caching.cpp \
	bench/mempool_eviction.cpp \
	bench/mempooltxdb.cpp bench/base58.cpp \
	bench/lockedpool.cpp bench/perf.cpp \
	bench/perf.h bench/cscript.cpp \
	bench/interpreter.cpp \
	bench/serialisation.cpp \
	bench/thread_safe_queue.cpp \
	bench/data/hexhdr.py $(am__append_36)
nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_TEST_FILES)
bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bench_bench_bitcoin_LDADD = $(LIBBITCOIN_SERVER) \
	$(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) \
	$(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) \
	$(LIBBITCOIN_CRYPTO) $(LIBLEVELDB) \
	$(LIBCRC32C) $(LIBMEMENV) $(LIBSECP256K1) \
	$(LIBUNIVALUE) $(am__append_35) \
	$(am__append_37) $(BOOST_LIBS) $(BDB_LIBS) \
	$(OPENSSL_LIBS) $(MINIUPNPC_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(AIO_LIBS) $(TBB_LIBS)
bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_TEST_FILES)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/Makefile.crc32c.include $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.bench.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-aes.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-chacha20.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-hmac_sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-hmac_sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-ripemd160.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-sha1.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-sha256.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-sha512.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoin_crypto_a-sha256_sse4.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libbitcoin_crypto.a: $(crypto_libbitcoin_crypto_a_OBJECTS) $(crypto_libbitcoin_crypto_a_DEPENDENCIES) $(EXTRA_crypto_libbitcoin_crypto_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libbitcoin_crypto.a
	$(AM_V_AR)$(crypto_libbitcoin_crypto_a_AR) crypto/libbitcoin_crypto.a $(crypto_libbitcoin_crypto_a_OBJECTS) $(crypto_libbitcoin_crypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libbitcoin_crypto.a
leveldb/crc32c/src/$(am__dirstamp):
	@$(MKDIR_P) leveldb/crc32c/src
	@: > leveldb/crc32c/src/$(am__dirstamp)
leveldb/crc32c/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/crc32c/src/$(DEPDIR)
	@: > leveldb/crc32c/src/$(DEPDIR)/$(am__dirstamp)
leveldb/crc32c/src/libcrc32c_a-crc32c.$(OBJEXT):  \
	leveldb/crc32c/src/$(am__dirstamp) \
	leveldb/crc32c/src/$(DEPDIR)/$(am__dirstamp)
leveldb/crc32c/src/libcrc32c_a-crc32c_portable.$(OBJEXT):  \
	leveldb/crc32c/src/$(am__dirstamp) \
	leveldb/crc32c/src/$(DEPDIR)/$(am__dirstamp)
leveldb/crc32c/$(am__dirstamp):
	@$(MKDIR_P) leveldb/crc32c
	@: > leveldb/crc32c/$(am__dirstamp)

leveldb/crc32c/libcrc32c.a: $(leveldb_crc32c_libcrc32c_a_OBJECTS) $(leveldb_crc32c_libcrc32c_a_DEPENDENCIES) $(EXTRA_leveldb_crc32c_libcrc32c_a_DEPENDENCIES) leveldb/crc32c/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/crc32c/libcrc32c.a
	$(AM_V_AR)$(leveldb_crc32c_libcrc32c_a_AR) leveldb/crc32c/libcrc32c.a $(leveldb_crc32c_libcrc32c_a_OBJECTS) $(leveldb_crc32c_libcrc32c_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/crc32c/libcrc32c.a
leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.$(OBJEXT):  \
	leveldb/crc32c/src/$(am__dirstamp) \
	leveldb/crc32c/src/$(DEPDIR)/$(am__dirstamp)

leveldb/crc32c/libcrc32c_sse42.a: $(leveldb_crc32c_libcrc32c_sse42_a_OBJECTS) $(leveldb_crc32c_libcrc32c_sse42_a_DEPENDENCIES) $(EXTRA_leveldb_crc32c_libcrc32c_sse42_a_DEPENDENCIES) leveldb/crc32c/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/crc32c/libcrc32c_sse42.a
	$(AM_V_AR)$(leveldb_crc32c_libcrc32c_sse42_a_AR) leveldb/crc32c/libcrc32c_sse42.a $(leveldb_crc32c_libcrc32c_sse42_a_OBJECTS) $(leveldb_crc32c_libcrc32c_sse42_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/crc32c/libcrc32c_sse42.a
leveldb/db/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db
	@: > leveldb/db/$(am__dirstamp)
leveldb/db/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db/$(DEPDIR)
	@: > leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-builder.$(OBJEXT): leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-c.$(OBJEXT): leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-dbformat.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-db_impl.$(OBJEXT): leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-db_iter.$(OBJEXT): leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-dumpfile.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-filename.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-log_reader.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-log_writer.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-memtable.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-repair.$(OBJEXT): leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-table_cache.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-version_edit.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-version_set.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/libleveldb_a-write_batch.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/table/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table
	@: > leveldb/table/$(am__dirstamp)
leveldb/table/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table/$(DEPDIR)
	@: > leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-block_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-filter_block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-format.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-merger.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-table_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-table.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/libleveldb_a-two_level_iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/util/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util
	@: > leveldb/util/$(am__dirstamp)
leveldb/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util/$(DEPDIR)
	@: > leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-arena.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-bloom.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-cache.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-coding.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-comparator.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-crc32c.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-env.$(OBJEXT): leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-filter_policy.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-hash.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-histogram.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-logging.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-options.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-status.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-env_windows.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/libleveldb_a-env_posix.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/$(am__dirstamp):
	@$(MKDIR_P) leveldb
	@: > leveldb/$(am__dirstamp)

leveldb/libleveldb.a: $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_DEPENDENCIES) $(EXTRA_leveldb_libleveldb_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libleveldb.a
	$(AM_V_AR)$(leveldb_libleveldb_a_AR) leveldb/libleveldb.a $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libleveldb.a
leveldb/helpers/memenv/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv
	@: > leveldb/helpers/memenv/$(am__dirstamp)
leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv/$(DEPDIR)
	@: > leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
leveldb/helpers/memenv/libmemenv_a-memenv.$(OBJEXT):  \
	leveldb/helpers/memenv/$(am__dirstamp) \
	leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)

leveldb/libmemenv.a: $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_DEPENDENCIES) $(EXTRA_leveldb_libmemenv_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libmemenv.a
	$(AM_V_AR)$(leveldb_libmemenv_a_AR) leveldb/libmemenv.a $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libmemenv.a
net/$(am__dirstamp):
	@$(MKDIR_P) net
	@: > net/$(am__dirstamp)
net/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) net/$(DEPDIR)
	@: > net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_cli_a-netaddress.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_cli_a-netbase.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
rpc/$(am__dirstamp):
	@$(MKDIR_P) rpc
	@: > rpc/$(am__dirstamp)
rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rpc/$(DEPDIR)
	@: > rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_cli_a-client.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_cli_a-client_config.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_cli_a-client_utils.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_cli_a-http_request.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_cli_a-http_response.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)

libbitcoin_cli.a: $(libbitcoin_cli_a_OBJECTS) $(libbitcoin_cli_a_DEPENDENCIES) $(EXTRA_libbitcoin_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_cli.a
	$(AM_V_AR)$(libbitcoin_cli_a_AR) libbitcoin_cli.a $(libbitcoin_cli_a_OBJECTS) $(libbitcoin_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_cli.a
net/libbitcoin_common_a-netaddress.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_common_a-netbase.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_common_a-jsonwriter.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/$(am__dirstamp):
	@$(MKDIR_P) script
	@: > script/$(am__dirstamp)
script/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) script/$(DEPDIR)
	@: > script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-sign.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_common_a-standard.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)

libbitcoin_common.a: $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_DEPENDENCIES) $(EXTRA_libbitcoin_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_common.a
	$(AM_V_AR)$(libbitcoin_common_a_AR) libbitcoin_common.a $(libbitcoin_common_a_OBJECTS) $(libbitcoin_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_common.a
consensus/$(am__dirstamp):
	@$(MKDIR_P) consensus
	@: > consensus/$(am__dirstamp)
consensus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) consensus/$(DEPDIR)
	@: > consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoin_consensus_a-merkle.$(OBJEXT):  \
	consensus/$(am__dirstamp) consensus/$(DEPDIR)/$(am__dirstamp)
primitives/$(am__dirstamp):
	@$(MKDIR_P) primitives
	@: > primitives/$(am__dirstamp)
primitives/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) primitives/$(DEPDIR)
	@: > primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoin_consensus_a-block.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoin_consensus_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-bitcoinconsensus.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-interpreter.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-limitedstack.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-opcodes.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-script.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-script_num.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_consensus_a-script_error.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)

libbitcoin_consensus.a: $(libbitcoin_consensus_a_OBJECTS) $(libbitcoin_consensus_a_DEPENDENCIES) $(EXTRA_libbitcoin_consensus_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_consensus.a
	$(AM_V_AR)$(libbitcoin_consensus_a_AR) libbitcoin_consensus.a $(libbitcoin_consensus_a_OBJECTS) $(libbitcoin_consensus_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_consensus.a
miner_id/$(am__dirstamp):
	@$(MKDIR_P) miner_id
	@: > miner_id/$(am__dirstamp)
miner_id/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) miner_id/$(DEPDIR)
	@: > miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-coinbase_doc.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
invalid_txn_sinks/$(am__dirstamp):
	@$(MKDIR_P) invalid_txn_sinks
	@: > invalid_txn_sinks/$(am__dirstamp)
invalid_txn_sinks/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) invalid_txn_sinks/$(DEPDIR)
	@: > invalid_txn_sinks/$(DEPDIR)/$(am__dirstamp)
invalid_txn_sinks/libbitcoin_server_a-file_sink.$(OBJEXT):  \
	invalid_txn_sinks/$(am__dirstamp) \
	invalid_txn_sinks/$(DEPDIR)/$(am__dirstamp)
invalid_txn_sinks/libbitcoin_server_a-zmq_sink.$(OBJEXT):  \
	invalid_txn_sinks/$(am__dirstamp) \
	invalid_txn_sinks/$(DEPDIR)/$(am__dirstamp)
double_spend/$(am__dirstamp):
	@$(MKDIR_P) double_spend
	@: > double_spend/$(am__dirstamp)
double_spend/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) double_spend/$(DEPDIR)
	@: > double_spend/$(DEPDIR)/$(am__dirstamp)
double_spend/libbitcoin_server_a-dsattempt_handler.$(OBJEXT):  \
	double_spend/$(am__dirstamp) \
	double_spend/$(DEPDIR)/$(am__dirstamp)
double_spend/libbitcoin_server_a-dscallback_msg.$(OBJEXT):  \
	double_spend/$(am__dirstamp) \
	double_spend/$(DEPDIR)/$(am__dirstamp)
double_spend/libbitcoin_server_a-dsdetected_message.$(OBJEXT):  \
	double_spend/$(am__dirstamp) \
	double_spend/$(DEPDIR)/$(am__dirstamp)
double_spend/libbitcoin_server_a-dstxn_serialiser.$(OBJEXT):  \
	double_spend/$(am__dirstamp) \
	double_spend/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-dataref_index.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-datareftx.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-miner_id.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-miner_id_db.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-miner_info.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-miner_info_doc.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-miner_info_error.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-miner_info_ref.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-revokemid.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
miner_id/libbitcoin_server_a-miner_info_tracker.$(OBJEXT):  \
	miner_id/$(am__dirstamp) miner_id/$(DEPDIR)/$(am__dirstamp)
mining/$(am__dirstamp):
	@$(MKDIR_P) mining
	@: > mining/$(am__dirstamp)
mining/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) mining/$(DEPDIR)
	@: > mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-assembler.$(OBJEXT):  \
	mining/$(am__dirstamp) mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-candidates.$(OBJEXT):  \
	mining/$(am__dirstamp) mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-factory.$(OBJEXT): mining/$(am__dirstamp) \
	mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-group_builder.$(OBJEXT):  \
	mining/$(am__dirstamp) mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-journal.$(OBJEXT): mining/$(am__dirstamp) \
	mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-journal_builder.$(OBJEXT):  \
	mining/$(am__dirstamp) mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-journal_change_set.$(OBJEXT):  \
	mining/$(am__dirstamp) mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-journal_entry.$(OBJEXT):  \
	mining/$(am__dirstamp) mining/$(DEPDIR)/$(am__dirstamp)
mining/libbitcoin_server_a-journaling_block_assembler.$(OBJEXT):  \
	mining/$(am__dirstamp) mining/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-association.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-association_id.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-block_download_tracker.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-block_parser.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-blocktxn_parser.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-cmpct_size.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-cmpctblock_parser.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-fixed_len_multi_parser.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-fixed_len_parser.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-msg_buffer.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-msg_parser_buffer.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-net.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-net_message.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-net_processing.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-node_state.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-prefilled_tx_parser.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-single_seg_parser.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-stream.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-stream_policy.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-stream_policy_factory.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-tx_parser.$(OBJEXT): net/$(am__dirstamp) \
	net/$(DEPDIR)/$(am__dirstamp)
net/libbitcoin_server_a-validation_scheduler.$(OBJEXT):  \
	net/$(am__dirstamp) net/$(DEPDIR)/$(am__dirstamp)
policy/$(am__dirstamp):
	@$(MKDIR_P) policy
	@: > policy/$(am__dirstamp)
policy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) policy/$(DEPDIR)
	@: > policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_server_a-fees.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libbitcoin_server_a-policy.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-abc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-blockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-frozentxo_rpc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-mining.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-miner_info.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-mining-fbb.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-misc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-net.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-rawtransaction.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-safe_mode.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-server.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_server_a-webhook_client.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_server_a-scriptcache.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_server_a-sigcache.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoin_server_a-ismine.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)

libbitcoin_server.a: $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_DEPENDENCIES) $(EXTRA_libbitcoin_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_server.a
	$(AM_V_AR)$(libbitcoin_server_a_AR) libbitcoin_server.a $(libbitcoin_server_a_OBJECTS) $(libbitcoin_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_server.a
support/$(am__dirstamp):
	@$(MKDIR_P) support
	@: > support/$(am__dirstamp)
support/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) support/$(DEPDIR)
	@: > support/$(DEPDIR)/$(am__dirstamp)
support/libbitcoin_util_a-lockedpool.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-glibc_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-glibcxx_sanity.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-strnlen.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_util_a-protocol.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libbitcoin_util_a-text_writer.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
support/libbitcoin_util_a-cleanse.$(OBJEXT): support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoin_util_a-glibc_compat.$(OBJEXT):  \
	compat/$(am__dirstamp) compat/$(DEPDIR)/$(am__dirstamp)

libbitcoin_util.a: $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_DEPENDENCIES) $(EXTRA_libbitcoin_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_util.a
	$(AM_V_AR)$(libbitcoin_util_a_AR) libbitcoin_util.a $(libbitcoin_util_a_OBJECTS) $(libbitcoin_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_util.a
wallet/$(am__dirstamp):
	@$(MKDIR_P) wallet
	@: > wallet/$(am__dirstamp)
wallet/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/$(DEPDIR)
	@: > wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-crypter.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-finaltx.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-rpcdump.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-rpcwallet.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-wallet.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libbitcoin_wallet_a-walletdb.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)

libbitcoin_wallet.a: $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_DEPENDENCIES) $(EXTRA_libbitcoin_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_wallet.a
	$(AM_V_AR)$(libbitcoin_wallet_a_AR) libbitcoin_wallet.a $(libbitcoin_wallet_a_OBJECTS) $(libbitcoin_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_wallet.a
zmq/$(am__dirstamp):
	@$(MKDIR_P) zmq
	@: > zmq/$(am__dirstamp)
zmq/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zmq/$(DEPDIR)
	@: > zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmq_publisher.$(OBJEXT): zmq/$(am__dirstamp) \
	zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqabstractnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqnotificationinterface.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libbitcoin_zmq_a-zmqpublishnotifier.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)

libbitcoin_zmq.a: $(libbitcoin_zmq_a_OBJECTS) $(libbitcoin_zmq_a_DEPENDENCIES) $(EXTRA_libbitcoin_zmq_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbitcoin_zmq.a
	$(AM_V_AR)$(libbitcoin_zmq_a_AR) libbitcoin_zmq.a $(libbitcoin_zmq_a_OBJECTS) $(libbitcoin_zmq_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbitcoin_zmq.a
crypto/libbitcoinconsensus_la-aes.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-chacha20.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-hmac_sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-hmac_sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-ripemd160.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha1.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libbitcoinconsensus_la-sha256_sse4.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
consensus/libbitcoinconsensus_la-merkle.lo: consensus/$(am__dirstamp) \
	consensus/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoinconsensus_la-block.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libbitcoinconsensus_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-bitcoinconsensus.lo:  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-interpreter.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-limitedstack.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-opcodes.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-script_num.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libbitcoinconsensus_la-script_error.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
compat/libbitcoinconsensus_la-glibc_compat.lo: compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)

libbitcoinconsensus.la: $(libbitcoinconsensus_la_OBJECTS) $(libbitcoinconsensus_la_DEPENDENCIES) $(EXTRA_libbitcoinconsensus_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libbitcoinconsensus_la_LINK) $(am_libbitcoinconsensus_la_rpath) $(libbitcoinconsensus_la_OBJECTS) $(libbitcoinconsensus_la_LIBADD) $(LIBS)
bench/$(am__dirstamp):
	@$(MKDIR_P) bench
	@: > bench/$(am__dirstamp)
bench/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bench/$(DEPDIR)
	@: > bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-bench_bitcoin.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-bench.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-checkblock.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-checkqueue.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-Examples.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-rollingbloom.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-crypto_hash.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-ccoins_caching.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-mempool_eviction.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-mempooltxdb.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-base58.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-lockedpool.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-perf.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-cscript.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-interpreter.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-serialisation.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-thread_safe_queue.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bitcoin-coin_selection.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)

bench/bench_bitcoin$(EXEEXT): $(bench_bench_bitcoin_OBJECTS) $(bench_bench_bitcoin_DEPENDENCIES) $(EXTRA_bench_bench_bitcoin_DEPENDENCIES) bench/$(am__dirstamp)
	@rm -f bench/bench_bitcoin$(EXEEXT)
	$(AM_V_CXXLD)$(bench_bench_bitcoin_LINK) $(bench_bench_bitcoin_OBJECTS) $(bench_bench_bitcoin_LDADD) $(LIBS)

bitcoin-cli$(EXEEXT): $(bitcoin_cli_OBJECTS) $(bitcoin_cli_DEPENDENCIES) $(EXTRA_bitcoin_cli_DEPENDENCIES) 
	@rm -f bitcoin-cli$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_cli_LINK) $(bitcoin_cli_OBJECTS) $(bitcoin_cli_LDADD) $(LIBS)
crypto/bitcoin_miner-sha512.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/bitcoin_miner-chacha20.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)

bitcoin-miner$(EXEEXT): $(bitcoin_miner_OBJECTS) $(bitcoin_miner_DEPENDENCIES) $(EXTRA_bitcoin_miner_DEPENDENCIES) 
	@rm -f bitcoin-miner$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_miner_LINK) $(bitcoin_miner_OBJECTS) $(bitcoin_miner_LDADD) $(LIBS)

bitcoin-tx$(EXEEXT): $(bitcoin_tx_OBJECTS) $(bitcoin_tx_DEPENDENCIES) $(EXTRA_bitcoin_tx_DEPENDENCIES) 
	@rm -f bitcoin-tx$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoin_tx_LINK) $(bitcoin_tx_OBJECTS) $(bitcoin_tx_LDADD) $(LIBS)

bitcoind$(EXEEXT): $(bitcoind_OBJECTS) $(bitcoind_DEPENDENCIES) $(EXTRA_bitcoind_DEPENDENCIES) 
	@rm -f bitcoind$(EXEEXT)
	$(AM_V_CXXLD)$(bitcoind_LINK) $(bitcoind_OBJECTS) $(bitcoind_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-alertnotify_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-arith_uint256_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-addrman_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-amount_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-allocator_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-array_parser_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-base58_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-bip32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-big_int_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blockcheck_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-block_download_tracking_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blockencodings_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blockfile_reading_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-block_index_mutex_distribution_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-block_info_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blockindex_with_descendants_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blockmaxsize_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-block_parser_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blocktxn_parser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blockstatus_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-blockvalidationstatus_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-bloom_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-bn_op_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-bswap_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-checkpoints_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-checkqueue_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-check_selfish_mining_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-cmpctblock_parser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-cmpct_size_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-coins_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-write_preferring_upgradable_mutex_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-compress_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-config_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-coinbase_doc_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-core_io_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-cpfp_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-crypto_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-cscript_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-cuckoocache_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-dataref_index_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-datareftx_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-dsattempt_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-dsdetected_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-dstxn_serialiser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-dbwrapper_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-frozentxo_db_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-frozentxo_mempool_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-frozentxo_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-DoS_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-dstencode_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-enum_cast_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-eviction_candidates_tracker_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-excessiveblock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-fixed_len_multi_parser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-fixed_len_parser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-hash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-instruction_iterator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-int_serialization_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-inv_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-invalid_txn_publisher_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-jba_selfish_mining_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-journal_assembler_group_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-journal_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-jsonutil.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-json_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-key_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-leaky_bucket_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-limitedmap_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-limitedstack_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-locked_ref_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-m_candidates_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-main_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-mempool_dump_load_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-mempool_limit_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-mempool_snapshot_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-mempool_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-mempooltxdb_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-merkle_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-merkletreefile_readwrite_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-mining_group_builder_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-miner_id_db_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-miner_id_db_tests3.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-miner_info_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-miner_info_doc_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-miner_info_error_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-miner_info_ref_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-miner_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-minerid_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-msg_buffer_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-msg_parser_buffer_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-multisig_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-net_association_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-net_message_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-net_message_maker_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-net_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-netbase_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-object_stream_deserialization_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-opcode_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-prefilled_tx_parser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-prefilled_txs_parser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-pow_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-prevector_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-protocol_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-raii_event_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-random_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-reverselock_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-revokemid_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-sanity_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-scheduler_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-script_P2SH_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-script_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-scriptflags.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-scriptnum_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-serialize_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-sighash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-sighashtype_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-sigopcount_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-sigutil.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-single_seg_parser_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-skiplist_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-streams_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-stream_serialization_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-string_writer_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-taskcancellation_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_bitcoin.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_bitcoin_main.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_double_spend_detector.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_orphantxns.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_recent_rejects.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_txid_tracker.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_txnvalidation_utils.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-test_txnvalidator.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-testutil.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-thread_safe_queue_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-threadpool_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-timedata_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-time_limited_blacklist_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-time_locked_mempool_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-ttor_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-transaction_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-txn_grouper_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-txs_parser_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-tx_parser_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-txvalidationcache_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-uint256_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-undo_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-unique_array_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-univalue_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-util_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-validation_scheduler_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-validation_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_bitcoin-webhook_client_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
wallet/test/$(am__dirstamp):
	@$(MKDIR_P) wallet/test
	@: > wallet/test/$(am__dirstamp)
wallet/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/test/$(DEPDIR)
	@: > wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-wallet_test_fixture.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-accounting_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-walletdb_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-crypto_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)

test/test_bitcoin$(EXEEXT): $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_DEPENDENCIES) $(EXTRA_test_test_bitcoin_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_bitcoin$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_bitcoin_LINK) $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f bench/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f compat/*.lo
	-rm -f consensus/*.$(OBJEXT)
	-rm -f consensus/*.lo
	-rm -f crypto/*.$(OBJEXT)
	-rm -f crypto/*.lo
	-rm -f double_spend/*.$(OBJEXT)
	-rm -f invalid_txn_sinks/*.$(OBJEXT)
	-rm -f leveldb/crc32c/src/*.$(OBJEXT)
	-rm -f leveldb/db/*.$(OBJEXT)
	-rm -f leveldb/helpers/memenv/*.$(OBJEXT)
	-rm -f leveldb/table/*.$(OBJEXT)
	-rm -f leveldb/util/*.$(OBJEXT)
	-rm -f miner_id/*.$(OBJEXT)
	-rm -f mining/*.$(OBJEXT)
	-rm -f net/*.$(OBJEXT)
	-rm -f policy/*.$(OBJEXT)
	-rm -f primitives/*.$(OBJEXT)
	-rm -f primitives/*.lo
	-rm -f rpc/*.$(OBJEXT)
	-rm -f script/*.$(OBJEXT)
	-rm -f script/*.lo
	-rm -f support/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)
	-rm -f wallet/*.$(OBJEXT)
	-rm -f wallet/test/*.$(OBJEXT)
	-rm -f zmq/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bitcoin_cli-bitcoin-cli.Po # am--include-marker
include ./$(DEPDIR)/bitcoin_miner-arith_uint256.Po # am--include-marker
include ./$(DEPDIR)/bitcoin_miner-bitcoin-miner.Po # am--include-marker
include ./$(DEPDIR)/bitcoin_tx-bitcoin-tx.Po # am--include-marker
include ./$(DEPDIR)/bitcoind-bitcoind.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_cli_a-cfile_util.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-amount.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-base58.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-chainparams.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-coins.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-compressor.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-config.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-core_read.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-core_write.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-dstencode.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-key.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-keystore.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-protocol.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-scheduler.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-txhasher.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-warnings.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_consensus_a-big_int.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_consensus_a-cfile_util.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_consensus_a-hash.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_consensus_a-pubkey.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-abort_node.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-addrdb.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-addrman.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-block_file_access.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-block_file_info.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-block_index.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-blockencodings.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-bloom.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-chain.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-dbwrapper.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-frozentxo.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-frozentxo_db.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-httprpc.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-httpserver.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-init.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-mempooltxdb.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-merkleblock.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-merkleproof.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-merkletree.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-merkletreedb.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-merkletreestore.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-noui.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-orphan_txns.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-pow.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-processing_block_index.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-rest.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-safe_mode.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-taskcancellation.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-timedata.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txdb.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txmempool.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txn_grouper.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txn_propagator.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txn_validation_data.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-txn_validator.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-ui_interface.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-unique_array.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-validation.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-validationinterface.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_server_a-vmtouch.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-clientversion.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-fs.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-logging.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-random.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-sync.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-threadpriority.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-util.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po # am--include-marker
include ./$(DEPDIR)/libbitcoin_util_a-utiltime.Po # am--include-marker
include ./$(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Plo # am--include-marker
include ./$(DEPDIR)/libbitcoinconsensus_la-big_int.Plo # am--include-marker
include ./$(DEPDIR)/libbitcoinconsensus_la-cfile_util.Plo # am--include-marker
include ./$(DEPDIR)/libbitcoinconsensus_la-hash.Plo # am--include-marker
include ./$(DEPDIR)/libbitcoinconsensus_la-pubkey.Plo # am--include-marker
include ./$(DEPDIR)/libbitcoinconsensus_la-taskcancellation.Plo # am--include-marker
include ./$(DEPDIR)/libbitcoinconsensus_la-utilstrencodings.Plo # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-Examples.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-base58.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-bench.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-checkblock.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-checkqueue.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-coin_selection.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-cscript.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-interpreter.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-lockedpool.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-perf.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-serialisation.Po # am--include-marker
include bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Po # am--include-marker
include compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po # am--include-marker
include compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po # am--include-marker
include compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po # am--include-marker
include compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po # am--include-marker
include compat/$(DEPDIR)/libbitcoinconsensus_la-glibc_compat.Plo # am--include-marker
include consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po # am--include-marker
include consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Plo # am--include-marker
include crypto/$(DEPDIR)/bitcoin_miner-chacha20.Po # am--include-marker
include crypto/$(DEPDIR)/bitcoin_miner-sha512.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Po # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Plo # am--include-marker
include crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Plo # am--include-marker
include double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Po # am--include-marker
include double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Po # am--include-marker
include double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Po # am--include-marker
include double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Po # am--include-marker
include invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Po # am--include-marker
include invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Po # am--include-marker
include leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Po # am--include-marker
include leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Po # am--include-marker
include leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-c.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po # am--include-marker
include leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po # am--include-marker
include leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-block.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-format.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-table.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po # am--include-marker
include leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-env.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-options.Po # am--include-marker
include leveldb/util/$(DEPDIR)/libleveldb_a-status.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Po # am--include-marker
include miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-assembler.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-candidates.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-factory.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-journal.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Po # am--include-marker
include mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_cli_a-netbase.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_common_a-netaddress.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_common_a-netbase.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-association.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-association_id.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-block_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-net.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-net_message.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-net_processing.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-node_state.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-stream.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Po # am--include-marker
include net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Po # am--include-marker
include policy/$(DEPDIR)/libbitcoin_server_a-fees.Po # am--include-marker
include policy/$(DEPDIR)/libbitcoin_server_a-policy.Po # am--include-marker
include primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po # am--include-marker
include primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po # am--include-marker
include primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Plo # am--include-marker
include primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Plo # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-abc.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-net.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-server.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po # am--include-marker
include rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_common_a-sign.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_common_a-standard.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_consensus_a-script.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_server_a-ismine.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Po # am--include-marker
include script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po # am--include-marker
include script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Plo # am--include-marker
include script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Plo # am--include-marker
include script/$(DEPDIR)/libbitcoinconsensus_la-limitedstack.Plo # am--include-marker
include script/$(DEPDIR)/libbitcoinconsensus_la-opcodes.Plo # am--include-marker
include script/$(DEPDIR)/libbitcoinconsensus_la-script.Plo # am--include-marker
include script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Plo # am--include-marker
include script/$(DEPDIR)/libbitcoinconsensus_la-script_num.Plo # am--include-marker
include support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po # am--include-marker
include support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-DoS_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-addrman_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-allocator_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-amount_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-array_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-base32_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-base58_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-base64_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-big_int_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-bip32_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-block_info_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-block_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-bloom_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-bn_op_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-bswap_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-coins_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-compress_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-config_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-core_io_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-cpfp_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-crypto_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-cscript_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-datareftx_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-dstencode_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-getarg_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-hash_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-inv_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-journal_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-json_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-jsonutil.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-key_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-main_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-mempool_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-merkle_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-miner_info_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-miner_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-minerid_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-multisig_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-net_association_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-net_message_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-net_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-netbase_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-opcode_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-pmt_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-pow_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-prevector_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-protocol_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-raii_event_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-random_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-reverselock_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-revokemid_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-rpc_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-sanity_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-scheduler_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-script_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-scriptflags.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-serialize_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-sighash_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-sigutil.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-skiplist_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-streams_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-string_writer_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_bitcoin.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_orphantxns.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-testutil.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-threadpool_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-timedata_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-transaction_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-ttor_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-uint256_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-undo_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-unique_array_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-univalue_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-util_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-validation_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Po # am--include-marker
include test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Po # am--include-marker
include wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po # am--include-marker
include wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po # am--include-marker
include wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Po # am--include-marker
include wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po # am--include-marker
include wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po # am--include-marker
include wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po # am--include-marker
include wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po # am--include-marker
include wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Po # am--include-marker
include wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po # am--include-marker
include wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po # am--include-marker
include wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po # am--include-marker
include wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po # am--include-marker
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Po # am--include-marker
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po # am--include-marker
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po # am--include-marker
include zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

crypto/libbitcoin_crypto_a-aes.o: crypto/aes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-aes.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Tpo -c -o crypto/libbitcoin_crypto_a-aes.o `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Po
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/libbitcoin_crypto_a-aes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-aes.o `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/libbitcoin_crypto_a-aes.obj: crypto/aes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-aes.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Tpo -c -o crypto/libbitcoin_crypto_a-aes.obj `if test -f 'crypto/aes.cpp'; then $(CYGPATH_W) 'crypto/aes.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/aes.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Po
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/libbitcoin_crypto_a-aes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-aes.obj `if test -f 'crypto/aes.cpp'; then $(CYGPATH_W) 'crypto/aes.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/aes.cpp'; fi`

crypto/libbitcoin_crypto_a-chacha20.o: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-chacha20.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Tpo -c -o crypto/libbitcoin_crypto_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/libbitcoin_crypto_a-chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/libbitcoin_crypto_a-chacha20.obj: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-chacha20.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Tpo -c -o crypto/libbitcoin_crypto_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/libbitcoin_crypto_a-chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`

crypto/libbitcoin_crypto_a-hmac_sha256.o: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-hmac_sha256.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Tpo -c -o crypto/libbitcoin_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/libbitcoin_crypto_a-hmac_sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/libbitcoin_crypto_a-hmac_sha256.obj: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-hmac_sha256.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Tpo -c -o crypto/libbitcoin_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/libbitcoin_crypto_a-hmac_sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`

crypto/libbitcoin_crypto_a-hmac_sha512.o: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-hmac_sha512.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Tpo -c -o crypto/libbitcoin_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libbitcoin_crypto_a-hmac_sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libbitcoin_crypto_a-hmac_sha512.obj: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-hmac_sha512.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Tpo -c -o crypto/libbitcoin_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libbitcoin_crypto_a-hmac_sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`

crypto/libbitcoin_crypto_a-ripemd160.o: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-ripemd160.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Tpo -c -o crypto/libbitcoin_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libbitcoin_crypto_a-ripemd160.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libbitcoin_crypto_a-ripemd160.obj: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-ripemd160.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Tpo -c -o crypto/libbitcoin_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libbitcoin_crypto_a-ripemd160.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`

crypto/libbitcoin_crypto_a-sha1.o: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha1.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Tpo -c -o crypto/libbitcoin_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libbitcoin_crypto_a-sha1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libbitcoin_crypto_a-sha1.obj: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha1.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Tpo -c -o crypto/libbitcoin_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libbitcoin_crypto_a-sha1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`

crypto/libbitcoin_crypto_a-sha256.o: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Tpo -c -o crypto/libbitcoin_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libbitcoin_crypto_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libbitcoin_crypto_a-sha256.obj: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Tpo -c -o crypto/libbitcoin_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libbitcoin_crypto_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

crypto/libbitcoin_crypto_a-sha512.o: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha512.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Tpo -c -o crypto/libbitcoin_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libbitcoin_crypto_a-sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/libbitcoin_crypto_a-sha512.obj: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Tpo -c -o crypto/libbitcoin_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libbitcoin_crypto_a-sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

crypto/libbitcoin_crypto_a-sha256_sse4.o: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha256_sse4.o -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Tpo -c -o crypto/libbitcoin_crypto_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/libbitcoin_crypto_a-sha256_sse4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

crypto/libbitcoin_crypto_a-sha256_sse4.obj: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoin_crypto_a-sha256_sse4.obj -MD -MP -MF crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Tpo -c -o crypto/libbitcoin_crypto_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Tpo crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/libbitcoin_crypto_a-sha256_sse4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libbitcoin_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libbitcoin_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoin_crypto_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`

leveldb/crc32c/src/libcrc32c_a-crc32c.o: leveldb/crc32c/src/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/crc32c/src/libcrc32c_a-crc32c.o -MD -MP -MF leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Tpo -c -o leveldb/crc32c/src/libcrc32c_a-crc32c.o `test -f 'leveldb/crc32c/src/crc32c.cc' || echo '$(srcdir)/'`leveldb/crc32c/src/crc32c.cc
	$(AM_V_at)$(am__mv) leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Tpo leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/crc32c/src/crc32c.cc' object='leveldb/crc32c/src/libcrc32c_a-crc32c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/crc32c/src/libcrc32c_a-crc32c.o `test -f 'leveldb/crc32c/src/crc32c.cc' || echo '$(srcdir)/'`leveldb/crc32c/src/crc32c.cc

leveldb/crc32c/src/libcrc32c_a-crc32c.obj: leveldb/crc32c/src/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/crc32c/src/libcrc32c_a-crc32c.obj -MD -MP -MF leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Tpo -c -o leveldb/crc32c/src/libcrc32c_a-crc32c.obj `if test -f 'leveldb/crc32c/src/crc32c.cc'; then $(CYGPATH_W) 'leveldb/crc32c/src/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/crc32c/src/crc32c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Tpo leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/crc32c/src/crc32c.cc' object='leveldb/crc32c/src/libcrc32c_a-crc32c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/crc32c/src/libcrc32c_a-crc32c.obj `if test -f 'leveldb/crc32c/src/crc32c.cc'; then $(CYGPATH_W) 'leveldb/crc32c/src/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/crc32c/src/crc32c.cc'; fi`

leveldb/crc32c/src/libcrc32c_a-crc32c_portable.o: leveldb/crc32c/src/crc32c_portable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/crc32c/src/libcrc32c_a-crc32c_portable.o -MD -MP -MF leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Tpo -c -o leveldb/crc32c/src/libcrc32c_a-crc32c_portable.o `test -f 'leveldb/crc32c/src/crc32c_portable.cc' || echo '$(srcdir)/'`leveldb/crc32c/src/crc32c_portable.cc
	$(AM_V_at)$(am__mv) leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Tpo leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Po
#	$(AM_V_CXX)source='leveldb/crc32c/src/crc32c_portable.cc' object='leveldb/crc32c/src/libcrc32c_a-crc32c_portable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/crc32c/src/libcrc32c_a-crc32c_portable.o `test -f 'leveldb/crc32c/src/crc32c_portable.cc' || echo '$(srcdir)/'`leveldb/crc32c/src/crc32c_portable.cc

leveldb/crc32c/src/libcrc32c_a-crc32c_portable.obj: leveldb/crc32c/src/crc32c_portable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/crc32c/src/libcrc32c_a-crc32c_portable.obj -MD -MP -MF leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Tpo -c -o leveldb/crc32c/src/libcrc32c_a-crc32c_portable.obj `if test -f 'leveldb/crc32c/src/crc32c_portable.cc'; then $(CYGPATH_W) 'leveldb/crc32c/src/crc32c_portable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/crc32c/src/crc32c_portable.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Tpo leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Po
#	$(AM_V_CXX)source='leveldb/crc32c/src/crc32c_portable.cc' object='leveldb/crc32c/src/libcrc32c_a-crc32c_portable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/crc32c/src/libcrc32c_a-crc32c_portable.obj `if test -f 'leveldb/crc32c/src/crc32c_portable.cc'; then $(CYGPATH_W) 'leveldb/crc32c/src/crc32c_portable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/crc32c/src/crc32c_portable.cc'; fi`

leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.o: leveldb/crc32c/src/crc32c_sse42.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.o -MD -MP -MF leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Tpo -c -o leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.o `test -f 'leveldb/crc32c/src/crc32c_sse42.cc' || echo '$(srcdir)/'`leveldb/crc32c/src/crc32c_sse42.cc
	$(AM_V_at)$(am__mv) leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Tpo leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Po
#	$(AM_V_CXX)source='leveldb/crc32c/src/crc32c_sse42.cc' object='leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.o `test -f 'leveldb/crc32c/src/crc32c_sse42.cc' || echo '$(srcdir)/'`leveldb/crc32c/src/crc32c_sse42.cc

leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.obj: leveldb/crc32c/src/crc32c_sse42.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.obj -MD -MP -MF leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Tpo -c -o leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.obj `if test -f 'leveldb/crc32c/src/crc32c_sse42.cc'; then $(CYGPATH_W) 'leveldb/crc32c/src/crc32c_sse42.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/crc32c/src/crc32c_sse42.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Tpo leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Po
#	$(AM_V_CXX)source='leveldb/crc32c/src/crc32c_sse42.cc' object='leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_crc32c_libcrc32c_sse42_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_crc32c_libcrc32c_sse42_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/crc32c/src/libcrc32c_sse42_a-crc32c_sse42.obj `if test -f 'leveldb/crc32c/src/crc32c_sse42.cc'; then $(CYGPATH_W) 'leveldb/crc32c/src/crc32c_sse42.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/crc32c/src/crc32c_sse42.cc'; fi`

leveldb/db/libleveldb_a-builder.o: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-builder.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo -c -o leveldb/db/libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/libleveldb_a-builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc

leveldb/db/libleveldb_a-builder.obj: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-builder.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo -c -o leveldb/db/libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/libleveldb_a-builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`

leveldb/db/libleveldb_a-c.o: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-c.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo -c -o leveldb/db/libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/libleveldb_a-c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc

leveldb/db/libleveldb_a-c.obj: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-c.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo -c -o leveldb/db/libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/libleveldb_a-c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`

leveldb/db/libleveldb_a-dbformat.o: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dbformat.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo -c -o leveldb/db/libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/libleveldb_a-dbformat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc

leveldb/db/libleveldb_a-dbformat.obj: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dbformat.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo -c -o leveldb/db/libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/libleveldb_a-dbformat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`

leveldb/db/libleveldb_a-db_impl.o: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_impl.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo -c -o leveldb/db/libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/libleveldb_a-db_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc

leveldb/db/libleveldb_a-db_impl.obj: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_impl.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo -c -o leveldb/db/libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/libleveldb_a-db_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`

leveldb/db/libleveldb_a-db_iter.o: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_iter.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo -c -o leveldb/db/libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/libleveldb_a-db_iter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc

leveldb/db/libleveldb_a-db_iter.obj: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-db_iter.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo -c -o leveldb/db/libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/libleveldb_a-db_iter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`

leveldb/db/libleveldb_a-dumpfile.o: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dumpfile.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo -c -o leveldb/db/libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/libleveldb_a-dumpfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc

leveldb/db/libleveldb_a-dumpfile.obj: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-dumpfile.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo -c -o leveldb/db/libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/libleveldb_a-dumpfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`

leveldb/db/libleveldb_a-filename.o: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-filename.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo -c -o leveldb/db/libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/libleveldb_a-filename.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc

leveldb/db/libleveldb_a-filename.obj: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-filename.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo -c -o leveldb/db/libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/libleveldb_a-filename.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`

leveldb/db/libleveldb_a-log_reader.o: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_reader.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo -c -o leveldb/db/libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/libleveldb_a-log_reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc

leveldb/db/libleveldb_a-log_reader.obj: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_reader.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo -c -o leveldb/db/libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/libleveldb_a-log_reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`

leveldb/db/libleveldb_a-log_writer.o: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_writer.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo -c -o leveldb/db/libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/libleveldb_a-log_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc

leveldb/db/libleveldb_a-log_writer.obj: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-log_writer.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo -c -o leveldb/db/libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/libleveldb_a-log_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`

leveldb/db/libleveldb_a-memtable.o: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-memtable.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo -c -o leveldb/db/libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/libleveldb_a-memtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc

leveldb/db/libleveldb_a-memtable.obj: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-memtable.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo -c -o leveldb/db/libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/libleveldb_a-memtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`

leveldb/db/libleveldb_a-repair.o: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-repair.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo -c -o leveldb/db/libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/libleveldb_a-repair.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc

leveldb/db/libleveldb_a-repair.obj: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-repair.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo -c -o leveldb/db/libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/libleveldb_a-repair.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`

leveldb/db/libleveldb_a-table_cache.o: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-table_cache.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo -c -o leveldb/db/libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/libleveldb_a-table_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc

leveldb/db/libleveldb_a-table_cache.obj: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-table_cache.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo -c -o leveldb/db/libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/libleveldb_a-table_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`

leveldb/db/libleveldb_a-version_edit.o: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_edit.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo -c -o leveldb/db/libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/libleveldb_a-version_edit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc

leveldb/db/libleveldb_a-version_edit.obj: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_edit.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo -c -o leveldb/db/libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/libleveldb_a-version_edit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`

leveldb/db/libleveldb_a-version_set.o: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_set.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo -c -o leveldb/db/libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/libleveldb_a-version_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc

leveldb/db/libleveldb_a-version_set.obj: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-version_set.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo -c -o leveldb/db/libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/libleveldb_a-version_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`

leveldb/db/libleveldb_a-write_batch.o: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-write_batch.o -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo -c -o leveldb/db/libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/libleveldb_a-write_batch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc

leveldb/db/libleveldb_a-write_batch.obj: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/libleveldb_a-write_batch.obj -MD -MP -MF leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo -c -o leveldb/db/libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/libleveldb_a-write_batch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`

leveldb/table/libleveldb_a-block_builder.o: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo -c -o leveldb/table/libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/libleveldb_a-block_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc

leveldb/table/libleveldb_a-block_builder.obj: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo -c -o leveldb/table/libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/libleveldb_a-block_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`

leveldb/table/libleveldb_a-block.o: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo -c -o leveldb/table/libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/libleveldb_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc

leveldb/table/libleveldb_a-block.obj: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo -c -o leveldb/table/libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/libleveldb_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`

leveldb/table/libleveldb_a-filter_block.o: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-filter_block.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo -c -o leveldb/table/libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/libleveldb_a-filter_block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc

leveldb/table/libleveldb_a-filter_block.obj: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-filter_block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo -c -o leveldb/table/libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/libleveldb_a-filter_block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`

leveldb/table/libleveldb_a-format.o: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-format.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo -c -o leveldb/table/libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/libleveldb_a-format.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc

leveldb/table/libleveldb_a-format.obj: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-format.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo -c -o leveldb/table/libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/libleveldb_a-format.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`

leveldb/table/libleveldb_a-iterator.o: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo -c -o leveldb/table/libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/libleveldb_a-iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc

leveldb/table/libleveldb_a-iterator.obj: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo -c -o leveldb/table/libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/libleveldb_a-iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`

leveldb/table/libleveldb_a-merger.o: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-merger.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo -c -o leveldb/table/libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/libleveldb_a-merger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc

leveldb/table/libleveldb_a-merger.obj: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-merger.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo -c -o leveldb/table/libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/libleveldb_a-merger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`

leveldb/table/libleveldb_a-table_builder.o: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo -c -o leveldb/table/libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/libleveldb_a-table_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc

leveldb/table/libleveldb_a-table_builder.obj: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo -c -o leveldb/table/libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/libleveldb_a-table_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`

leveldb/table/libleveldb_a-table.o: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo -c -o leveldb/table/libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/libleveldb_a-table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc

leveldb/table/libleveldb_a-table.obj: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-table.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo -c -o leveldb/table/libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/libleveldb_a-table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`

leveldb/table/libleveldb_a-two_level_iterator.o: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-two_level_iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/libleveldb_a-two_level_iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc

leveldb/table/libleveldb_a-two_level_iterator.obj: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/libleveldb_a-two_level_iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/libleveldb_a-two_level_iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`

leveldb/util/libleveldb_a-arena.o: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-arena.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo -c -o leveldb/util/libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/libleveldb_a-arena.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc

leveldb/util/libleveldb_a-arena.obj: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-arena.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo -c -o leveldb/util/libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/libleveldb_a-arena.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`

leveldb/util/libleveldb_a-bloom.o: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-bloom.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo -c -o leveldb/util/libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/libleveldb_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc

leveldb/util/libleveldb_a-bloom.obj: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-bloom.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo -c -o leveldb/util/libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/libleveldb_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`

leveldb/util/libleveldb_a-cache.o: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-cache.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo -c -o leveldb/util/libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/libleveldb_a-cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc

leveldb/util/libleveldb_a-cache.obj: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-cache.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo -c -o leveldb/util/libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/libleveldb_a-cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`

leveldb/util/libleveldb_a-coding.o: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-coding.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo -c -o leveldb/util/libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/libleveldb_a-coding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc

leveldb/util/libleveldb_a-coding.obj: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-coding.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo -c -o leveldb/util/libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/libleveldb_a-coding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`

leveldb/util/libleveldb_a-comparator.o: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-comparator.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo -c -o leveldb/util/libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/libleveldb_a-comparator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc

leveldb/util/libleveldb_a-comparator.obj: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-comparator.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo -c -o leveldb/util/libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/libleveldb_a-comparator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`

leveldb/util/libleveldb_a-crc32c.o: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-crc32c.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo -c -o leveldb/util/libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/libleveldb_a-crc32c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc

leveldb/util/libleveldb_a-crc32c.obj: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-crc32c.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo -c -o leveldb/util/libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/libleveldb_a-crc32c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`

leveldb/util/libleveldb_a-env.o: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo -c -o leveldb/util/libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/libleveldb_a-env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc

leveldb/util/libleveldb_a-env.obj: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo -c -o leveldb/util/libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/libleveldb_a-env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`

leveldb/util/libleveldb_a-filter_policy.o: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-filter_policy.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo -c -o leveldb/util/libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/libleveldb_a-filter_policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc

leveldb/util/libleveldb_a-filter_policy.obj: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-filter_policy.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo -c -o leveldb/util/libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/libleveldb_a-filter_policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`

leveldb/util/libleveldb_a-hash.o: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-hash.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo -c -o leveldb/util/libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/libleveldb_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc

leveldb/util/libleveldb_a-hash.obj: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-hash.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo -c -o leveldb/util/libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/libleveldb_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`

leveldb/util/libleveldb_a-histogram.o: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-histogram.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo -c -o leveldb/util/libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/libleveldb_a-histogram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc

leveldb/util/libleveldb_a-histogram.obj: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-histogram.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo -c -o leveldb/util/libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/libleveldb_a-histogram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`

leveldb/util/libleveldb_a-logging.o: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-logging.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo -c -o leveldb/util/libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/libleveldb_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc

leveldb/util/libleveldb_a-logging.obj: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-logging.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo -c -o leveldb/util/libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/libleveldb_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`

leveldb/util/libleveldb_a-options.o: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-options.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo -c -o leveldb/util/libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/libleveldb_a-options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc

leveldb/util/libleveldb_a-options.obj: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-options.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo -c -o leveldb/util/libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/libleveldb_a-options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`

leveldb/util/libleveldb_a-status.o: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-status.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo -c -o leveldb/util/libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/libleveldb_a-status.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc

leveldb/util/libleveldb_a-status.obj: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-status.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo -c -o leveldb/util/libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/libleveldb_a-status.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`

leveldb/util/libleveldb_a-env_windows.o: leveldb/util/env_windows.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_windows.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Tpo -c -o leveldb/util/libleveldb_a-env_windows.o `test -f 'leveldb/util/env_windows.cc' || echo '$(srcdir)/'`leveldb/util/env_windows.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Po
#	$(AM_V_CXX)source='leveldb/util/env_windows.cc' object='leveldb/util/libleveldb_a-env_windows.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_windows.o `test -f 'leveldb/util/env_windows.cc' || echo '$(srcdir)/'`leveldb/util/env_windows.cc

leveldb/util/libleveldb_a-env_windows.obj: leveldb/util/env_windows.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_windows.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Tpo -c -o leveldb/util/libleveldb_a-env_windows.obj `if test -f 'leveldb/util/env_windows.cc'; then $(CYGPATH_W) 'leveldb/util/env_windows.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_windows.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Po
#	$(AM_V_CXX)source='leveldb/util/env_windows.cc' object='leveldb/util/libleveldb_a-env_windows.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_windows.obj `if test -f 'leveldb/util/env_windows.cc'; then $(CYGPATH_W) 'leveldb/util/env_windows.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_windows.cc'; fi`

leveldb/util/libleveldb_a-env_posix.o: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_posix.o -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo -c -o leveldb/util/libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/libleveldb_a-env_posix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc

leveldb/util/libleveldb_a-env_posix.obj: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/libleveldb_a-env_posix.obj -MD -MP -MF leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo -c -o leveldb/util/libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/libleveldb_a-env_posix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`

leveldb/helpers/memenv/libmemenv_a-memenv.o: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/libmemenv_a-memenv.o -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/libmemenv_a-memenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc

leveldb/helpers/memenv/libmemenv_a-memenv.obj: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/libmemenv_a-memenv.obj -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/libmemenv_a-memenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`

libbitcoin_cli_a-cfile_util.o: cfile_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_cli_a-cfile_util.o -MD -MP -MF $(DEPDIR)/libbitcoin_cli_a-cfile_util.Tpo -c -o libbitcoin_cli_a-cfile_util.o `test -f 'cfile_util.cpp' || echo '$(srcdir)/'`cfile_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_cli_a-cfile_util.Tpo $(DEPDIR)/libbitcoin_cli_a-cfile_util.Po
#	$(AM_V_CXX)source='cfile_util.cpp' object='libbitcoin_cli_a-cfile_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_cli_a-cfile_util.o `test -f 'cfile_util.cpp' || echo '$(srcdir)/'`cfile_util.cpp

libbitcoin_cli_a-cfile_util.obj: cfile_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_cli_a-cfile_util.obj -MD -MP -MF $(DEPDIR)/libbitcoin_cli_a-cfile_util.Tpo -c -o libbitcoin_cli_a-cfile_util.obj `if test -f 'cfile_util.cpp'; then $(CYGPATH_W) 'cfile_util.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_cli_a-cfile_util.Tpo $(DEPDIR)/libbitcoin_cli_a-cfile_util.Po
#	$(AM_V_CXX)source='cfile_util.cpp' object='libbitcoin_cli_a-cfile_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_cli_a-cfile_util.obj `if test -f 'cfile_util.cpp'; then $(CYGPATH_W) 'cfile_util.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile_util.cpp'; fi`

net/libbitcoin_cli_a-netaddress.o: net/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_cli_a-netaddress.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Tpo -c -o net/libbitcoin_cli_a-netaddress.o `test -f 'net/netaddress.cpp' || echo '$(srcdir)/'`net/netaddress.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Tpo net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Po
#	$(AM_V_CXX)source='net/netaddress.cpp' object='net/libbitcoin_cli_a-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_cli_a-netaddress.o `test -f 'net/netaddress.cpp' || echo '$(srcdir)/'`net/netaddress.cpp

net/libbitcoin_cli_a-netaddress.obj: net/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_cli_a-netaddress.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Tpo -c -o net/libbitcoin_cli_a-netaddress.obj `if test -f 'net/netaddress.cpp'; then $(CYGPATH_W) 'net/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Tpo net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Po
#	$(AM_V_CXX)source='net/netaddress.cpp' object='net/libbitcoin_cli_a-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_cli_a-netaddress.obj `if test -f 'net/netaddress.cpp'; then $(CYGPATH_W) 'net/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netaddress.cpp'; fi`

net/libbitcoin_cli_a-netbase.o: net/netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_cli_a-netbase.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_cli_a-netbase.Tpo -c -o net/libbitcoin_cli_a-netbase.o `test -f 'net/netbase.cpp' || echo '$(srcdir)/'`net/netbase.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_cli_a-netbase.Tpo net/$(DEPDIR)/libbitcoin_cli_a-netbase.Po
#	$(AM_V_CXX)source='net/netbase.cpp' object='net/libbitcoin_cli_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_cli_a-netbase.o `test -f 'net/netbase.cpp' || echo '$(srcdir)/'`net/netbase.cpp

net/libbitcoin_cli_a-netbase.obj: net/netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_cli_a-netbase.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_cli_a-netbase.Tpo -c -o net/libbitcoin_cli_a-netbase.obj `if test -f 'net/netbase.cpp'; then $(CYGPATH_W) 'net/netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_cli_a-netbase.Tpo net/$(DEPDIR)/libbitcoin_cli_a-netbase.Po
#	$(AM_V_CXX)source='net/netbase.cpp' object='net/libbitcoin_cli_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_cli_a-netbase.obj `if test -f 'net/netbase.cpp'; then $(CYGPATH_W) 'net/netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netbase.cpp'; fi`

rpc/libbitcoin_cli_a-client.o: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo -c -o rpc/libbitcoin_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitcoin_cli_a-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp

rpc/libbitcoin_cli_a-client.obj: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo -c -o rpc/libbitcoin_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libbitcoin_cli_a-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`

rpc/libbitcoin_cli_a-client_config.o: rpc/client_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client_config.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Tpo -c -o rpc/libbitcoin_cli_a-client_config.o `test -f 'rpc/client_config.cpp' || echo '$(srcdir)/'`rpc/client_config.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Po
#	$(AM_V_CXX)source='rpc/client_config.cpp' object='rpc/libbitcoin_cli_a-client_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client_config.o `test -f 'rpc/client_config.cpp' || echo '$(srcdir)/'`rpc/client_config.cpp

rpc/libbitcoin_cli_a-client_config.obj: rpc/client_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client_config.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Tpo -c -o rpc/libbitcoin_cli_a-client_config.obj `if test -f 'rpc/client_config.cpp'; then $(CYGPATH_W) 'rpc/client_config.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client_config.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Po
#	$(AM_V_CXX)source='rpc/client_config.cpp' object='rpc/libbitcoin_cli_a-client_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client_config.obj `if test -f 'rpc/client_config.cpp'; then $(CYGPATH_W) 'rpc/client_config.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client_config.cpp'; fi`

rpc/libbitcoin_cli_a-client_utils.o: rpc/client_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client_utils.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Tpo -c -o rpc/libbitcoin_cli_a-client_utils.o `test -f 'rpc/client_utils.cpp' || echo '$(srcdir)/'`rpc/client_utils.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Po
#	$(AM_V_CXX)source='rpc/client_utils.cpp' object='rpc/libbitcoin_cli_a-client_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client_utils.o `test -f 'rpc/client_utils.cpp' || echo '$(srcdir)/'`rpc/client_utils.cpp

rpc/libbitcoin_cli_a-client_utils.obj: rpc/client_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-client_utils.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Tpo -c -o rpc/libbitcoin_cli_a-client_utils.obj `if test -f 'rpc/client_utils.cpp'; then $(CYGPATH_W) 'rpc/client_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Po
#	$(AM_V_CXX)source='rpc/client_utils.cpp' object='rpc/libbitcoin_cli_a-client_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-client_utils.obj `if test -f 'rpc/client_utils.cpp'; then $(CYGPATH_W) 'rpc/client_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client_utils.cpp'; fi`

rpc/libbitcoin_cli_a-http_request.o: rpc/http_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-http_request.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Tpo -c -o rpc/libbitcoin_cli_a-http_request.o `test -f 'rpc/http_request.cpp' || echo '$(srcdir)/'`rpc/http_request.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Po
#	$(AM_V_CXX)source='rpc/http_request.cpp' object='rpc/libbitcoin_cli_a-http_request.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-http_request.o `test -f 'rpc/http_request.cpp' || echo '$(srcdir)/'`rpc/http_request.cpp

rpc/libbitcoin_cli_a-http_request.obj: rpc/http_request.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-http_request.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Tpo -c -o rpc/libbitcoin_cli_a-http_request.obj `if test -f 'rpc/http_request.cpp'; then $(CYGPATH_W) 'rpc/http_request.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/http_request.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Po
#	$(AM_V_CXX)source='rpc/http_request.cpp' object='rpc/libbitcoin_cli_a-http_request.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-http_request.obj `if test -f 'rpc/http_request.cpp'; then $(CYGPATH_W) 'rpc/http_request.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/http_request.cpp'; fi`

rpc/libbitcoin_cli_a-http_response.o: rpc/http_response.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-http_response.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Tpo -c -o rpc/libbitcoin_cli_a-http_response.o `test -f 'rpc/http_response.cpp' || echo '$(srcdir)/'`rpc/http_response.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Po
#	$(AM_V_CXX)source='rpc/http_response.cpp' object='rpc/libbitcoin_cli_a-http_response.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-http_response.o `test -f 'rpc/http_response.cpp' || echo '$(srcdir)/'`rpc/http_response.cpp

rpc/libbitcoin_cli_a-http_response.obj: rpc/http_response.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_cli_a-http_response.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Tpo -c -o rpc/libbitcoin_cli_a-http_response.obj `if test -f 'rpc/http_response.cpp'; then $(CYGPATH_W) 'rpc/http_response.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/http_response.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Tpo rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Po
#	$(AM_V_CXX)source='rpc/http_response.cpp' object='rpc/libbitcoin_cli_a-http_response.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_cli_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_cli_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_cli_a-http_response.obj `if test -f 'rpc/http_response.cpp'; then $(CYGPATH_W) 'rpc/http_response.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/http_response.cpp'; fi`

libbitcoin_common_a-amount.o: amount.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-amount.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-amount.Tpo -c -o libbitcoin_common_a-amount.o `test -f 'amount.cpp' || echo '$(srcdir)/'`amount.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-amount.Tpo $(DEPDIR)/libbitcoin_common_a-amount.Po
#	$(AM_V_CXX)source='amount.cpp' object='libbitcoin_common_a-amount.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-amount.o `test -f 'amount.cpp' || echo '$(srcdir)/'`amount.cpp

libbitcoin_common_a-amount.obj: amount.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-amount.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-amount.Tpo -c -o libbitcoin_common_a-amount.obj `if test -f 'amount.cpp'; then $(CYGPATH_W) 'amount.cpp'; else $(CYGPATH_W) '$(srcdir)/amount.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-amount.Tpo $(DEPDIR)/libbitcoin_common_a-amount.Po
#	$(AM_V_CXX)source='amount.cpp' object='libbitcoin_common_a-amount.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-amount.obj `if test -f 'amount.cpp'; then $(CYGPATH_W) 'amount.cpp'; else $(CYGPATH_W) '$(srcdir)/amount.cpp'; fi`

libbitcoin_common_a-base58.o: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-base58.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-base58.Tpo -c -o libbitcoin_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-base58.Tpo $(DEPDIR)/libbitcoin_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libbitcoin_common_a-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp

libbitcoin_common_a-base58.obj: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-base58.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-base58.Tpo -c -o libbitcoin_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-base58.Tpo $(DEPDIR)/libbitcoin_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libbitcoin_common_a-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`

libbitcoin_common_a-chainparams.o: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-chainparams.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo -c -o libbitcoin_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo $(DEPDIR)/libbitcoin_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libbitcoin_common_a-chainparams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp

libbitcoin_common_a-chainparams.obj: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-chainparams.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo -c -o libbitcoin_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-chainparams.Tpo $(DEPDIR)/libbitcoin_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libbitcoin_common_a-chainparams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`

libbitcoin_common_a-config.o: config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-config.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-config.Tpo -c -o libbitcoin_common_a-config.o `test -f 'config.cpp' || echo '$(srcdir)/'`config.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-config.Tpo $(DEPDIR)/libbitcoin_common_a-config.Po
#	$(AM_V_CXX)source='config.cpp' object='libbitcoin_common_a-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-config.o `test -f 'config.cpp' || echo '$(srcdir)/'`config.cpp

libbitcoin_common_a-config.obj: config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-config.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-config.Tpo -c -o libbitcoin_common_a-config.obj `if test -f 'config.cpp'; then $(CYGPATH_W) 'config.cpp'; else $(CYGPATH_W) '$(srcdir)/config.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-config.Tpo $(DEPDIR)/libbitcoin_common_a-config.Po
#	$(AM_V_CXX)source='config.cpp' object='libbitcoin_common_a-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-config.obj `if test -f 'config.cpp'; then $(CYGPATH_W) 'config.cpp'; else $(CYGPATH_W) '$(srcdir)/config.cpp'; fi`

libbitcoin_common_a-coins.o: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-coins.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-coins.Tpo -c -o libbitcoin_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-coins.Tpo $(DEPDIR)/libbitcoin_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libbitcoin_common_a-coins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp

libbitcoin_common_a-coins.obj: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-coins.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-coins.Tpo -c -o libbitcoin_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-coins.Tpo $(DEPDIR)/libbitcoin_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libbitcoin_common_a-coins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`

libbitcoin_common_a-compressor.o: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-compressor.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-compressor.Tpo -c -o libbitcoin_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-compressor.Tpo $(DEPDIR)/libbitcoin_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libbitcoin_common_a-compressor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp

libbitcoin_common_a-compressor.obj: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-compressor.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-compressor.Tpo -c -o libbitcoin_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-compressor.Tpo $(DEPDIR)/libbitcoin_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libbitcoin_common_a-compressor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`

libbitcoin_common_a-dstencode.o: dstencode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-dstencode.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-dstencode.Tpo -c -o libbitcoin_common_a-dstencode.o `test -f 'dstencode.cpp' || echo '$(srcdir)/'`dstencode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-dstencode.Tpo $(DEPDIR)/libbitcoin_common_a-dstencode.Po
#	$(AM_V_CXX)source='dstencode.cpp' object='libbitcoin_common_a-dstencode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-dstencode.o `test -f 'dstencode.cpp' || echo '$(srcdir)/'`dstencode.cpp

libbitcoin_common_a-dstencode.obj: dstencode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-dstencode.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-dstencode.Tpo -c -o libbitcoin_common_a-dstencode.obj `if test -f 'dstencode.cpp'; then $(CYGPATH_W) 'dstencode.cpp'; else $(CYGPATH_W) '$(srcdir)/dstencode.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-dstencode.Tpo $(DEPDIR)/libbitcoin_common_a-dstencode.Po
#	$(AM_V_CXX)source='dstencode.cpp' object='libbitcoin_common_a-dstencode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-dstencode.obj `if test -f 'dstencode.cpp'; then $(CYGPATH_W) 'dstencode.cpp'; else $(CYGPATH_W) '$(srcdir)/dstencode.cpp'; fi`

libbitcoin_common_a-core_read.o: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_read.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_read.Tpo -c -o libbitcoin_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_read.Tpo $(DEPDIR)/libbitcoin_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libbitcoin_common_a-core_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp

libbitcoin_common_a-core_read.obj: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_read.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_read.Tpo -c -o libbitcoin_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_read.Tpo $(DEPDIR)/libbitcoin_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libbitcoin_common_a-core_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`

libbitcoin_common_a-core_write.o: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_write.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_write.Tpo -c -o libbitcoin_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_write.Tpo $(DEPDIR)/libbitcoin_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libbitcoin_common_a-core_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp

libbitcoin_common_a-core_write.obj: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-core_write.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-core_write.Tpo -c -o libbitcoin_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-core_write.Tpo $(DEPDIR)/libbitcoin_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libbitcoin_common_a-core_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`

libbitcoin_common_a-key.o: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libbitcoin_common_a-key.obj: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-key.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-key.Tpo -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-key.Tpo $(DEPDIR)/libbitcoin_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libbitcoin_common_a-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`

libbitcoin_common_a-keystore.o: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-keystore.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keystore.Tpo -c -o libbitcoin_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keystore.Tpo $(DEPDIR)/libbitcoin_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_common_a-keystore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp

libbitcoin_common_a-keystore.obj: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-keystore.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-keystore.Tpo -c -o libbitcoin_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-keystore.Tpo $(DEPDIR)/libbitcoin_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libbitcoin_common_a-keystore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`

net/libbitcoin_common_a-netaddress.o: net/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_common_a-netaddress.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_common_a-netaddress.Tpo -c -o net/libbitcoin_common_a-netaddress.o `test -f 'net/netaddress.cpp' || echo '$(srcdir)/'`net/netaddress.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_common_a-netaddress.Tpo net/$(DEPDIR)/libbitcoin_common_a-netaddress.Po
#	$(AM_V_CXX)source='net/netaddress.cpp' object='net/libbitcoin_common_a-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_common_a-netaddress.o `test -f 'net/netaddress.cpp' || echo '$(srcdir)/'`net/netaddress.cpp

net/libbitcoin_common_a-netaddress.obj: net/netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_common_a-netaddress.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_common_a-netaddress.Tpo -c -o net/libbitcoin_common_a-netaddress.obj `if test -f 'net/netaddress.cpp'; then $(CYGPATH_W) 'net/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_common_a-netaddress.Tpo net/$(DEPDIR)/libbitcoin_common_a-netaddress.Po
#	$(AM_V_CXX)source='net/netaddress.cpp' object='net/libbitcoin_common_a-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_common_a-netaddress.obj `if test -f 'net/netaddress.cpp'; then $(CYGPATH_W) 'net/netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netaddress.cpp'; fi`

net/libbitcoin_common_a-netbase.o: net/netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_common_a-netbase.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o net/libbitcoin_common_a-netbase.o `test -f 'net/netbase.cpp' || echo '$(srcdir)/'`net/netbase.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_common_a-netbase.Tpo net/$(DEPDIR)/libbitcoin_common_a-netbase.Po
#	$(AM_V_CXX)source='net/netbase.cpp' object='net/libbitcoin_common_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_common_a-netbase.o `test -f 'net/netbase.cpp' || echo '$(srcdir)/'`net/netbase.cpp

net/libbitcoin_common_a-netbase.obj: net/netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_common_a-netbase.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_common_a-netbase.Tpo -c -o net/libbitcoin_common_a-netbase.obj `if test -f 'net/netbase.cpp'; then $(CYGPATH_W) 'net/netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_common_a-netbase.Tpo net/$(DEPDIR)/libbitcoin_common_a-netbase.Po
#	$(AM_V_CXX)source='net/netbase.cpp' object='net/libbitcoin_common_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_common_a-netbase.obj `if test -f 'net/netbase.cpp'; then $(CYGPATH_W) 'net/netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/net/netbase.cpp'; fi`

libbitcoin_common_a-protocol.o: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

libbitcoin_common_a-protocol.obj: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-protocol.Tpo -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-protocol.Tpo $(DEPDIR)/libbitcoin_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libbitcoin_common_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

rpc/libbitcoin_common_a-jsonwriter.o: rpc/jsonwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-jsonwriter.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Tpo -c -o rpc/libbitcoin_common_a-jsonwriter.o `test -f 'rpc/jsonwriter.cpp' || echo '$(srcdir)/'`rpc/jsonwriter.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Po
#	$(AM_V_CXX)source='rpc/jsonwriter.cpp' object='rpc/libbitcoin_common_a-jsonwriter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-jsonwriter.o `test -f 'rpc/jsonwriter.cpp' || echo '$(srcdir)/'`rpc/jsonwriter.cpp

rpc/libbitcoin_common_a-jsonwriter.obj: rpc/jsonwriter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_common_a-jsonwriter.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Tpo -c -o rpc/libbitcoin_common_a-jsonwriter.obj `if test -f 'rpc/jsonwriter.cpp'; then $(CYGPATH_W) 'rpc/jsonwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/jsonwriter.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Tpo rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Po
#	$(AM_V_CXX)source='rpc/jsonwriter.cpp' object='rpc/libbitcoin_common_a-jsonwriter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_common_a-jsonwriter.obj `if test -f 'rpc/jsonwriter.cpp'; then $(CYGPATH_W) 'rpc/jsonwriter.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/jsonwriter.cpp'; fi`

libbitcoin_common_a-scheduler.o: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-scheduler.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo -c -o libbitcoin_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo $(DEPDIR)/libbitcoin_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libbitcoin_common_a-scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

libbitcoin_common_a-scheduler.obj: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo -c -o libbitcoin_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-scheduler.Tpo $(DEPDIR)/libbitcoin_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libbitcoin_common_a-scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`

script/libbitcoin_common_a-sign.o: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-sign.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo -c -o script/libbitcoin_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo script/$(DEPDIR)/libbitcoin_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitcoin_common_a-sign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp

script/libbitcoin_common_a-sign.obj: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-sign.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo -c -o script/libbitcoin_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-sign.Tpo script/$(DEPDIR)/libbitcoin_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libbitcoin_common_a-sign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`

script/libbitcoin_common_a-standard.o: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-standard.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo -c -o script/libbitcoin_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo script/$(DEPDIR)/libbitcoin_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitcoin_common_a-standard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

script/libbitcoin_common_a-standard.obj: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_common_a-standard.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo -c -o script/libbitcoin_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_common_a-standard.Tpo script/$(DEPDIR)/libbitcoin_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libbitcoin_common_a-standard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`

libbitcoin_common_a-transaction_specific_config.o: transaction_specific_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-transaction_specific_config.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Tpo -c -o libbitcoin_common_a-transaction_specific_config.o `test -f 'transaction_specific_config.cpp' || echo '$(srcdir)/'`transaction_specific_config.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Tpo $(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Po
#	$(AM_V_CXX)source='transaction_specific_config.cpp' object='libbitcoin_common_a-transaction_specific_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-transaction_specific_config.o `test -f 'transaction_specific_config.cpp' || echo '$(srcdir)/'`transaction_specific_config.cpp

libbitcoin_common_a-transaction_specific_config.obj: transaction_specific_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-transaction_specific_config.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Tpo -c -o libbitcoin_common_a-transaction_specific_config.obj `if test -f 'transaction_specific_config.cpp'; then $(CYGPATH_W) 'transaction_specific_config.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_specific_config.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Tpo $(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Po
#	$(AM_V_CXX)source='transaction_specific_config.cpp' object='libbitcoin_common_a-transaction_specific_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-transaction_specific_config.obj `if test -f 'transaction_specific_config.cpp'; then $(CYGPATH_W) 'transaction_specific_config.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_specific_config.cpp'; fi`

libbitcoin_common_a-txhasher.o: txhasher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-txhasher.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-txhasher.Tpo -c -o libbitcoin_common_a-txhasher.o `test -f 'txhasher.cpp' || echo '$(srcdir)/'`txhasher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-txhasher.Tpo $(DEPDIR)/libbitcoin_common_a-txhasher.Po
#	$(AM_V_CXX)source='txhasher.cpp' object='libbitcoin_common_a-txhasher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-txhasher.o `test -f 'txhasher.cpp' || echo '$(srcdir)/'`txhasher.cpp

libbitcoin_common_a-txhasher.obj: txhasher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-txhasher.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-txhasher.Tpo -c -o libbitcoin_common_a-txhasher.obj `if test -f 'txhasher.cpp'; then $(CYGPATH_W) 'txhasher.cpp'; else $(CYGPATH_W) '$(srcdir)/txhasher.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-txhasher.Tpo $(DEPDIR)/libbitcoin_common_a-txhasher.Po
#	$(AM_V_CXX)source='txhasher.cpp' object='libbitcoin_common_a-txhasher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-txhasher.obj `if test -f 'txhasher.cpp'; then $(CYGPATH_W) 'txhasher.cpp'; else $(CYGPATH_W) '$(srcdir)/txhasher.cpp'; fi`

libbitcoin_common_a-warnings.o: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-warnings.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-warnings.Tpo -c -o libbitcoin_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-warnings.Tpo $(DEPDIR)/libbitcoin_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libbitcoin_common_a-warnings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-warnings.o `test -f 'warnings.cpp' || echo '$(srcdir)/'`warnings.cpp

libbitcoin_common_a-warnings.obj: warnings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-warnings.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-warnings.Tpo -c -o libbitcoin_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-warnings.Tpo $(DEPDIR)/libbitcoin_common_a-warnings.Po
#	$(AM_V_CXX)source='warnings.cpp' object='libbitcoin_common_a-warnings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-warnings.obj `if test -f 'warnings.cpp'; then $(CYGPATH_W) 'warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/warnings.cpp'; fi`

libbitcoin_common_a-write_preferring_upgradable_mutex.o: write_preferring_upgradable_mutex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-write_preferring_upgradable_mutex.o -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Tpo -c -o libbitcoin_common_a-write_preferring_upgradable_mutex.o `test -f 'write_preferring_upgradable_mutex.cpp' || echo '$(srcdir)/'`write_preferring_upgradable_mutex.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Tpo $(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Po
#	$(AM_V_CXX)source='write_preferring_upgradable_mutex.cpp' object='libbitcoin_common_a-write_preferring_upgradable_mutex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-write_preferring_upgradable_mutex.o `test -f 'write_preferring_upgradable_mutex.cpp' || echo '$(srcdir)/'`write_preferring_upgradable_mutex.cpp

libbitcoin_common_a-write_preferring_upgradable_mutex.obj: write_preferring_upgradable_mutex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_common_a-write_preferring_upgradable_mutex.obj -MD -MP -MF $(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Tpo -c -o libbitcoin_common_a-write_preferring_upgradable_mutex.obj `if test -f 'write_preferring_upgradable_mutex.cpp'; then $(CYGPATH_W) 'write_preferring_upgradable_mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/write_preferring_upgradable_mutex.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Tpo $(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Po
#	$(AM_V_CXX)source='write_preferring_upgradable_mutex.cpp' object='libbitcoin_common_a-write_preferring_upgradable_mutex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_common_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_common_a-write_preferring_upgradable_mutex.obj `if test -f 'write_preferring_upgradable_mutex.cpp'; then $(CYGPATH_W) 'write_preferring_upgradable_mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/write_preferring_upgradable_mutex.cpp'; fi`

libbitcoin_consensus_a-arith_uint256.o: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-arith_uint256.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo -c -o libbitcoin_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoin_consensus_a-arith_uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libbitcoin_consensus_a-arith_uint256.obj: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-arith_uint256.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo -c -o libbitcoin_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Tpo $(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoin_consensus_a-arith_uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`

libbitcoin_consensus_a-big_int.o: big_int.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-big_int.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-big_int.Tpo -c -o libbitcoin_consensus_a-big_int.o `test -f 'big_int.cpp' || echo '$(srcdir)/'`big_int.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-big_int.Tpo $(DEPDIR)/libbitcoin_consensus_a-big_int.Po
#	$(AM_V_CXX)source='big_int.cpp' object='libbitcoin_consensus_a-big_int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-big_int.o `test -f 'big_int.cpp' || echo '$(srcdir)/'`big_int.cpp

libbitcoin_consensus_a-big_int.obj: big_int.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-big_int.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-big_int.Tpo -c -o libbitcoin_consensus_a-big_int.obj `if test -f 'big_int.cpp'; then $(CYGPATH_W) 'big_int.cpp'; else $(CYGPATH_W) '$(srcdir)/big_int.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-big_int.Tpo $(DEPDIR)/libbitcoin_consensus_a-big_int.Po
#	$(AM_V_CXX)source='big_int.cpp' object='libbitcoin_consensus_a-big_int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-big_int.obj `if test -f 'big_int.cpp'; then $(CYGPATH_W) 'big_int.cpp'; else $(CYGPATH_W) '$(srcdir)/big_int.cpp'; fi`

libbitcoin_consensus_a-cfile_util.o: cfile_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-cfile_util.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-cfile_util.Tpo -c -o libbitcoin_consensus_a-cfile_util.o `test -f 'cfile_util.cpp' || echo '$(srcdir)/'`cfile_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-cfile_util.Tpo $(DEPDIR)/libbitcoin_consensus_a-cfile_util.Po
#	$(AM_V_CXX)source='cfile_util.cpp' object='libbitcoin_consensus_a-cfile_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-cfile_util.o `test -f 'cfile_util.cpp' || echo '$(srcdir)/'`cfile_util.cpp

libbitcoin_consensus_a-cfile_util.obj: cfile_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-cfile_util.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-cfile_util.Tpo -c -o libbitcoin_consensus_a-cfile_util.obj `if test -f 'cfile_util.cpp'; then $(CYGPATH_W) 'cfile_util.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-cfile_util.Tpo $(DEPDIR)/libbitcoin_consensus_a-cfile_util.Po
#	$(AM_V_CXX)source='cfile_util.cpp' object='libbitcoin_consensus_a-cfile_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-cfile_util.obj `if test -f 'cfile_util.cpp'; then $(CYGPATH_W) 'cfile_util.cpp'; else $(CYGPATH_W) '$(srcdir)/cfile_util.cpp'; fi`

consensus/libbitcoin_consensus_a-merkle.o: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_consensus_a-merkle.o -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo -c -o consensus/libbitcoin_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitcoin_consensus_a-merkle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_consensus_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libbitcoin_consensus_a-merkle.obj: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoin_consensus_a-merkle.obj -MD -MP -MF consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo -c -o consensus/libbitcoin_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Tpo consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitcoin_consensus_a-merkle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoin_consensus_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`

libbitcoin_consensus_a-hash.o: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-hash.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo -c -o libbitcoin_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo $(DEPDIR)/libbitcoin_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_consensus_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libbitcoin_consensus_a-hash.obj: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-hash.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo -c -o libbitcoin_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-hash.Tpo $(DEPDIR)/libbitcoin_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libbitcoin_consensus_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

primitives/libbitcoin_consensus_a-block.o: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-block.o -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo -c -o primitives/libbitcoin_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoin_consensus_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitcoin_consensus_a-block.obj: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-block.obj -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo -c -o primitives/libbitcoin_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoin_consensus_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`

primitives/libbitcoin_consensus_a-transaction.o: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo -c -o primitives/libbitcoin_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoin_consensus_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libbitcoin_consensus_a-transaction.obj: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoin_consensus_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo -c -o primitives/libbitcoin_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoin_consensus_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoin_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

libbitcoin_consensus_a-pubkey.o: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-pubkey.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo -c -o libbitcoin_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo $(DEPDIR)/libbitcoin_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoin_consensus_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libbitcoin_consensus_a-pubkey.obj: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-pubkey.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo -c -o libbitcoin_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-pubkey.Tpo $(DEPDIR)/libbitcoin_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoin_consensus_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`

script/libbitcoin_consensus_a-bitcoinconsensus.o: script/bitcoinconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-bitcoinconsensus.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo -c -o script/libbitcoin_consensus_a-bitcoinconsensus.o `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po
#	$(AM_V_CXX)source='script/bitcoinconsensus.cpp' object='script/libbitcoin_consensus_a-bitcoinconsensus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-bitcoinconsensus.o `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp

script/libbitcoin_consensus_a-bitcoinconsensus.obj: script/bitcoinconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-bitcoinconsensus.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo -c -o script/libbitcoin_consensus_a-bitcoinconsensus.obj `if test -f 'script/bitcoinconsensus.cpp'; then $(CYGPATH_W) 'script/bitcoinconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/bitcoinconsensus.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po
#	$(AM_V_CXX)source='script/bitcoinconsensus.cpp' object='script/libbitcoin_consensus_a-bitcoinconsensus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-bitcoinconsensus.obj `if test -f 'script/bitcoinconsensus.cpp'; then $(CYGPATH_W) 'script/bitcoinconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/bitcoinconsensus.cpp'; fi`

script/libbitcoin_consensus_a-interpreter.o: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo -c -o script/libbitcoin_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoin_consensus_a-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitcoin_consensus_a-interpreter.obj: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo -c -o script/libbitcoin_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoin_consensus_a-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/libbitcoin_consensus_a-limitedstack.o: script/limitedstack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-limitedstack.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Tpo -c -o script/libbitcoin_consensus_a-limitedstack.o `test -f 'script/limitedstack.cpp' || echo '$(srcdir)/'`script/limitedstack.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Po
#	$(AM_V_CXX)source='script/limitedstack.cpp' object='script/libbitcoin_consensus_a-limitedstack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-limitedstack.o `test -f 'script/limitedstack.cpp' || echo '$(srcdir)/'`script/limitedstack.cpp

script/libbitcoin_consensus_a-limitedstack.obj: script/limitedstack.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-limitedstack.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Tpo -c -o script/libbitcoin_consensus_a-limitedstack.obj `if test -f 'script/limitedstack.cpp'; then $(CYGPATH_W) 'script/limitedstack.cpp'; else $(CYGPATH_W) '$(srcdir)/script/limitedstack.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Po
#	$(AM_V_CXX)source='script/limitedstack.cpp' object='script/libbitcoin_consensus_a-limitedstack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-limitedstack.obj `if test -f 'script/limitedstack.cpp'; then $(CYGPATH_W) 'script/limitedstack.cpp'; else $(CYGPATH_W) '$(srcdir)/script/limitedstack.cpp'; fi`

script/libbitcoin_consensus_a-opcodes.o: script/opcodes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-opcodes.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Tpo -c -o script/libbitcoin_consensus_a-opcodes.o `test -f 'script/opcodes.cpp' || echo '$(srcdir)/'`script/opcodes.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Po
#	$(AM_V_CXX)source='script/opcodes.cpp' object='script/libbitcoin_consensus_a-opcodes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-opcodes.o `test -f 'script/opcodes.cpp' || echo '$(srcdir)/'`script/opcodes.cpp

script/libbitcoin_consensus_a-opcodes.obj: script/opcodes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-opcodes.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Tpo -c -o script/libbitcoin_consensus_a-opcodes.obj `if test -f 'script/opcodes.cpp'; then $(CYGPATH_W) 'script/opcodes.cpp'; else $(CYGPATH_W) '$(srcdir)/script/opcodes.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Po
#	$(AM_V_CXX)source='script/opcodes.cpp' object='script/libbitcoin_consensus_a-opcodes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-opcodes.obj `if test -f 'script/opcodes.cpp'; then $(CYGPATH_W) 'script/opcodes.cpp'; else $(CYGPATH_W) '$(srcdir)/script/opcodes.cpp'; fi`

script/libbitcoin_consensus_a-script.o: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo -c -o script/libbitcoin_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoin_consensus_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitcoin_consensus_a-script.obj: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo -c -o script/libbitcoin_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoin_consensus_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

script/libbitcoin_consensus_a-script_num.o: script/script_num.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script_num.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Tpo -c -o script/libbitcoin_consensus_a-script_num.o `test -f 'script/script_num.cpp' || echo '$(srcdir)/'`script/script_num.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Po
#	$(AM_V_CXX)source='script/script_num.cpp' object='script/libbitcoin_consensus_a-script_num.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script_num.o `test -f 'script/script_num.cpp' || echo '$(srcdir)/'`script/script_num.cpp

script/libbitcoin_consensus_a-script_num.obj: script/script_num.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script_num.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Tpo -c -o script/libbitcoin_consensus_a-script_num.obj `if test -f 'script/script_num.cpp'; then $(CYGPATH_W) 'script/script_num.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_num.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Po
#	$(AM_V_CXX)source='script/script_num.cpp' object='script/libbitcoin_consensus_a-script_num.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script_num.obj `if test -f 'script/script_num.cpp'; then $(CYGPATH_W) 'script/script_num.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_num.cpp'; fi`

script/libbitcoin_consensus_a-script_error.o: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script_error.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo -c -o script/libbitcoin_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoin_consensus_a-script_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/libbitcoin_consensus_a-script_error.obj: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_consensus_a-script_error.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo -c -o script/libbitcoin_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Tpo script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoin_consensus_a-script_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_consensus_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`

libbitcoin_consensus_a-taskcancellation.o: taskcancellation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-taskcancellation.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Tpo -c -o libbitcoin_consensus_a-taskcancellation.o `test -f 'taskcancellation.cpp' || echo '$(srcdir)/'`taskcancellation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Tpo $(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Po
#	$(AM_V_CXX)source='taskcancellation.cpp' object='libbitcoin_consensus_a-taskcancellation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-taskcancellation.o `test -f 'taskcancellation.cpp' || echo '$(srcdir)/'`taskcancellation.cpp

libbitcoin_consensus_a-taskcancellation.obj: taskcancellation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-taskcancellation.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Tpo -c -o libbitcoin_consensus_a-taskcancellation.obj `if test -f 'taskcancellation.cpp'; then $(CYGPATH_W) 'taskcancellation.cpp'; else $(CYGPATH_W) '$(srcdir)/taskcancellation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Tpo $(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Po
#	$(AM_V_CXX)source='taskcancellation.cpp' object='libbitcoin_consensus_a-taskcancellation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-taskcancellation.obj `if test -f 'taskcancellation.cpp'; then $(CYGPATH_W) 'taskcancellation.cpp'; else $(CYGPATH_W) '$(srcdir)/taskcancellation.cpp'; fi`

libbitcoin_consensus_a-utilstrencodings.o: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-utilstrencodings.o -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Tpo -c -o libbitcoin_consensus_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Tpo $(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libbitcoin_consensus_a-utilstrencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

libbitcoin_consensus_a-utilstrencodings.obj: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_consensus_a-utilstrencodings.obj -MD -MP -MF $(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Tpo -c -o libbitcoin_consensus_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Tpo $(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libbitcoin_consensus_a-utilstrencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_consensus_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`

libbitcoin_server_a-abort_node.o: abort_node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-abort_node.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-abort_node.Tpo -c -o libbitcoin_server_a-abort_node.o `test -f 'abort_node.cpp' || echo '$(srcdir)/'`abort_node.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-abort_node.Tpo $(DEPDIR)/libbitcoin_server_a-abort_node.Po
#	$(AM_V_CXX)source='abort_node.cpp' object='libbitcoin_server_a-abort_node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-abort_node.o `test -f 'abort_node.cpp' || echo '$(srcdir)/'`abort_node.cpp

libbitcoin_server_a-abort_node.obj: abort_node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-abort_node.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-abort_node.Tpo -c -o libbitcoin_server_a-abort_node.obj `if test -f 'abort_node.cpp'; then $(CYGPATH_W) 'abort_node.cpp'; else $(CYGPATH_W) '$(srcdir)/abort_node.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-abort_node.Tpo $(DEPDIR)/libbitcoin_server_a-abort_node.Po
#	$(AM_V_CXX)source='abort_node.cpp' object='libbitcoin_server_a-abort_node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-abort_node.obj `if test -f 'abort_node.cpp'; then $(CYGPATH_W) 'abort_node.cpp'; else $(CYGPATH_W) '$(srcdir)/abort_node.cpp'; fi`

libbitcoin_server_a-addrman.o: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp

libbitcoin_server_a-addrman.obj: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrman.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrman.Tpo -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrman.Tpo $(DEPDIR)/libbitcoin_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libbitcoin_server_a-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`

libbitcoin_server_a-addrdb.o: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrdb.Tpo -c -o libbitcoin_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrdb.Tpo $(DEPDIR)/libbitcoin_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libbitcoin_server_a-addrdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp

libbitcoin_server_a-addrdb.obj: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-addrdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-addrdb.Tpo -c -o libbitcoin_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-addrdb.Tpo $(DEPDIR)/libbitcoin_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libbitcoin_server_a-addrdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`

libbitcoin_server_a-bloom.o: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bloom.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bloom.Tpo -c -o libbitcoin_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bloom.Tpo $(DEPDIR)/libbitcoin_server_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libbitcoin_server_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp

libbitcoin_server_a-bloom.obj: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-bloom.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-bloom.Tpo -c -o libbitcoin_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-bloom.Tpo $(DEPDIR)/libbitcoin_server_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libbitcoin_server_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`

libbitcoin_server_a-block_index.o: block_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_index.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_index.Tpo -c -o libbitcoin_server_a-block_index.o `test -f 'block_index.cpp' || echo '$(srcdir)/'`block_index.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_index.Tpo $(DEPDIR)/libbitcoin_server_a-block_index.Po
#	$(AM_V_CXX)source='block_index.cpp' object='libbitcoin_server_a-block_index.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_index.o `test -f 'block_index.cpp' || echo '$(srcdir)/'`block_index.cpp

libbitcoin_server_a-block_index.obj: block_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_index.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_index.Tpo -c -o libbitcoin_server_a-block_index.obj `if test -f 'block_index.cpp'; then $(CYGPATH_W) 'block_index.cpp'; else $(CYGPATH_W) '$(srcdir)/block_index.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_index.Tpo $(DEPDIR)/libbitcoin_server_a-block_index.Po
#	$(AM_V_CXX)source='block_index.cpp' object='libbitcoin_server_a-block_index.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_index.obj `if test -f 'block_index.cpp'; then $(CYGPATH_W) 'block_index.cpp'; else $(CYGPATH_W) '$(srcdir)/block_index.cpp'; fi`

libbitcoin_server_a-blockencodings.o: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-blockencodings.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-blockencodings.Tpo -c -o libbitcoin_server_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-blockencodings.Tpo $(DEPDIR)/libbitcoin_server_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libbitcoin_server_a-blockencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-blockencodings.o `test -f 'blockencodings.cpp' || echo '$(srcdir)/'`blockencodings.cpp

libbitcoin_server_a-blockencodings.obj: blockencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-blockencodings.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-blockencodings.Tpo -c -o libbitcoin_server_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-blockencodings.Tpo $(DEPDIR)/libbitcoin_server_a-blockencodings.Po
#	$(AM_V_CXX)source='blockencodings.cpp' object='libbitcoin_server_a-blockencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-blockencodings.obj `if test -f 'blockencodings.cpp'; then $(CYGPATH_W) 'blockencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/blockencodings.cpp'; fi`

libbitcoin_server_a-block_file_info.o: block_file_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_file_info.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_file_info.Tpo -c -o libbitcoin_server_a-block_file_info.o `test -f 'block_file_info.cpp' || echo '$(srcdir)/'`block_file_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_file_info.Tpo $(DEPDIR)/libbitcoin_server_a-block_file_info.Po
#	$(AM_V_CXX)source='block_file_info.cpp' object='libbitcoin_server_a-block_file_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_file_info.o `test -f 'block_file_info.cpp' || echo '$(srcdir)/'`block_file_info.cpp

libbitcoin_server_a-block_file_info.obj: block_file_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_file_info.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_file_info.Tpo -c -o libbitcoin_server_a-block_file_info.obj `if test -f 'block_file_info.cpp'; then $(CYGPATH_W) 'block_file_info.cpp'; else $(CYGPATH_W) '$(srcdir)/block_file_info.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_file_info.Tpo $(DEPDIR)/libbitcoin_server_a-block_file_info.Po
#	$(AM_V_CXX)source='block_file_info.cpp' object='libbitcoin_server_a-block_file_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_file_info.obj `if test -f 'block_file_info.cpp'; then $(CYGPATH_W) 'block_file_info.cpp'; else $(CYGPATH_W) '$(srcdir)/block_file_info.cpp'; fi`

libbitcoin_server_a-blockfileinfostore.o: blockfileinfostore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-blockfileinfostore.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Tpo -c -o libbitcoin_server_a-blockfileinfostore.o `test -f 'blockfileinfostore.cpp' || echo '$(srcdir)/'`blockfileinfostore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Tpo $(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Po
#	$(AM_V_CXX)source='blockfileinfostore.cpp' object='libbitcoin_server_a-blockfileinfostore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-blockfileinfostore.o `test -f 'blockfileinfostore.cpp' || echo '$(srcdir)/'`blockfileinfostore.cpp

libbitcoin_server_a-blockfileinfostore.obj: blockfileinfostore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-blockfileinfostore.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Tpo -c -o libbitcoin_server_a-blockfileinfostore.obj `if test -f 'blockfileinfostore.cpp'; then $(CYGPATH_W) 'blockfileinfostore.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfileinfostore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Tpo $(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Po
#	$(AM_V_CXX)source='blockfileinfostore.cpp' object='libbitcoin_server_a-blockfileinfostore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-blockfileinfostore.obj `if test -f 'blockfileinfostore.cpp'; then $(CYGPATH_W) 'blockfileinfostore.cpp'; else $(CYGPATH_W) '$(srcdir)/blockfileinfostore.cpp'; fi`

libbitcoin_server_a-block_file_access.o: block_file_access.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_file_access.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_file_access.Tpo -c -o libbitcoin_server_a-block_file_access.o `test -f 'block_file_access.cpp' || echo '$(srcdir)/'`block_file_access.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_file_access.Tpo $(DEPDIR)/libbitcoin_server_a-block_file_access.Po
#	$(AM_V_CXX)source='block_file_access.cpp' object='libbitcoin_server_a-block_file_access.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_file_access.o `test -f 'block_file_access.cpp' || echo '$(srcdir)/'`block_file_access.cpp

libbitcoin_server_a-block_file_access.obj: block_file_access.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_file_access.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_file_access.Tpo -c -o libbitcoin_server_a-block_file_access.obj `if test -f 'block_file_access.cpp'; then $(CYGPATH_W) 'block_file_access.cpp'; else $(CYGPATH_W) '$(srcdir)/block_file_access.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_file_access.Tpo $(DEPDIR)/libbitcoin_server_a-block_file_access.Po
#	$(AM_V_CXX)source='block_file_access.cpp' object='libbitcoin_server_a-block_file_access.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_file_access.obj `if test -f 'block_file_access.cpp'; then $(CYGPATH_W) 'block_file_access.cpp'; else $(CYGPATH_W) '$(srcdir)/block_file_access.cpp'; fi`

libbitcoin_server_a-block_index_store_loader.o: block_index_store_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_index_store_loader.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Tpo -c -o libbitcoin_server_a-block_index_store_loader.o `test -f 'block_index_store_loader.cpp' || echo '$(srcdir)/'`block_index_store_loader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Tpo $(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Po
#	$(AM_V_CXX)source='block_index_store_loader.cpp' object='libbitcoin_server_a-block_index_store_loader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_index_store_loader.o `test -f 'block_index_store_loader.cpp' || echo '$(srcdir)/'`block_index_store_loader.cpp

libbitcoin_server_a-block_index_store_loader.obj: block_index_store_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-block_index_store_loader.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Tpo -c -o libbitcoin_server_a-block_index_store_loader.obj `if test -f 'block_index_store_loader.cpp'; then $(CYGPATH_W) 'block_index_store_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/block_index_store_loader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Tpo $(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Po
#	$(AM_V_CXX)source='block_index_store_loader.cpp' object='libbitcoin_server_a-block_index_store_loader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-block_index_store_loader.obj `if test -f 'block_index_store_loader.cpp'; then $(CYGPATH_W) 'block_index_store_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/block_index_store_loader.cpp'; fi`

libbitcoin_server_a-chain.o: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-chain.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-chain.Tpo -c -o libbitcoin_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-chain.Tpo $(DEPDIR)/libbitcoin_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libbitcoin_server_a-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp

libbitcoin_server_a-chain.obj: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-chain.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-chain.Tpo -c -o libbitcoin_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-chain.Tpo $(DEPDIR)/libbitcoin_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libbitcoin_server_a-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`

libbitcoin_server_a-checkpoints.o: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp

libbitcoin_server_a-checkpoints.obj: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-checkpoints.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-checkpoints.Tpo $(DEPDIR)/libbitcoin_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libbitcoin_server_a-checkpoints.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`

miner_id/libbitcoin_server_a-coinbase_doc.o: miner_id/coinbase_doc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-coinbase_doc.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Tpo -c -o miner_id/libbitcoin_server_a-coinbase_doc.o `test -f 'miner_id/coinbase_doc.cpp' || echo '$(srcdir)/'`miner_id/coinbase_doc.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Po
#	$(AM_V_CXX)source='miner_id/coinbase_doc.cpp' object='miner_id/libbitcoin_server_a-coinbase_doc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-coinbase_doc.o `test -f 'miner_id/coinbase_doc.cpp' || echo '$(srcdir)/'`miner_id/coinbase_doc.cpp

miner_id/libbitcoin_server_a-coinbase_doc.obj: miner_id/coinbase_doc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-coinbase_doc.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Tpo -c -o miner_id/libbitcoin_server_a-coinbase_doc.obj `if test -f 'miner_id/coinbase_doc.cpp'; then $(CYGPATH_W) 'miner_id/coinbase_doc.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/coinbase_doc.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Po
#	$(AM_V_CXX)source='miner_id/coinbase_doc.cpp' object='miner_id/libbitcoin_server_a-coinbase_doc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-coinbase_doc.obj `if test -f 'miner_id/coinbase_doc.cpp'; then $(CYGPATH_W) 'miner_id/coinbase_doc.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/coinbase_doc.cpp'; fi`

libbitcoin_server_a-frozentxo.o: frozentxo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-frozentxo.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-frozentxo.Tpo -c -o libbitcoin_server_a-frozentxo.o `test -f 'frozentxo.cpp' || echo '$(srcdir)/'`frozentxo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-frozentxo.Tpo $(DEPDIR)/libbitcoin_server_a-frozentxo.Po
#	$(AM_V_CXX)source='frozentxo.cpp' object='libbitcoin_server_a-frozentxo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-frozentxo.o `test -f 'frozentxo.cpp' || echo '$(srcdir)/'`frozentxo.cpp

libbitcoin_server_a-frozentxo.obj: frozentxo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-frozentxo.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-frozentxo.Tpo -c -o libbitcoin_server_a-frozentxo.obj `if test -f 'frozentxo.cpp'; then $(CYGPATH_W) 'frozentxo.cpp'; else $(CYGPATH_W) '$(srcdir)/frozentxo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-frozentxo.Tpo $(DEPDIR)/libbitcoin_server_a-frozentxo.Po
#	$(AM_V_CXX)source='frozentxo.cpp' object='libbitcoin_server_a-frozentxo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-frozentxo.obj `if test -f 'frozentxo.cpp'; then $(CYGPATH_W) 'frozentxo.cpp'; else $(CYGPATH_W) '$(srcdir)/frozentxo.cpp'; fi`

libbitcoin_server_a-frozentxo_db.o: frozentxo_db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-frozentxo_db.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-frozentxo_db.Tpo -c -o libbitcoin_server_a-frozentxo_db.o `test -f 'frozentxo_db.cpp' || echo '$(srcdir)/'`frozentxo_db.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-frozentxo_db.Tpo $(DEPDIR)/libbitcoin_server_a-frozentxo_db.Po
#	$(AM_V_CXX)source='frozentxo_db.cpp' object='libbitcoin_server_a-frozentxo_db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-frozentxo_db.o `test -f 'frozentxo_db.cpp' || echo '$(srcdir)/'`frozentxo_db.cpp

libbitcoin_server_a-frozentxo_db.obj: frozentxo_db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-frozentxo_db.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-frozentxo_db.Tpo -c -o libbitcoin_server_a-frozentxo_db.obj `if test -f 'frozentxo_db.cpp'; then $(CYGPATH_W) 'frozentxo_db.cpp'; else $(CYGPATH_W) '$(srcdir)/frozentxo_db.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-frozentxo_db.Tpo $(DEPDIR)/libbitcoin_server_a-frozentxo_db.Po
#	$(AM_V_CXX)source='frozentxo_db.cpp' object='libbitcoin_server_a-frozentxo_db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-frozentxo_db.obj `if test -f 'frozentxo_db.cpp'; then $(CYGPATH_W) 'frozentxo_db.cpp'; else $(CYGPATH_W) '$(srcdir)/frozentxo_db.cpp'; fi`

libbitcoin_server_a-frozentxo_logging.o: frozentxo_logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-frozentxo_logging.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Tpo -c -o libbitcoin_server_a-frozentxo_logging.o `test -f 'frozentxo_logging.cpp' || echo '$(srcdir)/'`frozentxo_logging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Tpo $(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Po
#	$(AM_V_CXX)source='frozentxo_logging.cpp' object='libbitcoin_server_a-frozentxo_logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-frozentxo_logging.o `test -f 'frozentxo_logging.cpp' || echo '$(srcdir)/'`frozentxo_logging.cpp

libbitcoin_server_a-frozentxo_logging.obj: frozentxo_logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-frozentxo_logging.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Tpo -c -o libbitcoin_server_a-frozentxo_logging.obj `if test -f 'frozentxo_logging.cpp'; then $(CYGPATH_W) 'frozentxo_logging.cpp'; else $(CYGPATH_W) '$(srcdir)/frozentxo_logging.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Tpo $(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Po
#	$(AM_V_CXX)source='frozentxo_logging.cpp' object='libbitcoin_server_a-frozentxo_logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-frozentxo_logging.obj `if test -f 'frozentxo_logging.cpp'; then $(CYGPATH_W) 'frozentxo_logging.cpp'; else $(CYGPATH_W) '$(srcdir)/frozentxo_logging.cpp'; fi`

libbitcoin_server_a-httprpc.o: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httprpc.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo -c -o libbitcoin_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo $(DEPDIR)/libbitcoin_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libbitcoin_server_a-httprpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp

libbitcoin_server_a-httprpc.obj: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httprpc.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo -c -o libbitcoin_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httprpc.Tpo $(DEPDIR)/libbitcoin_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libbitcoin_server_a-httprpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`

libbitcoin_server_a-httpserver.o: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httpserver.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo -c -o libbitcoin_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo $(DEPDIR)/libbitcoin_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libbitcoin_server_a-httpserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp

libbitcoin_server_a-httpserver.obj: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-httpserver.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo -c -o libbitcoin_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-httpserver.Tpo $(DEPDIR)/libbitcoin_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libbitcoin_server_a-httpserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`

libbitcoin_server_a-init.o: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp

libbitcoin_server_a-init.obj: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-init.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-init.Tpo -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-init.Tpo $(DEPDIR)/libbitcoin_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libbitcoin_server_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`

libbitcoin_server_a-invalid_txn_publisher.o: invalid_txn_publisher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-invalid_txn_publisher.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Tpo -c -o libbitcoin_server_a-invalid_txn_publisher.o `test -f 'invalid_txn_publisher.cpp' || echo '$(srcdir)/'`invalid_txn_publisher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Tpo $(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Po
#	$(AM_V_CXX)source='invalid_txn_publisher.cpp' object='libbitcoin_server_a-invalid_txn_publisher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-invalid_txn_publisher.o `test -f 'invalid_txn_publisher.cpp' || echo '$(srcdir)/'`invalid_txn_publisher.cpp

libbitcoin_server_a-invalid_txn_publisher.obj: invalid_txn_publisher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-invalid_txn_publisher.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Tpo -c -o libbitcoin_server_a-invalid_txn_publisher.obj `if test -f 'invalid_txn_publisher.cpp'; then $(CYGPATH_W) 'invalid_txn_publisher.cpp'; else $(CYGPATH_W) '$(srcdir)/invalid_txn_publisher.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Tpo $(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Po
#	$(AM_V_CXX)source='invalid_txn_publisher.cpp' object='libbitcoin_server_a-invalid_txn_publisher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-invalid_txn_publisher.obj `if test -f 'invalid_txn_publisher.cpp'; then $(CYGPATH_W) 'invalid_txn_publisher.cpp'; else $(CYGPATH_W) '$(srcdir)/invalid_txn_publisher.cpp'; fi`

invalid_txn_sinks/libbitcoin_server_a-file_sink.o: invalid_txn_sinks/file_sink.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT invalid_txn_sinks/libbitcoin_server_a-file_sink.o -MD -MP -MF invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Tpo -c -o invalid_txn_sinks/libbitcoin_server_a-file_sink.o `test -f 'invalid_txn_sinks/file_sink.cpp' || echo '$(srcdir)/'`invalid_txn_sinks/file_sink.cpp
	$(AM_V_at)$(am__mv) invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Tpo invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Po
#	$(AM_V_CXX)source='invalid_txn_sinks/file_sink.cpp' object='invalid_txn_sinks/libbitcoin_server_a-file_sink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o invalid_txn_sinks/libbitcoin_server_a-file_sink.o `test -f 'invalid_txn_sinks/file_sink.cpp' || echo '$(srcdir)/'`invalid_txn_sinks/file_sink.cpp

invalid_txn_sinks/libbitcoin_server_a-file_sink.obj: invalid_txn_sinks/file_sink.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT invalid_txn_sinks/libbitcoin_server_a-file_sink.obj -MD -MP -MF invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Tpo -c -o invalid_txn_sinks/libbitcoin_server_a-file_sink.obj `if test -f 'invalid_txn_sinks/file_sink.cpp'; then $(CYGPATH_W) 'invalid_txn_sinks/file_sink.cpp'; else $(CYGPATH_W) '$(srcdir)/invalid_txn_sinks/file_sink.cpp'; fi`
	$(AM_V_at)$(am__mv) invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Tpo invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Po
#	$(AM_V_CXX)source='invalid_txn_sinks/file_sink.cpp' object='invalid_txn_sinks/libbitcoin_server_a-file_sink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o invalid_txn_sinks/libbitcoin_server_a-file_sink.obj `if test -f 'invalid_txn_sinks/file_sink.cpp'; then $(CYGPATH_W) 'invalid_txn_sinks/file_sink.cpp'; else $(CYGPATH_W) '$(srcdir)/invalid_txn_sinks/file_sink.cpp'; fi`

invalid_txn_sinks/libbitcoin_server_a-zmq_sink.o: invalid_txn_sinks/zmq_sink.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT invalid_txn_sinks/libbitcoin_server_a-zmq_sink.o -MD -MP -MF invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Tpo -c -o invalid_txn_sinks/libbitcoin_server_a-zmq_sink.o `test -f 'invalid_txn_sinks/zmq_sink.cpp' || echo '$(srcdir)/'`invalid_txn_sinks/zmq_sink.cpp
	$(AM_V_at)$(am__mv) invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Tpo invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Po
#	$(AM_V_CXX)source='invalid_txn_sinks/zmq_sink.cpp' object='invalid_txn_sinks/libbitcoin_server_a-zmq_sink.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o invalid_txn_sinks/libbitcoin_server_a-zmq_sink.o `test -f 'invalid_txn_sinks/zmq_sink.cpp' || echo '$(srcdir)/'`invalid_txn_sinks/zmq_sink.cpp

invalid_txn_sinks/libbitcoin_server_a-zmq_sink.obj: invalid_txn_sinks/zmq_sink.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT invalid_txn_sinks/libbitcoin_server_a-zmq_sink.obj -MD -MP -MF invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Tpo -c -o invalid_txn_sinks/libbitcoin_server_a-zmq_sink.obj `if test -f 'invalid_txn_sinks/zmq_sink.cpp'; then $(CYGPATH_W) 'invalid_txn_sinks/zmq_sink.cpp'; else $(CYGPATH_W) '$(srcdir)/invalid_txn_sinks/zmq_sink.cpp'; fi`
	$(AM_V_at)$(am__mv) invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Tpo invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Po
#	$(AM_V_CXX)source='invalid_txn_sinks/zmq_sink.cpp' object='invalid_txn_sinks/libbitcoin_server_a-zmq_sink.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o invalid_txn_sinks/libbitcoin_server_a-zmq_sink.obj `if test -f 'invalid_txn_sinks/zmq_sink.cpp'; then $(CYGPATH_W) 'invalid_txn_sinks/zmq_sink.cpp'; else $(CYGPATH_W) '$(srcdir)/invalid_txn_sinks/zmq_sink.cpp'; fi`

libbitcoin_server_a-dbwrapper.o: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-dbwrapper.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo -c -o libbitcoin_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo $(DEPDIR)/libbitcoin_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitcoin_server_a-dbwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp

libbitcoin_server_a-dbwrapper.obj: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-dbwrapper.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo -c -o libbitcoin_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-dbwrapper.Tpo $(DEPDIR)/libbitcoin_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libbitcoin_server_a-dbwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`

double_spend/libbitcoin_server_a-dsattempt_handler.o: double_spend/dsattempt_handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dsattempt_handler.o -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Tpo -c -o double_spend/libbitcoin_server_a-dsattempt_handler.o `test -f 'double_spend/dsattempt_handler.cpp' || echo '$(srcdir)/'`double_spend/dsattempt_handler.cpp
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Po
#	$(AM_V_CXX)source='double_spend/dsattempt_handler.cpp' object='double_spend/libbitcoin_server_a-dsattempt_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dsattempt_handler.o `test -f 'double_spend/dsattempt_handler.cpp' || echo '$(srcdir)/'`double_spend/dsattempt_handler.cpp

double_spend/libbitcoin_server_a-dsattempt_handler.obj: double_spend/dsattempt_handler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dsattempt_handler.obj -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Tpo -c -o double_spend/libbitcoin_server_a-dsattempt_handler.obj `if test -f 'double_spend/dsattempt_handler.cpp'; then $(CYGPATH_W) 'double_spend/dsattempt_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dsattempt_handler.cpp'; fi`
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Po
#	$(AM_V_CXX)source='double_spend/dsattempt_handler.cpp' object='double_spend/libbitcoin_server_a-dsattempt_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dsattempt_handler.obj `if test -f 'double_spend/dsattempt_handler.cpp'; then $(CYGPATH_W) 'double_spend/dsattempt_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dsattempt_handler.cpp'; fi`

double_spend/libbitcoin_server_a-dscallback_msg.o: double_spend/dscallback_msg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dscallback_msg.o -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Tpo -c -o double_spend/libbitcoin_server_a-dscallback_msg.o `test -f 'double_spend/dscallback_msg.cpp' || echo '$(srcdir)/'`double_spend/dscallback_msg.cpp
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Po
#	$(AM_V_CXX)source='double_spend/dscallback_msg.cpp' object='double_spend/libbitcoin_server_a-dscallback_msg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dscallback_msg.o `test -f 'double_spend/dscallback_msg.cpp' || echo '$(srcdir)/'`double_spend/dscallback_msg.cpp

double_spend/libbitcoin_server_a-dscallback_msg.obj: double_spend/dscallback_msg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dscallback_msg.obj -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Tpo -c -o double_spend/libbitcoin_server_a-dscallback_msg.obj `if test -f 'double_spend/dscallback_msg.cpp'; then $(CYGPATH_W) 'double_spend/dscallback_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dscallback_msg.cpp'; fi`
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Po
#	$(AM_V_CXX)source='double_spend/dscallback_msg.cpp' object='double_spend/libbitcoin_server_a-dscallback_msg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dscallback_msg.obj `if test -f 'double_spend/dscallback_msg.cpp'; then $(CYGPATH_W) 'double_spend/dscallback_msg.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dscallback_msg.cpp'; fi`

double_spend/libbitcoin_server_a-dsdetected_message.o: double_spend/dsdetected_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dsdetected_message.o -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Tpo -c -o double_spend/libbitcoin_server_a-dsdetected_message.o `test -f 'double_spend/dsdetected_message.cpp' || echo '$(srcdir)/'`double_spend/dsdetected_message.cpp
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Po
#	$(AM_V_CXX)source='double_spend/dsdetected_message.cpp' object='double_spend/libbitcoin_server_a-dsdetected_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dsdetected_message.o `test -f 'double_spend/dsdetected_message.cpp' || echo '$(srcdir)/'`double_spend/dsdetected_message.cpp

double_spend/libbitcoin_server_a-dsdetected_message.obj: double_spend/dsdetected_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dsdetected_message.obj -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Tpo -c -o double_spend/libbitcoin_server_a-dsdetected_message.obj `if test -f 'double_spend/dsdetected_message.cpp'; then $(CYGPATH_W) 'double_spend/dsdetected_message.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dsdetected_message.cpp'; fi`
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Po
#	$(AM_V_CXX)source='double_spend/dsdetected_message.cpp' object='double_spend/libbitcoin_server_a-dsdetected_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dsdetected_message.obj `if test -f 'double_spend/dsdetected_message.cpp'; then $(CYGPATH_W) 'double_spend/dsdetected_message.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dsdetected_message.cpp'; fi`

double_spend/libbitcoin_server_a-dstxn_serialiser.o: double_spend/dstxn_serialiser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dstxn_serialiser.o -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Tpo -c -o double_spend/libbitcoin_server_a-dstxn_serialiser.o `test -f 'double_spend/dstxn_serialiser.cpp' || echo '$(srcdir)/'`double_spend/dstxn_serialiser.cpp
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Po
#	$(AM_V_CXX)source='double_spend/dstxn_serialiser.cpp' object='double_spend/libbitcoin_server_a-dstxn_serialiser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dstxn_serialiser.o `test -f 'double_spend/dstxn_serialiser.cpp' || echo '$(srcdir)/'`double_spend/dstxn_serialiser.cpp

double_spend/libbitcoin_server_a-dstxn_serialiser.obj: double_spend/dstxn_serialiser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT double_spend/libbitcoin_server_a-dstxn_serialiser.obj -MD -MP -MF double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Tpo -c -o double_spend/libbitcoin_server_a-dstxn_serialiser.obj `if test -f 'double_spend/dstxn_serialiser.cpp'; then $(CYGPATH_W) 'double_spend/dstxn_serialiser.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dstxn_serialiser.cpp'; fi`
	$(AM_V_at)$(am__mv) double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Tpo double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Po
#	$(AM_V_CXX)source='double_spend/dstxn_serialiser.cpp' object='double_spend/libbitcoin_server_a-dstxn_serialiser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o double_spend/libbitcoin_server_a-dstxn_serialiser.obj `if test -f 'double_spend/dstxn_serialiser.cpp'; then $(CYGPATH_W) 'double_spend/dstxn_serialiser.cpp'; else $(CYGPATH_W) '$(srcdir)/double_spend/dstxn_serialiser.cpp'; fi`

libbitcoin_server_a-mempooltxdb.o: mempooltxdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-mempooltxdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-mempooltxdb.Tpo -c -o libbitcoin_server_a-mempooltxdb.o `test -f 'mempooltxdb.cpp' || echo '$(srcdir)/'`mempooltxdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-mempooltxdb.Tpo $(DEPDIR)/libbitcoin_server_a-mempooltxdb.Po
#	$(AM_V_CXX)source='mempooltxdb.cpp' object='libbitcoin_server_a-mempooltxdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-mempooltxdb.o `test -f 'mempooltxdb.cpp' || echo '$(srcdir)/'`mempooltxdb.cpp

libbitcoin_server_a-mempooltxdb.obj: mempooltxdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-mempooltxdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-mempooltxdb.Tpo -c -o libbitcoin_server_a-mempooltxdb.obj `if test -f 'mempooltxdb.cpp'; then $(CYGPATH_W) 'mempooltxdb.cpp'; else $(CYGPATH_W) '$(srcdir)/mempooltxdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-mempooltxdb.Tpo $(DEPDIR)/libbitcoin_server_a-mempooltxdb.Po
#	$(AM_V_CXX)source='mempooltxdb.cpp' object='libbitcoin_server_a-mempooltxdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-mempooltxdb.obj `if test -f 'mempooltxdb.cpp'; then $(CYGPATH_W) 'mempooltxdb.cpp'; else $(CYGPATH_W) '$(srcdir)/mempooltxdb.cpp'; fi`

libbitcoin_server_a-merkleblock.o: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkleblock.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo -c -o libbitcoin_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo $(DEPDIR)/libbitcoin_server_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libbitcoin_server_a-merkleblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp

libbitcoin_server_a-merkleblock.obj: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkleblock.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo -c -o libbitcoin_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkleblock.Tpo $(DEPDIR)/libbitcoin_server_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libbitcoin_server_a-merkleblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`

libbitcoin_server_a-merkleproof.o: merkleproof.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkleproof.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkleproof.Tpo -c -o libbitcoin_server_a-merkleproof.o `test -f 'merkleproof.cpp' || echo '$(srcdir)/'`merkleproof.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkleproof.Tpo $(DEPDIR)/libbitcoin_server_a-merkleproof.Po
#	$(AM_V_CXX)source='merkleproof.cpp' object='libbitcoin_server_a-merkleproof.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkleproof.o `test -f 'merkleproof.cpp' || echo '$(srcdir)/'`merkleproof.cpp

libbitcoin_server_a-merkleproof.obj: merkleproof.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkleproof.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkleproof.Tpo -c -o libbitcoin_server_a-merkleproof.obj `if test -f 'merkleproof.cpp'; then $(CYGPATH_W) 'merkleproof.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleproof.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkleproof.Tpo $(DEPDIR)/libbitcoin_server_a-merkleproof.Po
#	$(AM_V_CXX)source='merkleproof.cpp' object='libbitcoin_server_a-merkleproof.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkleproof.obj `if test -f 'merkleproof.cpp'; then $(CYGPATH_W) 'merkleproof.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleproof.cpp'; fi`

libbitcoin_server_a-merkletree.o: merkletree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkletree.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkletree.Tpo -c -o libbitcoin_server_a-merkletree.o `test -f 'merkletree.cpp' || echo '$(srcdir)/'`merkletree.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkletree.Tpo $(DEPDIR)/libbitcoin_server_a-merkletree.Po
#	$(AM_V_CXX)source='merkletree.cpp' object='libbitcoin_server_a-merkletree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkletree.o `test -f 'merkletree.cpp' || echo '$(srcdir)/'`merkletree.cpp

libbitcoin_server_a-merkletree.obj: merkletree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkletree.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkletree.Tpo -c -o libbitcoin_server_a-merkletree.obj `if test -f 'merkletree.cpp'; then $(CYGPATH_W) 'merkletree.cpp'; else $(CYGPATH_W) '$(srcdir)/merkletree.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkletree.Tpo $(DEPDIR)/libbitcoin_server_a-merkletree.Po
#	$(AM_V_CXX)source='merkletree.cpp' object='libbitcoin_server_a-merkletree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkletree.obj `if test -f 'merkletree.cpp'; then $(CYGPATH_W) 'merkletree.cpp'; else $(CYGPATH_W) '$(srcdir)/merkletree.cpp'; fi`

libbitcoin_server_a-merkletreedb.o: merkletreedb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkletreedb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkletreedb.Tpo -c -o libbitcoin_server_a-merkletreedb.o `test -f 'merkletreedb.cpp' || echo '$(srcdir)/'`merkletreedb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkletreedb.Tpo $(DEPDIR)/libbitcoin_server_a-merkletreedb.Po
#	$(AM_V_CXX)source='merkletreedb.cpp' object='libbitcoin_server_a-merkletreedb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkletreedb.o `test -f 'merkletreedb.cpp' || echo '$(srcdir)/'`merkletreedb.cpp

libbitcoin_server_a-merkletreedb.obj: merkletreedb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkletreedb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkletreedb.Tpo -c -o libbitcoin_server_a-merkletreedb.obj `if test -f 'merkletreedb.cpp'; then $(CYGPATH_W) 'merkletreedb.cpp'; else $(CYGPATH_W) '$(srcdir)/merkletreedb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkletreedb.Tpo $(DEPDIR)/libbitcoin_server_a-merkletreedb.Po
#	$(AM_V_CXX)source='merkletreedb.cpp' object='libbitcoin_server_a-merkletreedb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkletreedb.obj `if test -f 'merkletreedb.cpp'; then $(CYGPATH_W) 'merkletreedb.cpp'; else $(CYGPATH_W) '$(srcdir)/merkletreedb.cpp'; fi`

libbitcoin_server_a-merkletreestore.o: merkletreestore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkletreestore.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkletreestore.Tpo -c -o libbitcoin_server_a-merkletreestore.o `test -f 'merkletreestore.cpp' || echo '$(srcdir)/'`merkletreestore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkletreestore.Tpo $(DEPDIR)/libbitcoin_server_a-merkletreestore.Po
#	$(AM_V_CXX)source='merkletreestore.cpp' object='libbitcoin_server_a-merkletreestore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkletreestore.o `test -f 'merkletreestore.cpp' || echo '$(srcdir)/'`merkletreestore.cpp

libbitcoin_server_a-merkletreestore.obj: merkletreestore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-merkletreestore.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-merkletreestore.Tpo -c -o libbitcoin_server_a-merkletreestore.obj `if test -f 'merkletreestore.cpp'; then $(CYGPATH_W) 'merkletreestore.cpp'; else $(CYGPATH_W) '$(srcdir)/merkletreestore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-merkletreestore.Tpo $(DEPDIR)/libbitcoin_server_a-merkletreestore.Po
#	$(AM_V_CXX)source='merkletreestore.cpp' object='libbitcoin_server_a-merkletreestore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-merkletreestore.obj `if test -f 'merkletreestore.cpp'; then $(CYGPATH_W) 'merkletreestore.cpp'; else $(CYGPATH_W) '$(srcdir)/merkletreestore.cpp'; fi`

miner_id/libbitcoin_server_a-dataref_index.o: miner_id/dataref_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-dataref_index.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Tpo -c -o miner_id/libbitcoin_server_a-dataref_index.o `test -f 'miner_id/dataref_index.cpp' || echo '$(srcdir)/'`miner_id/dataref_index.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Po
#	$(AM_V_CXX)source='miner_id/dataref_index.cpp' object='miner_id/libbitcoin_server_a-dataref_index.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-dataref_index.o `test -f 'miner_id/dataref_index.cpp' || echo '$(srcdir)/'`miner_id/dataref_index.cpp

miner_id/libbitcoin_server_a-dataref_index.obj: miner_id/dataref_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-dataref_index.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Tpo -c -o miner_id/libbitcoin_server_a-dataref_index.obj `if test -f 'miner_id/dataref_index.cpp'; then $(CYGPATH_W) 'miner_id/dataref_index.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/dataref_index.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Po
#	$(AM_V_CXX)source='miner_id/dataref_index.cpp' object='miner_id/libbitcoin_server_a-dataref_index.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-dataref_index.obj `if test -f 'miner_id/dataref_index.cpp'; then $(CYGPATH_W) 'miner_id/dataref_index.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/dataref_index.cpp'; fi`

miner_id/libbitcoin_server_a-datareftx.o: miner_id/datareftx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-datareftx.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Tpo -c -o miner_id/libbitcoin_server_a-datareftx.o `test -f 'miner_id/datareftx.cpp' || echo '$(srcdir)/'`miner_id/datareftx.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Po
#	$(AM_V_CXX)source='miner_id/datareftx.cpp' object='miner_id/libbitcoin_server_a-datareftx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-datareftx.o `test -f 'miner_id/datareftx.cpp' || echo '$(srcdir)/'`miner_id/datareftx.cpp

miner_id/libbitcoin_server_a-datareftx.obj: miner_id/datareftx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-datareftx.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Tpo -c -o miner_id/libbitcoin_server_a-datareftx.obj `if test -f 'miner_id/datareftx.cpp'; then $(CYGPATH_W) 'miner_id/datareftx.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/datareftx.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Po
#	$(AM_V_CXX)source='miner_id/datareftx.cpp' object='miner_id/libbitcoin_server_a-datareftx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-datareftx.obj `if test -f 'miner_id/datareftx.cpp'; then $(CYGPATH_W) 'miner_id/datareftx.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/datareftx.cpp'; fi`

miner_id/libbitcoin_server_a-miner_id.o: miner_id/miner_id.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_id.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Tpo -c -o miner_id/libbitcoin_server_a-miner_id.o `test -f 'miner_id/miner_id.cpp' || echo '$(srcdir)/'`miner_id/miner_id.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Po
#	$(AM_V_CXX)source='miner_id/miner_id.cpp' object='miner_id/libbitcoin_server_a-miner_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_id.o `test -f 'miner_id/miner_id.cpp' || echo '$(srcdir)/'`miner_id/miner_id.cpp

miner_id/libbitcoin_server_a-miner_id.obj: miner_id/miner_id.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_id.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Tpo -c -o miner_id/libbitcoin_server_a-miner_id.obj `if test -f 'miner_id/miner_id.cpp'; then $(CYGPATH_W) 'miner_id/miner_id.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_id.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Po
#	$(AM_V_CXX)source='miner_id/miner_id.cpp' object='miner_id/libbitcoin_server_a-miner_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_id.obj `if test -f 'miner_id/miner_id.cpp'; then $(CYGPATH_W) 'miner_id/miner_id.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_id.cpp'; fi`

miner_id/libbitcoin_server_a-miner_id_db.o: miner_id/miner_id_db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_id_db.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Tpo -c -o miner_id/libbitcoin_server_a-miner_id_db.o `test -f 'miner_id/miner_id_db.cpp' || echo '$(srcdir)/'`miner_id/miner_id_db.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Po
#	$(AM_V_CXX)source='miner_id/miner_id_db.cpp' object='miner_id/libbitcoin_server_a-miner_id_db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_id_db.o `test -f 'miner_id/miner_id_db.cpp' || echo '$(srcdir)/'`miner_id/miner_id_db.cpp

miner_id/libbitcoin_server_a-miner_id_db.obj: miner_id/miner_id_db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_id_db.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Tpo -c -o miner_id/libbitcoin_server_a-miner_id_db.obj `if test -f 'miner_id/miner_id_db.cpp'; then $(CYGPATH_W) 'miner_id/miner_id_db.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_id_db.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Po
#	$(AM_V_CXX)source='miner_id/miner_id_db.cpp' object='miner_id/libbitcoin_server_a-miner_id_db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_id_db.obj `if test -f 'miner_id/miner_id_db.cpp'; then $(CYGPATH_W) 'miner_id/miner_id_db.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_id_db.cpp'; fi`

miner_id/libbitcoin_server_a-miner_info.o: miner_id/miner_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo -c -o miner_id/libbitcoin_server_a-miner_info.o `test -f 'miner_id/miner_info.cpp' || echo '$(srcdir)/'`miner_id/miner_info.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
#	$(AM_V_CXX)source='miner_id/miner_info.cpp' object='miner_id/libbitcoin_server_a-miner_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info.o `test -f 'miner_id/miner_info.cpp' || echo '$(srcdir)/'`miner_id/miner_info.cpp

miner_id/libbitcoin_server_a-miner_info.obj: miner_id/miner_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo -c -o miner_id/libbitcoin_server_a-miner_info.obj `if test -f 'miner_id/miner_info.cpp'; then $(CYGPATH_W) 'miner_id/miner_info.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
#	$(AM_V_CXX)source='miner_id/miner_info.cpp' object='miner_id/libbitcoin_server_a-miner_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info.obj `if test -f 'miner_id/miner_info.cpp'; then $(CYGPATH_W) 'miner_id/miner_info.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info.cpp'; fi`

miner_id/libbitcoin_server_a-miner_info_doc.o: miner_id/miner_info_doc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_doc.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_doc.o `test -f 'miner_id/miner_info_doc.cpp' || echo '$(srcdir)/'`miner_id/miner_info_doc.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Po
#	$(AM_V_CXX)source='miner_id/miner_info_doc.cpp' object='miner_id/libbitcoin_server_a-miner_info_doc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_doc.o `test -f 'miner_id/miner_info_doc.cpp' || echo '$(srcdir)/'`miner_id/miner_info_doc.cpp

miner_id/libbitcoin_server_a-miner_info_doc.obj: miner_id/miner_info_doc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_doc.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_doc.obj `if test -f 'miner_id/miner_info_doc.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_doc.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_doc.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Po
#	$(AM_V_CXX)source='miner_id/miner_info_doc.cpp' object='miner_id/libbitcoin_server_a-miner_info_doc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_doc.obj `if test -f 'miner_id/miner_info_doc.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_doc.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_doc.cpp'; fi`

miner_id/libbitcoin_server_a-miner_info_error.o: miner_id/miner_info_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_error.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_error.o `test -f 'miner_id/miner_info_error.cpp' || echo '$(srcdir)/'`miner_id/miner_info_error.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Po
#	$(AM_V_CXX)source='miner_id/miner_info_error.cpp' object='miner_id/libbitcoin_server_a-miner_info_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_error.o `test -f 'miner_id/miner_info_error.cpp' || echo '$(srcdir)/'`miner_id/miner_info_error.cpp

miner_id/libbitcoin_server_a-miner_info_error.obj: miner_id/miner_info_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_error.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_error.obj `if test -f 'miner_id/miner_info_error.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_error.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_error.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Po
#	$(AM_V_CXX)source='miner_id/miner_info_error.cpp' object='miner_id/libbitcoin_server_a-miner_info_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_error.obj `if test -f 'miner_id/miner_info_error.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_error.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_error.cpp'; fi`

miner_id/libbitcoin_server_a-miner_info_ref.o: miner_id/miner_info_ref.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_ref.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_ref.o `test -f 'miner_id/miner_info_ref.cpp' || echo '$(srcdir)/'`miner_id/miner_info_ref.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Po
#	$(AM_V_CXX)source='miner_id/miner_info_ref.cpp' object='miner_id/libbitcoin_server_a-miner_info_ref.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_ref.o `test -f 'miner_id/miner_info_ref.cpp' || echo '$(srcdir)/'`miner_id/miner_info_ref.cpp

miner_id/libbitcoin_server_a-miner_info_ref.obj: miner_id/miner_info_ref.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_ref.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_ref.obj `if test -f 'miner_id/miner_info_ref.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_ref.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_ref.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Po
#	$(AM_V_CXX)source='miner_id/miner_info_ref.cpp' object='miner_id/libbitcoin_server_a-miner_info_ref.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_ref.obj `if test -f 'miner_id/miner_info_ref.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_ref.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_ref.cpp'; fi`

miner_id/libbitcoin_server_a-revokemid.o: miner_id/revokemid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-revokemid.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Tpo -c -o miner_id/libbitcoin_server_a-revokemid.o `test -f 'miner_id/revokemid.cpp' || echo '$(srcdir)/'`miner_id/revokemid.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Po
#	$(AM_V_CXX)source='miner_id/revokemid.cpp' object='miner_id/libbitcoin_server_a-revokemid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-revokemid.o `test -f 'miner_id/revokemid.cpp' || echo '$(srcdir)/'`miner_id/revokemid.cpp

miner_id/libbitcoin_server_a-revokemid.obj: miner_id/revokemid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-revokemid.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Tpo -c -o miner_id/libbitcoin_server_a-revokemid.obj `if test -f 'miner_id/revokemid.cpp'; then $(CYGPATH_W) 'miner_id/revokemid.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/revokemid.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Po
#	$(AM_V_CXX)source='miner_id/revokemid.cpp' object='miner_id/libbitcoin_server_a-revokemid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-revokemid.obj `if test -f 'miner_id/revokemid.cpp'; then $(CYGPATH_W) 'miner_id/revokemid.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/revokemid.cpp'; fi`

miner_id/libbitcoin_server_a-miner_info_tracker.o: miner_id/miner_info_tracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_tracker.o -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_tracker.o `test -f 'miner_id/miner_info_tracker.cpp' || echo '$(srcdir)/'`miner_id/miner_info_tracker.cpp
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Po
#	$(AM_V_CXX)source='miner_id/miner_info_tracker.cpp' object='miner_id/libbitcoin_server_a-miner_info_tracker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_tracker.o `test -f 'miner_id/miner_info_tracker.cpp' || echo '$(srcdir)/'`miner_id/miner_info_tracker.cpp

miner_id/libbitcoin_server_a-miner_info_tracker.obj: miner_id/miner_info_tracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT miner_id/libbitcoin_server_a-miner_info_tracker.obj -MD -MP -MF miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Tpo -c -o miner_id/libbitcoin_server_a-miner_info_tracker.obj `if test -f 'miner_id/miner_info_tracker.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_tracker.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_tracker.cpp'; fi`
	$(AM_V_at)$(am__mv) miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Tpo miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Po
#	$(AM_V_CXX)source='miner_id/miner_info_tracker.cpp' object='miner_id/libbitcoin_server_a-miner_info_tracker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o miner_id/libbitcoin_server_a-miner_info_tracker.obj `if test -f 'miner_id/miner_info_tracker.cpp'; then $(CYGPATH_W) 'miner_id/miner_info_tracker.cpp'; else $(CYGPATH_W) '$(srcdir)/miner_id/miner_info_tracker.cpp'; fi`

mining/libbitcoin_server_a-assembler.o: mining/assembler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-assembler.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-assembler.Tpo -c -o mining/libbitcoin_server_a-assembler.o `test -f 'mining/assembler.cpp' || echo '$(srcdir)/'`mining/assembler.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-assembler.Tpo mining/$(DEPDIR)/libbitcoin_server_a-assembler.Po
#	$(AM_V_CXX)source='mining/assembler.cpp' object='mining/libbitcoin_server_a-assembler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-assembler.o `test -f 'mining/assembler.cpp' || echo '$(srcdir)/'`mining/assembler.cpp

mining/libbitcoin_server_a-assembler.obj: mining/assembler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-assembler.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-assembler.Tpo -c -o mining/libbitcoin_server_a-assembler.obj `if test -f 'mining/assembler.cpp'; then $(CYGPATH_W) 'mining/assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/assembler.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-assembler.Tpo mining/$(DEPDIR)/libbitcoin_server_a-assembler.Po
#	$(AM_V_CXX)source='mining/assembler.cpp' object='mining/libbitcoin_server_a-assembler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-assembler.obj `if test -f 'mining/assembler.cpp'; then $(CYGPATH_W) 'mining/assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/assembler.cpp'; fi`

mining/libbitcoin_server_a-candidates.o: mining/candidates.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-candidates.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-candidates.Tpo -c -o mining/libbitcoin_server_a-candidates.o `test -f 'mining/candidates.cpp' || echo '$(srcdir)/'`mining/candidates.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-candidates.Tpo mining/$(DEPDIR)/libbitcoin_server_a-candidates.Po
#	$(AM_V_CXX)source='mining/candidates.cpp' object='mining/libbitcoin_server_a-candidates.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-candidates.o `test -f 'mining/candidates.cpp' || echo '$(srcdir)/'`mining/candidates.cpp

mining/libbitcoin_server_a-candidates.obj: mining/candidates.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-candidates.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-candidates.Tpo -c -o mining/libbitcoin_server_a-candidates.obj `if test -f 'mining/candidates.cpp'; then $(CYGPATH_W) 'mining/candidates.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/candidates.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-candidates.Tpo mining/$(DEPDIR)/libbitcoin_server_a-candidates.Po
#	$(AM_V_CXX)source='mining/candidates.cpp' object='mining/libbitcoin_server_a-candidates.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-candidates.obj `if test -f 'mining/candidates.cpp'; then $(CYGPATH_W) 'mining/candidates.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/candidates.cpp'; fi`

mining/libbitcoin_server_a-factory.o: mining/factory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-factory.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-factory.Tpo -c -o mining/libbitcoin_server_a-factory.o `test -f 'mining/factory.cpp' || echo '$(srcdir)/'`mining/factory.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-factory.Tpo mining/$(DEPDIR)/libbitcoin_server_a-factory.Po
#	$(AM_V_CXX)source='mining/factory.cpp' object='mining/libbitcoin_server_a-factory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-factory.o `test -f 'mining/factory.cpp' || echo '$(srcdir)/'`mining/factory.cpp

mining/libbitcoin_server_a-factory.obj: mining/factory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-factory.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-factory.Tpo -c -o mining/libbitcoin_server_a-factory.obj `if test -f 'mining/factory.cpp'; then $(CYGPATH_W) 'mining/factory.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/factory.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-factory.Tpo mining/$(DEPDIR)/libbitcoin_server_a-factory.Po
#	$(AM_V_CXX)source='mining/factory.cpp' object='mining/libbitcoin_server_a-factory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-factory.obj `if test -f 'mining/factory.cpp'; then $(CYGPATH_W) 'mining/factory.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/factory.cpp'; fi`

mining/libbitcoin_server_a-group_builder.o: mining/group_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-group_builder.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Tpo -c -o mining/libbitcoin_server_a-group_builder.o `test -f 'mining/group_builder.cpp' || echo '$(srcdir)/'`mining/group_builder.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Tpo mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Po
#	$(AM_V_CXX)source='mining/group_builder.cpp' object='mining/libbitcoin_server_a-group_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-group_builder.o `test -f 'mining/group_builder.cpp' || echo '$(srcdir)/'`mining/group_builder.cpp

mining/libbitcoin_server_a-group_builder.obj: mining/group_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-group_builder.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Tpo -c -o mining/libbitcoin_server_a-group_builder.obj `if test -f 'mining/group_builder.cpp'; then $(CYGPATH_W) 'mining/group_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/group_builder.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Tpo mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Po
#	$(AM_V_CXX)source='mining/group_builder.cpp' object='mining/libbitcoin_server_a-group_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-group_builder.obj `if test -f 'mining/group_builder.cpp'; then $(CYGPATH_W) 'mining/group_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/group_builder.cpp'; fi`

mining/libbitcoin_server_a-journal.o: mining/journal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal.Tpo -c -o mining/libbitcoin_server_a-journal.o `test -f 'mining/journal.cpp' || echo '$(srcdir)/'`mining/journal.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal.Po
#	$(AM_V_CXX)source='mining/journal.cpp' object='mining/libbitcoin_server_a-journal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal.o `test -f 'mining/journal.cpp' || echo '$(srcdir)/'`mining/journal.cpp

mining/libbitcoin_server_a-journal.obj: mining/journal.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal.Tpo -c -o mining/libbitcoin_server_a-journal.obj `if test -f 'mining/journal.cpp'; then $(CYGPATH_W) 'mining/journal.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal.Po
#	$(AM_V_CXX)source='mining/journal.cpp' object='mining/libbitcoin_server_a-journal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal.obj `if test -f 'mining/journal.cpp'; then $(CYGPATH_W) 'mining/journal.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal.cpp'; fi`

mining/libbitcoin_server_a-journal_builder.o: mining/journal_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal_builder.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Tpo -c -o mining/libbitcoin_server_a-journal_builder.o `test -f 'mining/journal_builder.cpp' || echo '$(srcdir)/'`mining/journal_builder.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Po
#	$(AM_V_CXX)source='mining/journal_builder.cpp' object='mining/libbitcoin_server_a-journal_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal_builder.o `test -f 'mining/journal_builder.cpp' || echo '$(srcdir)/'`mining/journal_builder.cpp

mining/libbitcoin_server_a-journal_builder.obj: mining/journal_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal_builder.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Tpo -c -o mining/libbitcoin_server_a-journal_builder.obj `if test -f 'mining/journal_builder.cpp'; then $(CYGPATH_W) 'mining/journal_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal_builder.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Po
#	$(AM_V_CXX)source='mining/journal_builder.cpp' object='mining/libbitcoin_server_a-journal_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal_builder.obj `if test -f 'mining/journal_builder.cpp'; then $(CYGPATH_W) 'mining/journal_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal_builder.cpp'; fi`

mining/libbitcoin_server_a-journal_change_set.o: mining/journal_change_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal_change_set.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Tpo -c -o mining/libbitcoin_server_a-journal_change_set.o `test -f 'mining/journal_change_set.cpp' || echo '$(srcdir)/'`mining/journal_change_set.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Po
#	$(AM_V_CXX)source='mining/journal_change_set.cpp' object='mining/libbitcoin_server_a-journal_change_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal_change_set.o `test -f 'mining/journal_change_set.cpp' || echo '$(srcdir)/'`mining/journal_change_set.cpp

mining/libbitcoin_server_a-journal_change_set.obj: mining/journal_change_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal_change_set.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Tpo -c -o mining/libbitcoin_server_a-journal_change_set.obj `if test -f 'mining/journal_change_set.cpp'; then $(CYGPATH_W) 'mining/journal_change_set.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal_change_set.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Po
#	$(AM_V_CXX)source='mining/journal_change_set.cpp' object='mining/libbitcoin_server_a-journal_change_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal_change_set.obj `if test -f 'mining/journal_change_set.cpp'; then $(CYGPATH_W) 'mining/journal_change_set.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal_change_set.cpp'; fi`

mining/libbitcoin_server_a-journal_entry.o: mining/journal_entry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal_entry.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Tpo -c -o mining/libbitcoin_server_a-journal_entry.o `test -f 'mining/journal_entry.cpp' || echo '$(srcdir)/'`mining/journal_entry.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Po
#	$(AM_V_CXX)source='mining/journal_entry.cpp' object='mining/libbitcoin_server_a-journal_entry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal_entry.o `test -f 'mining/journal_entry.cpp' || echo '$(srcdir)/'`mining/journal_entry.cpp

mining/libbitcoin_server_a-journal_entry.obj: mining/journal_entry.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journal_entry.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Tpo -c -o mining/libbitcoin_server_a-journal_entry.obj `if test -f 'mining/journal_entry.cpp'; then $(CYGPATH_W) 'mining/journal_entry.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal_entry.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Po
#	$(AM_V_CXX)source='mining/journal_entry.cpp' object='mining/libbitcoin_server_a-journal_entry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journal_entry.obj `if test -f 'mining/journal_entry.cpp'; then $(CYGPATH_W) 'mining/journal_entry.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journal_entry.cpp'; fi`

mining/libbitcoin_server_a-journaling_block_assembler.o: mining/journaling_block_assembler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journaling_block_assembler.o -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Tpo -c -o mining/libbitcoin_server_a-journaling_block_assembler.o `test -f 'mining/journaling_block_assembler.cpp' || echo '$(srcdir)/'`mining/journaling_block_assembler.cpp
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Po
#	$(AM_V_CXX)source='mining/journaling_block_assembler.cpp' object='mining/libbitcoin_server_a-journaling_block_assembler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journaling_block_assembler.o `test -f 'mining/journaling_block_assembler.cpp' || echo '$(srcdir)/'`mining/journaling_block_assembler.cpp

mining/libbitcoin_server_a-journaling_block_assembler.obj: mining/journaling_block_assembler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT mining/libbitcoin_server_a-journaling_block_assembler.obj -MD -MP -MF mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Tpo -c -o mining/libbitcoin_server_a-journaling_block_assembler.obj `if test -f 'mining/journaling_block_assembler.cpp'; then $(CYGPATH_W) 'mining/journaling_block_assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journaling_block_assembler.cpp'; fi`
	$(AM_V_at)$(am__mv) mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Tpo mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Po
#	$(AM_V_CXX)source='mining/journaling_block_assembler.cpp' object='mining/libbitcoin_server_a-journaling_block_assembler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o mining/libbitcoin_server_a-journaling_block_assembler.obj `if test -f 'mining/journaling_block_assembler.cpp'; then $(CYGPATH_W) 'mining/journaling_block_assembler.cpp'; else $(CYGPATH_W) '$(srcdir)/mining/journaling_block_assembler.cpp'; fi`

net/libbitcoin_server_a-association.o: net/association.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-association.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-association.Tpo -c -o net/libbitcoin_server_a-association.o `test -f 'net/association.cpp' || echo '$(srcdir)/'`net/association.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-association.Tpo net/$(DEPDIR)/libbitcoin_server_a-association.Po
#	$(AM_V_CXX)source='net/association.cpp' object='net/libbitcoin_server_a-association.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-association.o `test -f 'net/association.cpp' || echo '$(srcdir)/'`net/association.cpp

net/libbitcoin_server_a-association.obj: net/association.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-association.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-association.Tpo -c -o net/libbitcoin_server_a-association.obj `if test -f 'net/association.cpp'; then $(CYGPATH_W) 'net/association.cpp'; else $(CYGPATH_W) '$(srcdir)/net/association.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-association.Tpo net/$(DEPDIR)/libbitcoin_server_a-association.Po
#	$(AM_V_CXX)source='net/association.cpp' object='net/libbitcoin_server_a-association.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-association.obj `if test -f 'net/association.cpp'; then $(CYGPATH_W) 'net/association.cpp'; else $(CYGPATH_W) '$(srcdir)/net/association.cpp'; fi`

net/libbitcoin_server_a-association_id.o: net/association_id.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-association_id.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-association_id.Tpo -c -o net/libbitcoin_server_a-association_id.o `test -f 'net/association_id.cpp' || echo '$(srcdir)/'`net/association_id.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-association_id.Tpo net/$(DEPDIR)/libbitcoin_server_a-association_id.Po
#	$(AM_V_CXX)source='net/association_id.cpp' object='net/libbitcoin_server_a-association_id.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-association_id.o `test -f 'net/association_id.cpp' || echo '$(srcdir)/'`net/association_id.cpp

net/libbitcoin_server_a-association_id.obj: net/association_id.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-association_id.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-association_id.Tpo -c -o net/libbitcoin_server_a-association_id.obj `if test -f 'net/association_id.cpp'; then $(CYGPATH_W) 'net/association_id.cpp'; else $(CYGPATH_W) '$(srcdir)/net/association_id.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-association_id.Tpo net/$(DEPDIR)/libbitcoin_server_a-association_id.Po
#	$(AM_V_CXX)source='net/association_id.cpp' object='net/libbitcoin_server_a-association_id.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-association_id.obj `if test -f 'net/association_id.cpp'; then $(CYGPATH_W) 'net/association_id.cpp'; else $(CYGPATH_W) '$(srcdir)/net/association_id.cpp'; fi`

net/libbitcoin_server_a-block_download_tracker.o: net/block_download_tracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-block_download_tracker.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Tpo -c -o net/libbitcoin_server_a-block_download_tracker.o `test -f 'net/block_download_tracker.cpp' || echo '$(srcdir)/'`net/block_download_tracker.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Tpo net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Po
#	$(AM_V_CXX)source='net/block_download_tracker.cpp' object='net/libbitcoin_server_a-block_download_tracker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-block_download_tracker.o `test -f 'net/block_download_tracker.cpp' || echo '$(srcdir)/'`net/block_download_tracker.cpp

net/libbitcoin_server_a-block_download_tracker.obj: net/block_download_tracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-block_download_tracker.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Tpo -c -o net/libbitcoin_server_a-block_download_tracker.obj `if test -f 'net/block_download_tracker.cpp'; then $(CYGPATH_W) 'net/block_download_tracker.cpp'; else $(CYGPATH_W) '$(srcdir)/net/block_download_tracker.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Tpo net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Po
#	$(AM_V_CXX)source='net/block_download_tracker.cpp' object='net/libbitcoin_server_a-block_download_tracker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-block_download_tracker.obj `if test -f 'net/block_download_tracker.cpp'; then $(CYGPATH_W) 'net/block_download_tracker.cpp'; else $(CYGPATH_W) '$(srcdir)/net/block_download_tracker.cpp'; fi`

net/libbitcoin_server_a-block_parser.o: net/block_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-block_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-block_parser.Tpo -c -o net/libbitcoin_server_a-block_parser.o `test -f 'net/block_parser.cpp' || echo '$(srcdir)/'`net/block_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-block_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-block_parser.Po
#	$(AM_V_CXX)source='net/block_parser.cpp' object='net/libbitcoin_server_a-block_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-block_parser.o `test -f 'net/block_parser.cpp' || echo '$(srcdir)/'`net/block_parser.cpp

net/libbitcoin_server_a-block_parser.obj: net/block_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-block_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-block_parser.Tpo -c -o net/libbitcoin_server_a-block_parser.obj `if test -f 'net/block_parser.cpp'; then $(CYGPATH_W) 'net/block_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/block_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-block_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-block_parser.Po
#	$(AM_V_CXX)source='net/block_parser.cpp' object='net/libbitcoin_server_a-block_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-block_parser.obj `if test -f 'net/block_parser.cpp'; then $(CYGPATH_W) 'net/block_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/block_parser.cpp'; fi`

net/libbitcoin_server_a-blocktxn_parser.o: net/blocktxn_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-blocktxn_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Tpo -c -o net/libbitcoin_server_a-blocktxn_parser.o `test -f 'net/blocktxn_parser.cpp' || echo '$(srcdir)/'`net/blocktxn_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Po
#	$(AM_V_CXX)source='net/blocktxn_parser.cpp' object='net/libbitcoin_server_a-blocktxn_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-blocktxn_parser.o `test -f 'net/blocktxn_parser.cpp' || echo '$(srcdir)/'`net/blocktxn_parser.cpp

net/libbitcoin_server_a-blocktxn_parser.obj: net/blocktxn_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-blocktxn_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Tpo -c -o net/libbitcoin_server_a-blocktxn_parser.obj `if test -f 'net/blocktxn_parser.cpp'; then $(CYGPATH_W) 'net/blocktxn_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/blocktxn_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Po
#	$(AM_V_CXX)source='net/blocktxn_parser.cpp' object='net/libbitcoin_server_a-blocktxn_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-blocktxn_parser.obj `if test -f 'net/blocktxn_parser.cpp'; then $(CYGPATH_W) 'net/blocktxn_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/blocktxn_parser.cpp'; fi`

net/libbitcoin_server_a-cmpct_size.o: net/cmpct_size.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-cmpct_size.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Tpo -c -o net/libbitcoin_server_a-cmpct_size.o `test -f 'net/cmpct_size.cpp' || echo '$(srcdir)/'`net/cmpct_size.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Tpo net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Po
#	$(AM_V_CXX)source='net/cmpct_size.cpp' object='net/libbitcoin_server_a-cmpct_size.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-cmpct_size.o `test -f 'net/cmpct_size.cpp' || echo '$(srcdir)/'`net/cmpct_size.cpp

net/libbitcoin_server_a-cmpct_size.obj: net/cmpct_size.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-cmpct_size.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Tpo -c -o net/libbitcoin_server_a-cmpct_size.obj `if test -f 'net/cmpct_size.cpp'; then $(CYGPATH_W) 'net/cmpct_size.cpp'; else $(CYGPATH_W) '$(srcdir)/net/cmpct_size.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Tpo net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Po
#	$(AM_V_CXX)source='net/cmpct_size.cpp' object='net/libbitcoin_server_a-cmpct_size.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-cmpct_size.obj `if test -f 'net/cmpct_size.cpp'; then $(CYGPATH_W) 'net/cmpct_size.cpp'; else $(CYGPATH_W) '$(srcdir)/net/cmpct_size.cpp'; fi`

net/libbitcoin_server_a-cmpctblock_parser.o: net/cmpctblock_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-cmpctblock_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Tpo -c -o net/libbitcoin_server_a-cmpctblock_parser.o `test -f 'net/cmpctblock_parser.cpp' || echo '$(srcdir)/'`net/cmpctblock_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Po
#	$(AM_V_CXX)source='net/cmpctblock_parser.cpp' object='net/libbitcoin_server_a-cmpctblock_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-cmpctblock_parser.o `test -f 'net/cmpctblock_parser.cpp' || echo '$(srcdir)/'`net/cmpctblock_parser.cpp

net/libbitcoin_server_a-cmpctblock_parser.obj: net/cmpctblock_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-cmpctblock_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Tpo -c -o net/libbitcoin_server_a-cmpctblock_parser.obj `if test -f 'net/cmpctblock_parser.cpp'; then $(CYGPATH_W) 'net/cmpctblock_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/cmpctblock_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Po
#	$(AM_V_CXX)source='net/cmpctblock_parser.cpp' object='net/libbitcoin_server_a-cmpctblock_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-cmpctblock_parser.obj `if test -f 'net/cmpctblock_parser.cpp'; then $(CYGPATH_W) 'net/cmpctblock_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/cmpctblock_parser.cpp'; fi`

net/libbitcoin_server_a-fixed_len_multi_parser.o: net/fixed_len_multi_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-fixed_len_multi_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Tpo -c -o net/libbitcoin_server_a-fixed_len_multi_parser.o `test -f 'net/fixed_len_multi_parser.cpp' || echo '$(srcdir)/'`net/fixed_len_multi_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Po
#	$(AM_V_CXX)source='net/fixed_len_multi_parser.cpp' object='net/libbitcoin_server_a-fixed_len_multi_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-fixed_len_multi_parser.o `test -f 'net/fixed_len_multi_parser.cpp' || echo '$(srcdir)/'`net/fixed_len_multi_parser.cpp

net/libbitcoin_server_a-fixed_len_multi_parser.obj: net/fixed_len_multi_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-fixed_len_multi_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Tpo -c -o net/libbitcoin_server_a-fixed_len_multi_parser.obj `if test -f 'net/fixed_len_multi_parser.cpp'; then $(CYGPATH_W) 'net/fixed_len_multi_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/fixed_len_multi_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Po
#	$(AM_V_CXX)source='net/fixed_len_multi_parser.cpp' object='net/libbitcoin_server_a-fixed_len_multi_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-fixed_len_multi_parser.obj `if test -f 'net/fixed_len_multi_parser.cpp'; then $(CYGPATH_W) 'net/fixed_len_multi_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/fixed_len_multi_parser.cpp'; fi`

net/libbitcoin_server_a-fixed_len_parser.o: net/fixed_len_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-fixed_len_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Tpo -c -o net/libbitcoin_server_a-fixed_len_parser.o `test -f 'net/fixed_len_parser.cpp' || echo '$(srcdir)/'`net/fixed_len_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Po
#	$(AM_V_CXX)source='net/fixed_len_parser.cpp' object='net/libbitcoin_server_a-fixed_len_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-fixed_len_parser.o `test -f 'net/fixed_len_parser.cpp' || echo '$(srcdir)/'`net/fixed_len_parser.cpp

net/libbitcoin_server_a-fixed_len_parser.obj: net/fixed_len_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-fixed_len_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Tpo -c -o net/libbitcoin_server_a-fixed_len_parser.obj `if test -f 'net/fixed_len_parser.cpp'; then $(CYGPATH_W) 'net/fixed_len_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/fixed_len_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Po
#	$(AM_V_CXX)source='net/fixed_len_parser.cpp' object='net/libbitcoin_server_a-fixed_len_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-fixed_len_parser.obj `if test -f 'net/fixed_len_parser.cpp'; then $(CYGPATH_W) 'net/fixed_len_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/fixed_len_parser.cpp'; fi`

net/libbitcoin_server_a-msg_buffer.o: net/msg_buffer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-msg_buffer.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Tpo -c -o net/libbitcoin_server_a-msg_buffer.o `test -f 'net/msg_buffer.cpp' || echo '$(srcdir)/'`net/msg_buffer.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Tpo net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Po
#	$(AM_V_CXX)source='net/msg_buffer.cpp' object='net/libbitcoin_server_a-msg_buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-msg_buffer.o `test -f 'net/msg_buffer.cpp' || echo '$(srcdir)/'`net/msg_buffer.cpp

net/libbitcoin_server_a-msg_buffer.obj: net/msg_buffer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-msg_buffer.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Tpo -c -o net/libbitcoin_server_a-msg_buffer.obj `if test -f 'net/msg_buffer.cpp'; then $(CYGPATH_W) 'net/msg_buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/net/msg_buffer.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Tpo net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Po
#	$(AM_V_CXX)source='net/msg_buffer.cpp' object='net/libbitcoin_server_a-msg_buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-msg_buffer.obj `if test -f 'net/msg_buffer.cpp'; then $(CYGPATH_W) 'net/msg_buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/net/msg_buffer.cpp'; fi`

net/libbitcoin_server_a-msg_parser_buffer.o: net/msg_parser_buffer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-msg_parser_buffer.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Tpo -c -o net/libbitcoin_server_a-msg_parser_buffer.o `test -f 'net/msg_parser_buffer.cpp' || echo '$(srcdir)/'`net/msg_parser_buffer.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Tpo net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Po
#	$(AM_V_CXX)source='net/msg_parser_buffer.cpp' object='net/libbitcoin_server_a-msg_parser_buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-msg_parser_buffer.o `test -f 'net/msg_parser_buffer.cpp' || echo '$(srcdir)/'`net/msg_parser_buffer.cpp

net/libbitcoin_server_a-msg_parser_buffer.obj: net/msg_parser_buffer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-msg_parser_buffer.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Tpo -c -o net/libbitcoin_server_a-msg_parser_buffer.obj `if test -f 'net/msg_parser_buffer.cpp'; then $(CYGPATH_W) 'net/msg_parser_buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/net/msg_parser_buffer.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Tpo net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Po
#	$(AM_V_CXX)source='net/msg_parser_buffer.cpp' object='net/libbitcoin_server_a-msg_parser_buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-msg_parser_buffer.obj `if test -f 'net/msg_parser_buffer.cpp'; then $(CYGPATH_W) 'net/msg_parser_buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/net/msg_parser_buffer.cpp'; fi`

net/libbitcoin_server_a-net.o: net/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-net.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o net/libbitcoin_server_a-net.o `test -f 'net/net.cpp' || echo '$(srcdir)/'`net/net.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-net.Tpo net/$(DEPDIR)/libbitcoin_server_a-net.Po
#	$(AM_V_CXX)source='net/net.cpp' object='net/libbitcoin_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-net.o `test -f 'net/net.cpp' || echo '$(srcdir)/'`net/net.cpp

net/libbitcoin_server_a-net.obj: net/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-net.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o net/libbitcoin_server_a-net.obj `if test -f 'net/net.cpp'; then $(CYGPATH_W) 'net/net.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-net.Tpo net/$(DEPDIR)/libbitcoin_server_a-net.Po
#	$(AM_V_CXX)source='net/net.cpp' object='net/libbitcoin_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-net.obj `if test -f 'net/net.cpp'; then $(CYGPATH_W) 'net/net.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net.cpp'; fi`

net/libbitcoin_server_a-net_message.o: net/net_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-net_message.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-net_message.Tpo -c -o net/libbitcoin_server_a-net_message.o `test -f 'net/net_message.cpp' || echo '$(srcdir)/'`net/net_message.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-net_message.Tpo net/$(DEPDIR)/libbitcoin_server_a-net_message.Po
#	$(AM_V_CXX)source='net/net_message.cpp' object='net/libbitcoin_server_a-net_message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-net_message.o `test -f 'net/net_message.cpp' || echo '$(srcdir)/'`net/net_message.cpp

net/libbitcoin_server_a-net_message.obj: net/net_message.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-net_message.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-net_message.Tpo -c -o net/libbitcoin_server_a-net_message.obj `if test -f 'net/net_message.cpp'; then $(CYGPATH_W) 'net/net_message.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net_message.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-net_message.Tpo net/$(DEPDIR)/libbitcoin_server_a-net_message.Po
#	$(AM_V_CXX)source='net/net_message.cpp' object='net/libbitcoin_server_a-net_message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-net_message.obj `if test -f 'net/net_message.cpp'; then $(CYGPATH_W) 'net/net_message.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net_message.cpp'; fi`

net/libbitcoin_server_a-net_processing.o: net/net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-net_processing.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-net_processing.Tpo -c -o net/libbitcoin_server_a-net_processing.o `test -f 'net/net_processing.cpp' || echo '$(srcdir)/'`net/net_processing.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-net_processing.Tpo net/$(DEPDIR)/libbitcoin_server_a-net_processing.Po
#	$(AM_V_CXX)source='net/net_processing.cpp' object='net/libbitcoin_server_a-net_processing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-net_processing.o `test -f 'net/net_processing.cpp' || echo '$(srcdir)/'`net/net_processing.cpp

net/libbitcoin_server_a-net_processing.obj: net/net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-net_processing.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-net_processing.Tpo -c -o net/libbitcoin_server_a-net_processing.obj `if test -f 'net/net_processing.cpp'; then $(CYGPATH_W) 'net/net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net_processing.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-net_processing.Tpo net/$(DEPDIR)/libbitcoin_server_a-net_processing.Po
#	$(AM_V_CXX)source='net/net_processing.cpp' object='net/libbitcoin_server_a-net_processing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-net_processing.obj `if test -f 'net/net_processing.cpp'; then $(CYGPATH_W) 'net/net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net/net_processing.cpp'; fi`

net/libbitcoin_server_a-node_state.o: net/node_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-node_state.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-node_state.Tpo -c -o net/libbitcoin_server_a-node_state.o `test -f 'net/node_state.cpp' || echo '$(srcdir)/'`net/node_state.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-node_state.Tpo net/$(DEPDIR)/libbitcoin_server_a-node_state.Po
#	$(AM_V_CXX)source='net/node_state.cpp' object='net/libbitcoin_server_a-node_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-node_state.o `test -f 'net/node_state.cpp' || echo '$(srcdir)/'`net/node_state.cpp

net/libbitcoin_server_a-node_state.obj: net/node_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-node_state.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-node_state.Tpo -c -o net/libbitcoin_server_a-node_state.obj `if test -f 'net/node_state.cpp'; then $(CYGPATH_W) 'net/node_state.cpp'; else $(CYGPATH_W) '$(srcdir)/net/node_state.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-node_state.Tpo net/$(DEPDIR)/libbitcoin_server_a-node_state.Po
#	$(AM_V_CXX)source='net/node_state.cpp' object='net/libbitcoin_server_a-node_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-node_state.obj `if test -f 'net/node_state.cpp'; then $(CYGPATH_W) 'net/node_state.cpp'; else $(CYGPATH_W) '$(srcdir)/net/node_state.cpp'; fi`

net/libbitcoin_server_a-prefilled_tx_parser.o: net/prefilled_tx_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-prefilled_tx_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Tpo -c -o net/libbitcoin_server_a-prefilled_tx_parser.o `test -f 'net/prefilled_tx_parser.cpp' || echo '$(srcdir)/'`net/prefilled_tx_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Po
#	$(AM_V_CXX)source='net/prefilled_tx_parser.cpp' object='net/libbitcoin_server_a-prefilled_tx_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-prefilled_tx_parser.o `test -f 'net/prefilled_tx_parser.cpp' || echo '$(srcdir)/'`net/prefilled_tx_parser.cpp

net/libbitcoin_server_a-prefilled_tx_parser.obj: net/prefilled_tx_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-prefilled_tx_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Tpo -c -o net/libbitcoin_server_a-prefilled_tx_parser.obj `if test -f 'net/prefilled_tx_parser.cpp'; then $(CYGPATH_W) 'net/prefilled_tx_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/prefilled_tx_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Po
#	$(AM_V_CXX)source='net/prefilled_tx_parser.cpp' object='net/libbitcoin_server_a-prefilled_tx_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-prefilled_tx_parser.obj `if test -f 'net/prefilled_tx_parser.cpp'; then $(CYGPATH_W) 'net/prefilled_tx_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/prefilled_tx_parser.cpp'; fi`

net/libbitcoin_server_a-single_seg_parser.o: net/single_seg_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-single_seg_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Tpo -c -o net/libbitcoin_server_a-single_seg_parser.o `test -f 'net/single_seg_parser.cpp' || echo '$(srcdir)/'`net/single_seg_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Po
#	$(AM_V_CXX)source='net/single_seg_parser.cpp' object='net/libbitcoin_server_a-single_seg_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-single_seg_parser.o `test -f 'net/single_seg_parser.cpp' || echo '$(srcdir)/'`net/single_seg_parser.cpp

net/libbitcoin_server_a-single_seg_parser.obj: net/single_seg_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-single_seg_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Tpo -c -o net/libbitcoin_server_a-single_seg_parser.obj `if test -f 'net/single_seg_parser.cpp'; then $(CYGPATH_W) 'net/single_seg_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/single_seg_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Po
#	$(AM_V_CXX)source='net/single_seg_parser.cpp' object='net/libbitcoin_server_a-single_seg_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-single_seg_parser.obj `if test -f 'net/single_seg_parser.cpp'; then $(CYGPATH_W) 'net/single_seg_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/single_seg_parser.cpp'; fi`

net/libbitcoin_server_a-stream.o: net/stream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-stream.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-stream.Tpo -c -o net/libbitcoin_server_a-stream.o `test -f 'net/stream.cpp' || echo '$(srcdir)/'`net/stream.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-stream.Tpo net/$(DEPDIR)/libbitcoin_server_a-stream.Po
#	$(AM_V_CXX)source='net/stream.cpp' object='net/libbitcoin_server_a-stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-stream.o `test -f 'net/stream.cpp' || echo '$(srcdir)/'`net/stream.cpp

net/libbitcoin_server_a-stream.obj: net/stream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-stream.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-stream.Tpo -c -o net/libbitcoin_server_a-stream.obj `if test -f 'net/stream.cpp'; then $(CYGPATH_W) 'net/stream.cpp'; else $(CYGPATH_W) '$(srcdir)/net/stream.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-stream.Tpo net/$(DEPDIR)/libbitcoin_server_a-stream.Po
#	$(AM_V_CXX)source='net/stream.cpp' object='net/libbitcoin_server_a-stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-stream.obj `if test -f 'net/stream.cpp'; then $(CYGPATH_W) 'net/stream.cpp'; else $(CYGPATH_W) '$(srcdir)/net/stream.cpp'; fi`

net/libbitcoin_server_a-stream_policy.o: net/stream_policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-stream_policy.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Tpo -c -o net/libbitcoin_server_a-stream_policy.o `test -f 'net/stream_policy.cpp' || echo '$(srcdir)/'`net/stream_policy.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Tpo net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Po
#	$(AM_V_CXX)source='net/stream_policy.cpp' object='net/libbitcoin_server_a-stream_policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-stream_policy.o `test -f 'net/stream_policy.cpp' || echo '$(srcdir)/'`net/stream_policy.cpp

net/libbitcoin_server_a-stream_policy.obj: net/stream_policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-stream_policy.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Tpo -c -o net/libbitcoin_server_a-stream_policy.obj `if test -f 'net/stream_policy.cpp'; then $(CYGPATH_W) 'net/stream_policy.cpp'; else $(CYGPATH_W) '$(srcdir)/net/stream_policy.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Tpo net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Po
#	$(AM_V_CXX)source='net/stream_policy.cpp' object='net/libbitcoin_server_a-stream_policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-stream_policy.obj `if test -f 'net/stream_policy.cpp'; then $(CYGPATH_W) 'net/stream_policy.cpp'; else $(CYGPATH_W) '$(srcdir)/net/stream_policy.cpp'; fi`

net/libbitcoin_server_a-stream_policy_factory.o: net/stream_policy_factory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-stream_policy_factory.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Tpo -c -o net/libbitcoin_server_a-stream_policy_factory.o `test -f 'net/stream_policy_factory.cpp' || echo '$(srcdir)/'`net/stream_policy_factory.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Tpo net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Po
#	$(AM_V_CXX)source='net/stream_policy_factory.cpp' object='net/libbitcoin_server_a-stream_policy_factory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-stream_policy_factory.o `test -f 'net/stream_policy_factory.cpp' || echo '$(srcdir)/'`net/stream_policy_factory.cpp

net/libbitcoin_server_a-stream_policy_factory.obj: net/stream_policy_factory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-stream_policy_factory.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Tpo -c -o net/libbitcoin_server_a-stream_policy_factory.obj `if test -f 'net/stream_policy_factory.cpp'; then $(CYGPATH_W) 'net/stream_policy_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/net/stream_policy_factory.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Tpo net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Po
#	$(AM_V_CXX)source='net/stream_policy_factory.cpp' object='net/libbitcoin_server_a-stream_policy_factory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-stream_policy_factory.obj `if test -f 'net/stream_policy_factory.cpp'; then $(CYGPATH_W) 'net/stream_policy_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/net/stream_policy_factory.cpp'; fi`

net/libbitcoin_server_a-tx_parser.o: net/tx_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-tx_parser.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Tpo -c -o net/libbitcoin_server_a-tx_parser.o `test -f 'net/tx_parser.cpp' || echo '$(srcdir)/'`net/tx_parser.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Po
#	$(AM_V_CXX)source='net/tx_parser.cpp' object='net/libbitcoin_server_a-tx_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-tx_parser.o `test -f 'net/tx_parser.cpp' || echo '$(srcdir)/'`net/tx_parser.cpp

net/libbitcoin_server_a-tx_parser.obj: net/tx_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-tx_parser.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Tpo -c -o net/libbitcoin_server_a-tx_parser.obj `if test -f 'net/tx_parser.cpp'; then $(CYGPATH_W) 'net/tx_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/tx_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Tpo net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Po
#	$(AM_V_CXX)source='net/tx_parser.cpp' object='net/libbitcoin_server_a-tx_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-tx_parser.obj `if test -f 'net/tx_parser.cpp'; then $(CYGPATH_W) 'net/tx_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/net/tx_parser.cpp'; fi`

net/libbitcoin_server_a-validation_scheduler.o: net/validation_scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-validation_scheduler.o -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Tpo -c -o net/libbitcoin_server_a-validation_scheduler.o `test -f 'net/validation_scheduler.cpp' || echo '$(srcdir)/'`net/validation_scheduler.cpp
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Tpo net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Po
#	$(AM_V_CXX)source='net/validation_scheduler.cpp' object='net/libbitcoin_server_a-validation_scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-validation_scheduler.o `test -f 'net/validation_scheduler.cpp' || echo '$(srcdir)/'`net/validation_scheduler.cpp

net/libbitcoin_server_a-validation_scheduler.obj: net/validation_scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT net/libbitcoin_server_a-validation_scheduler.obj -MD -MP -MF net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Tpo -c -o net/libbitcoin_server_a-validation_scheduler.obj `if test -f 'net/validation_scheduler.cpp'; then $(CYGPATH_W) 'net/validation_scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/net/validation_scheduler.cpp'; fi`
	$(AM_V_at)$(am__mv) net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Tpo net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Po
#	$(AM_V_CXX)source='net/validation_scheduler.cpp' object='net/libbitcoin_server_a-validation_scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o net/libbitcoin_server_a-validation_scheduler.obj `if test -f 'net/validation_scheduler.cpp'; then $(CYGPATH_W) 'net/validation_scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/net/validation_scheduler.cpp'; fi`

libbitcoin_server_a-noui.o: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp

libbitcoin_server_a-noui.obj: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-noui.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-noui.Tpo -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-noui.Tpo $(DEPDIR)/libbitcoin_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libbitcoin_server_a-noui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`

libbitcoin_server_a-orphan_txns.o: orphan_txns.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-orphan_txns.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-orphan_txns.Tpo -c -o libbitcoin_server_a-orphan_txns.o `test -f 'orphan_txns.cpp' || echo '$(srcdir)/'`orphan_txns.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-orphan_txns.Tpo $(DEPDIR)/libbitcoin_server_a-orphan_txns.Po
#	$(AM_V_CXX)source='orphan_txns.cpp' object='libbitcoin_server_a-orphan_txns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-orphan_txns.o `test -f 'orphan_txns.cpp' || echo '$(srcdir)/'`orphan_txns.cpp

libbitcoin_server_a-orphan_txns.obj: orphan_txns.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-orphan_txns.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-orphan_txns.Tpo -c -o libbitcoin_server_a-orphan_txns.obj `if test -f 'orphan_txns.cpp'; then $(CYGPATH_W) 'orphan_txns.cpp'; else $(CYGPATH_W) '$(srcdir)/orphan_txns.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-orphan_txns.Tpo $(DEPDIR)/libbitcoin_server_a-orphan_txns.Po
#	$(AM_V_CXX)source='orphan_txns.cpp' object='libbitcoin_server_a-orphan_txns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-orphan_txns.obj `if test -f 'orphan_txns.cpp'; then $(CYGPATH_W) 'orphan_txns.cpp'; else $(CYGPATH_W) '$(srcdir)/orphan_txns.cpp'; fi`

policy/libbitcoin_server_a-fees.o: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_server_a-fees.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo -c -o policy/libbitcoin_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo policy/$(DEPDIR)/libbitcoin_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitcoin_server_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp

policy/libbitcoin_server_a-fees.obj: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_server_a-fees.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo -c -o policy/libbitcoin_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_server_a-fees.Tpo policy/$(DEPDIR)/libbitcoin_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libbitcoin_server_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`

policy/libbitcoin_server_a-policy.o: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_server_a-policy.o -MD -MP -MF policy/$(DEPDIR)/libbitcoin_server_a-policy.Tpo -c -o policy/libbitcoin_server_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_server_a-policy.Tpo policy/$(DEPDIR)/libbitcoin_server_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libbitcoin_server_a-policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_server_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp

policy/libbitcoin_server_a-policy.obj: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT policy/libbitcoin_server_a-policy.obj -MD -MP -MF policy/$(DEPDIR)/libbitcoin_server_a-policy.Tpo -c -o policy/libbitcoin_server_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libbitcoin_server_a-policy.Tpo policy/$(DEPDIR)/libbitcoin_server_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libbitcoin_server_a-policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o policy/libbitcoin_server_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`

libbitcoin_server_a-pow.o: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-pow.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-pow.Tpo -c -o libbitcoin_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-pow.Tpo $(DEPDIR)/libbitcoin_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libbitcoin_server_a-pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp

libbitcoin_server_a-pow.obj: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-pow.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-pow.Tpo -c -o libbitcoin_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-pow.Tpo $(DEPDIR)/libbitcoin_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libbitcoin_server_a-pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`

libbitcoin_server_a-processing_block_index.o: processing_block_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-processing_block_index.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-processing_block_index.Tpo -c -o libbitcoin_server_a-processing_block_index.o `test -f 'processing_block_index.cpp' || echo '$(srcdir)/'`processing_block_index.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-processing_block_index.Tpo $(DEPDIR)/libbitcoin_server_a-processing_block_index.Po
#	$(AM_V_CXX)source='processing_block_index.cpp' object='libbitcoin_server_a-processing_block_index.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-processing_block_index.o `test -f 'processing_block_index.cpp' || echo '$(srcdir)/'`processing_block_index.cpp

libbitcoin_server_a-processing_block_index.obj: processing_block_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-processing_block_index.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-processing_block_index.Tpo -c -o libbitcoin_server_a-processing_block_index.obj `if test -f 'processing_block_index.cpp'; then $(CYGPATH_W) 'processing_block_index.cpp'; else $(CYGPATH_W) '$(srcdir)/processing_block_index.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-processing_block_index.Tpo $(DEPDIR)/libbitcoin_server_a-processing_block_index.Po
#	$(AM_V_CXX)source='processing_block_index.cpp' object='libbitcoin_server_a-processing_block_index.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-processing_block_index.obj `if test -f 'processing_block_index.cpp'; then $(CYGPATH_W) 'processing_block_index.cpp'; else $(CYGPATH_W) '$(srcdir)/processing_block_index.cpp'; fi`

libbitcoin_server_a-rawtxvalidator.o: rawtxvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rawtxvalidator.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Tpo -c -o libbitcoin_server_a-rawtxvalidator.o `test -f 'rawtxvalidator.cpp' || echo '$(srcdir)/'`rawtxvalidator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Tpo $(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Po
#	$(AM_V_CXX)source='rawtxvalidator.cpp' object='libbitcoin_server_a-rawtxvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rawtxvalidator.o `test -f 'rawtxvalidator.cpp' || echo '$(srcdir)/'`rawtxvalidator.cpp

libbitcoin_server_a-rawtxvalidator.obj: rawtxvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rawtxvalidator.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Tpo -c -o libbitcoin_server_a-rawtxvalidator.obj `if test -f 'rawtxvalidator.cpp'; then $(CYGPATH_W) 'rawtxvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/rawtxvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Tpo $(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Po
#	$(AM_V_CXX)source='rawtxvalidator.cpp' object='libbitcoin_server_a-rawtxvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rawtxvalidator.obj `if test -f 'rawtxvalidator.cpp'; then $(CYGPATH_W) 'rawtxvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/rawtxvalidator.cpp'; fi`

libbitcoin_server_a-rest.o: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rest.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rest.Tpo -c -o libbitcoin_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rest.Tpo $(DEPDIR)/libbitcoin_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libbitcoin_server_a-rest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp

libbitcoin_server_a-rest.obj: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-rest.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-rest.Tpo -c -o libbitcoin_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-rest.Tpo $(DEPDIR)/libbitcoin_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libbitcoin_server_a-rest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`

rpc/libbitcoin_server_a-abc.o: rpc/abc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-abc.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-abc.Tpo -c -o rpc/libbitcoin_server_a-abc.o `test -f 'rpc/abc.cpp' || echo '$(srcdir)/'`rpc/abc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-abc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-abc.Po
#	$(AM_V_CXX)source='rpc/abc.cpp' object='rpc/libbitcoin_server_a-abc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-abc.o `test -f 'rpc/abc.cpp' || echo '$(srcdir)/'`rpc/abc.cpp

rpc/libbitcoin_server_a-abc.obj: rpc/abc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-abc.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-abc.Tpo -c -o rpc/libbitcoin_server_a-abc.obj `if test -f 'rpc/abc.cpp'; then $(CYGPATH_W) 'rpc/abc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/abc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-abc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-abc.Po
#	$(AM_V_CXX)source='rpc/abc.cpp' object='rpc/libbitcoin_server_a-abc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-abc.obj `if test -f 'rpc/abc.cpp'; then $(CYGPATH_W) 'rpc/abc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/abc.cpp'; fi`

rpc/libbitcoin_server_a-blockchain.o: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-blockchain.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo -c -o rpc/libbitcoin_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitcoin_server_a-blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp

rpc/libbitcoin_server_a-blockchain.obj: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-blockchain.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo -c -o rpc/libbitcoin_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libbitcoin_server_a-blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`

rpc/libbitcoin_server_a-frozentxo_rpc.o: rpc/frozentxo_rpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-frozentxo_rpc.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Tpo -c -o rpc/libbitcoin_server_a-frozentxo_rpc.o `test -f 'rpc/frozentxo_rpc.cpp' || echo '$(srcdir)/'`rpc/frozentxo_rpc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Po
#	$(AM_V_CXX)source='rpc/frozentxo_rpc.cpp' object='rpc/libbitcoin_server_a-frozentxo_rpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-frozentxo_rpc.o `test -f 'rpc/frozentxo_rpc.cpp' || echo '$(srcdir)/'`rpc/frozentxo_rpc.cpp

rpc/libbitcoin_server_a-frozentxo_rpc.obj: rpc/frozentxo_rpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-frozentxo_rpc.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Tpo -c -o rpc/libbitcoin_server_a-frozentxo_rpc.obj `if test -f 'rpc/frozentxo_rpc.cpp'; then $(CYGPATH_W) 'rpc/frozentxo_rpc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/frozentxo_rpc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Po
#	$(AM_V_CXX)source='rpc/frozentxo_rpc.cpp' object='rpc/libbitcoin_server_a-frozentxo_rpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-frozentxo_rpc.obj `if test -f 'rpc/frozentxo_rpc.cpp'; then $(CYGPATH_W) 'rpc/frozentxo_rpc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/frozentxo_rpc.cpp'; fi`

rpc/libbitcoin_server_a-mining.o: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-mining.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo -c -o rpc/libbitcoin_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitcoin_server_a-mining.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-mining.o `test -f 'rpc/mining.cpp' || echo '$(srcdir)/'`rpc/mining.cpp

rpc/libbitcoin_server_a-mining.obj: rpc/mining.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-mining.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo -c -o rpc/libbitcoin_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-mining.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po
#	$(AM_V_CXX)source='rpc/mining.cpp' object='rpc/libbitcoin_server_a-mining.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-mining.obj `if test -f 'rpc/mining.cpp'; then $(CYGPATH_W) 'rpc/mining.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining.cpp'; fi`

rpc/libbitcoin_server_a-miner_info.o: rpc/miner_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-miner_info.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo -c -o rpc/libbitcoin_server_a-miner_info.o `test -f 'rpc/miner_info.cpp' || echo '$(srcdir)/'`rpc/miner_info.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
#	$(AM_V_CXX)source='rpc/miner_info.cpp' object='rpc/libbitcoin_server_a-miner_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-miner_info.o `test -f 'rpc/miner_info.cpp' || echo '$(srcdir)/'`rpc/miner_info.cpp

rpc/libbitcoin_server_a-miner_info.obj: rpc/miner_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-miner_info.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo -c -o rpc/libbitcoin_server_a-miner_info.obj `if test -f 'rpc/miner_info.cpp'; then $(CYGPATH_W) 'rpc/miner_info.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/miner_info.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
#	$(AM_V_CXX)source='rpc/miner_info.cpp' object='rpc/libbitcoin_server_a-miner_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-miner_info.obj `if test -f 'rpc/miner_info.cpp'; then $(CYGPATH_W) 'rpc/miner_info.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/miner_info.cpp'; fi`

rpc/libbitcoin_server_a-mining-fbb.o: rpc/mining-fbb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-mining-fbb.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Tpo -c -o rpc/libbitcoin_server_a-mining-fbb.o `test -f 'rpc/mining-fbb.cpp' || echo '$(srcdir)/'`rpc/mining-fbb.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Po
#	$(AM_V_CXX)source='rpc/mining-fbb.cpp' object='rpc/libbitcoin_server_a-mining-fbb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-mining-fbb.o `test -f 'rpc/mining-fbb.cpp' || echo '$(srcdir)/'`rpc/mining-fbb.cpp

rpc/libbitcoin_server_a-mining-fbb.obj: rpc/mining-fbb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-mining-fbb.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Tpo -c -o rpc/libbitcoin_server_a-mining-fbb.obj `if test -f 'rpc/mining-fbb.cpp'; then $(CYGPATH_W) 'rpc/mining-fbb.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining-fbb.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Po
#	$(AM_V_CXX)source='rpc/mining-fbb.cpp' object='rpc/libbitcoin_server_a-mining-fbb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-mining-fbb.obj `if test -f 'rpc/mining-fbb.cpp'; then $(CYGPATH_W) 'rpc/mining-fbb.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/mining-fbb.cpp'; fi`

rpc/libbitcoin_server_a-misc.o: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-misc.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo -c -o rpc/libbitcoin_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libbitcoin_server_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp

rpc/libbitcoin_server_a-misc.obj: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-misc.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo -c -o rpc/libbitcoin_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-misc.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libbitcoin_server_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`

rpc/libbitcoin_server_a-net.o: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-net.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o rpc/libbitcoin_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitcoin_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp

rpc/libbitcoin_server_a-net.obj: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-net.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo -c -o rpc/libbitcoin_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-net.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libbitcoin_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`

rpc/libbitcoin_server_a-rawtransaction.o: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-rawtransaction.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo -c -o rpc/libbitcoin_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitcoin_server_a-rawtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp

rpc/libbitcoin_server_a-rawtransaction.obj: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-rawtransaction.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo -c -o rpc/libbitcoin_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libbitcoin_server_a-rawtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`

rpc/libbitcoin_server_a-safe_mode.o: rpc/safe_mode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-safe_mode.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo -c -o rpc/libbitcoin_server_a-safe_mode.o `test -f 'rpc/safe_mode.cpp' || echo '$(srcdir)/'`rpc/safe_mode.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Po
#	$(AM_V_CXX)source='rpc/safe_mode.cpp' object='rpc/libbitcoin_server_a-safe_mode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-safe_mode.o `test -f 'rpc/safe_mode.cpp' || echo '$(srcdir)/'`rpc/safe_mode.cpp

rpc/libbitcoin_server_a-safe_mode.obj: rpc/safe_mode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-safe_mode.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo -c -o rpc/libbitcoin_server_a-safe_mode.obj `if test -f 'rpc/safe_mode.cpp'; then $(CYGPATH_W) 'rpc/safe_mode.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/safe_mode.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Po
#	$(AM_V_CXX)source='rpc/safe_mode.cpp' object='rpc/libbitcoin_server_a-safe_mode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-safe_mode.obj `if test -f 'rpc/safe_mode.cpp'; then $(CYGPATH_W) 'rpc/safe_mode.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/safe_mode.cpp'; fi`

rpc/libbitcoin_server_a-server.o: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-server.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo -c -o rpc/libbitcoin_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitcoin_server_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp

rpc/libbitcoin_server_a-server.obj: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-server.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo -c -o rpc/libbitcoin_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-server.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libbitcoin_server_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`

rpc/libbitcoin_server_a-webhook_client.o: rpc/webhook_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-webhook_client.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Tpo -c -o rpc/libbitcoin_server_a-webhook_client.o `test -f 'rpc/webhook_client.cpp' || echo '$(srcdir)/'`rpc/webhook_client.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Po
#	$(AM_V_CXX)source='rpc/webhook_client.cpp' object='rpc/libbitcoin_server_a-webhook_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-webhook_client.o `test -f 'rpc/webhook_client.cpp' || echo '$(srcdir)/'`rpc/webhook_client.cpp

rpc/libbitcoin_server_a-webhook_client.obj: rpc/webhook_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_server_a-webhook_client.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Tpo -c -o rpc/libbitcoin_server_a-webhook_client.obj `if test -f 'rpc/webhook_client.cpp'; then $(CYGPATH_W) 'rpc/webhook_client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/webhook_client.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Tpo rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Po
#	$(AM_V_CXX)source='rpc/webhook_client.cpp' object='rpc/libbitcoin_server_a-webhook_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_server_a-webhook_client.obj `if test -f 'rpc/webhook_client.cpp'; then $(CYGPATH_W) 'rpc/webhook_client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/webhook_client.cpp'; fi`

libbitcoin_server_a-safe_mode.o: safe_mode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-safe_mode.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo -c -o libbitcoin_server_a-safe_mode.o `test -f 'safe_mode.cpp' || echo '$(srcdir)/'`safe_mode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo $(DEPDIR)/libbitcoin_server_a-safe_mode.Po
#	$(AM_V_CXX)source='safe_mode.cpp' object='libbitcoin_server_a-safe_mode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-safe_mode.o `test -f 'safe_mode.cpp' || echo '$(srcdir)/'`safe_mode.cpp

libbitcoin_server_a-safe_mode.obj: safe_mode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-safe_mode.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo -c -o libbitcoin_server_a-safe_mode.obj `if test -f 'safe_mode.cpp'; then $(CYGPATH_W) 'safe_mode.cpp'; else $(CYGPATH_W) '$(srcdir)/safe_mode.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-safe_mode.Tpo $(DEPDIR)/libbitcoin_server_a-safe_mode.Po
#	$(AM_V_CXX)source='safe_mode.cpp' object='libbitcoin_server_a-safe_mode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-safe_mode.obj `if test -f 'safe_mode.cpp'; then $(CYGPATH_W) 'safe_mode.cpp'; else $(CYGPATH_W) '$(srcdir)/safe_mode.cpp'; fi`

script/libbitcoin_server_a-scriptcache.o: script/scriptcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-scriptcache.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Tpo -c -o script/libbitcoin_server_a-scriptcache.o `test -f 'script/scriptcache.cpp' || echo '$(srcdir)/'`script/scriptcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Tpo script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Po
#	$(AM_V_CXX)source='script/scriptcache.cpp' object='script/libbitcoin_server_a-scriptcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-scriptcache.o `test -f 'script/scriptcache.cpp' || echo '$(srcdir)/'`script/scriptcache.cpp

script/libbitcoin_server_a-scriptcache.obj: script/scriptcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-scriptcache.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Tpo -c -o script/libbitcoin_server_a-scriptcache.obj `if test -f 'script/scriptcache.cpp'; then $(CYGPATH_W) 'script/scriptcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/scriptcache.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Tpo script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Po
#	$(AM_V_CXX)source='script/scriptcache.cpp' object='script/libbitcoin_server_a-scriptcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-scriptcache.obj `if test -f 'script/scriptcache.cpp'; then $(CYGPATH_W) 'script/scriptcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/scriptcache.cpp'; fi`

script/libbitcoin_server_a-sigcache.o: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-sigcache.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo -c -o script/libbitcoin_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitcoin_server_a-sigcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/libbitcoin_server_a-sigcache.obj: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-sigcache.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo -c -o script/libbitcoin_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-sigcache.Tpo script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libbitcoin_server_a-sigcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`

script/libbitcoin_server_a-ismine.o: script/ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-ismine.o -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-ismine.Tpo -c -o script/libbitcoin_server_a-ismine.o `test -f 'script/ismine.cpp' || echo '$(srcdir)/'`script/ismine.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-ismine.Tpo script/$(DEPDIR)/libbitcoin_server_a-ismine.Po
#	$(AM_V_CXX)source='script/ismine.cpp' object='script/libbitcoin_server_a-ismine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-ismine.o `test -f 'script/ismine.cpp' || echo '$(srcdir)/'`script/ismine.cpp

script/libbitcoin_server_a-ismine.obj: script/ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoin_server_a-ismine.obj -MD -MP -MF script/$(DEPDIR)/libbitcoin_server_a-ismine.Tpo -c -o script/libbitcoin_server_a-ismine.obj `if test -f 'script/ismine.cpp'; then $(CYGPATH_W) 'script/ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/script/ismine.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoin_server_a-ismine.Tpo script/$(DEPDIR)/libbitcoin_server_a-ismine.Po
#	$(AM_V_CXX)source='script/ismine.cpp' object='script/libbitcoin_server_a-ismine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoin_server_a-ismine.obj `if test -f 'script/ismine.cpp'; then $(CYGPATH_W) 'script/ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/script/ismine.cpp'; fi`

libbitcoin_server_a-taskcancellation.o: taskcancellation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-taskcancellation.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-taskcancellation.Tpo -c -o libbitcoin_server_a-taskcancellation.o `test -f 'taskcancellation.cpp' || echo '$(srcdir)/'`taskcancellation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-taskcancellation.Tpo $(DEPDIR)/libbitcoin_server_a-taskcancellation.Po
#	$(AM_V_CXX)source='taskcancellation.cpp' object='libbitcoin_server_a-taskcancellation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-taskcancellation.o `test -f 'taskcancellation.cpp' || echo '$(srcdir)/'`taskcancellation.cpp

libbitcoin_server_a-taskcancellation.obj: taskcancellation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-taskcancellation.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-taskcancellation.Tpo -c -o libbitcoin_server_a-taskcancellation.obj `if test -f 'taskcancellation.cpp'; then $(CYGPATH_W) 'taskcancellation.cpp'; else $(CYGPATH_W) '$(srcdir)/taskcancellation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-taskcancellation.Tpo $(DEPDIR)/libbitcoin_server_a-taskcancellation.Po
#	$(AM_V_CXX)source='taskcancellation.cpp' object='libbitcoin_server_a-taskcancellation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-taskcancellation.obj `if test -f 'taskcancellation.cpp'; then $(CYGPATH_W) 'taskcancellation.cpp'; else $(CYGPATH_W) '$(srcdir)/taskcancellation.cpp'; fi`

libbitcoin_server_a-timedata.o: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-timedata.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-timedata.Tpo -c -o libbitcoin_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-timedata.Tpo $(DEPDIR)/libbitcoin_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libbitcoin_server_a-timedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp

libbitcoin_server_a-timedata.obj: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-timedata.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-timedata.Tpo -c -o libbitcoin_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-timedata.Tpo $(DEPDIR)/libbitcoin_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libbitcoin_server_a-timedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`

libbitcoin_server_a-time_locked_mempool.o: time_locked_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-time_locked_mempool.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Tpo -c -o libbitcoin_server_a-time_locked_mempool.o `test -f 'time_locked_mempool.cpp' || echo '$(srcdir)/'`time_locked_mempool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Tpo $(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Po
#	$(AM_V_CXX)source='time_locked_mempool.cpp' object='libbitcoin_server_a-time_locked_mempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-time_locked_mempool.o `test -f 'time_locked_mempool.cpp' || echo '$(srcdir)/'`time_locked_mempool.cpp

libbitcoin_server_a-time_locked_mempool.obj: time_locked_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-time_locked_mempool.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Tpo -c -o libbitcoin_server_a-time_locked_mempool.obj `if test -f 'time_locked_mempool.cpp'; then $(CYGPATH_W) 'time_locked_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/time_locked_mempool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Tpo $(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Po
#	$(AM_V_CXX)source='time_locked_mempool.cpp' object='libbitcoin_server_a-time_locked_mempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-time_locked_mempool.obj `if test -f 'time_locked_mempool.cpp'; then $(CYGPATH_W) 'time_locked_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/time_locked_mempool.cpp'; fi`

libbitcoin_server_a-txdb.o: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txdb.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txdb.Tpo -c -o libbitcoin_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txdb.Tpo $(DEPDIR)/libbitcoin_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libbitcoin_server_a-txdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp

libbitcoin_server_a-txdb.obj: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txdb.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txdb.Tpo -c -o libbitcoin_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txdb.Tpo $(DEPDIR)/libbitcoin_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libbitcoin_server_a-txdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`

libbitcoin_server_a-txmempool.o: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txmempool.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo -c -o libbitcoin_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo $(DEPDIR)/libbitcoin_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libbitcoin_server_a-txmempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp

libbitcoin_server_a-txmempool.obj: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txmempool.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo -c -o libbitcoin_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txmempool.Tpo $(DEPDIR)/libbitcoin_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libbitcoin_server_a-txmempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`

libbitcoin_server_a-txmempoolevictioncandidates.o: txmempoolevictioncandidates.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txmempoolevictioncandidates.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Tpo -c -o libbitcoin_server_a-txmempoolevictioncandidates.o `test -f 'txmempoolevictioncandidates.cpp' || echo '$(srcdir)/'`txmempoolevictioncandidates.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Tpo $(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Po
#	$(AM_V_CXX)source='txmempoolevictioncandidates.cpp' object='libbitcoin_server_a-txmempoolevictioncandidates.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txmempoolevictioncandidates.o `test -f 'txmempoolevictioncandidates.cpp' || echo '$(srcdir)/'`txmempoolevictioncandidates.cpp

libbitcoin_server_a-txmempoolevictioncandidates.obj: txmempoolevictioncandidates.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txmempoolevictioncandidates.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Tpo -c -o libbitcoin_server_a-txmempoolevictioncandidates.obj `if test -f 'txmempoolevictioncandidates.cpp'; then $(CYGPATH_W) 'txmempoolevictioncandidates.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempoolevictioncandidates.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Tpo $(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Po
#	$(AM_V_CXX)source='txmempoolevictioncandidates.cpp' object='libbitcoin_server_a-txmempoolevictioncandidates.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txmempoolevictioncandidates.obj `if test -f 'txmempoolevictioncandidates.cpp'; then $(CYGPATH_W) 'txmempoolevictioncandidates.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempoolevictioncandidates.cpp'; fi`

libbitcoin_server_a-tx_mempool_info.o: tx_mempool_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-tx_mempool_info.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Tpo -c -o libbitcoin_server_a-tx_mempool_info.o `test -f 'tx_mempool_info.cpp' || echo '$(srcdir)/'`tx_mempool_info.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Tpo $(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Po
#	$(AM_V_CXX)source='tx_mempool_info.cpp' object='libbitcoin_server_a-tx_mempool_info.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-tx_mempool_info.o `test -f 'tx_mempool_info.cpp' || echo '$(srcdir)/'`tx_mempool_info.cpp

libbitcoin_server_a-tx_mempool_info.obj: tx_mempool_info.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-tx_mempool_info.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Tpo -c -o libbitcoin_server_a-tx_mempool_info.obj `if test -f 'tx_mempool_info.cpp'; then $(CYGPATH_W) 'tx_mempool_info.cpp'; else $(CYGPATH_W) '$(srcdir)/tx_mempool_info.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Tpo $(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Po
#	$(AM_V_CXX)source='tx_mempool_info.cpp' object='libbitcoin_server_a-tx_mempool_info.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-tx_mempool_info.obj `if test -f 'tx_mempool_info.cpp'; then $(CYGPATH_W) 'tx_mempool_info.cpp'; else $(CYGPATH_W) '$(srcdir)/tx_mempool_info.cpp'; fi`

libbitcoin_server_a-txn_double_spend_detector.o: txn_double_spend_detector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_double_spend_detector.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Tpo -c -o libbitcoin_server_a-txn_double_spend_detector.o `test -f 'txn_double_spend_detector.cpp' || echo '$(srcdir)/'`txn_double_spend_detector.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Tpo $(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Po
#	$(AM_V_CXX)source='txn_double_spend_detector.cpp' object='libbitcoin_server_a-txn_double_spend_detector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_double_spend_detector.o `test -f 'txn_double_spend_detector.cpp' || echo '$(srcdir)/'`txn_double_spend_detector.cpp

libbitcoin_server_a-txn_double_spend_detector.obj: txn_double_spend_detector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_double_spend_detector.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Tpo -c -o libbitcoin_server_a-txn_double_spend_detector.obj `if test -f 'txn_double_spend_detector.cpp'; then $(CYGPATH_W) 'txn_double_spend_detector.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_double_spend_detector.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Tpo $(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Po
#	$(AM_V_CXX)source='txn_double_spend_detector.cpp' object='libbitcoin_server_a-txn_double_spend_detector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_double_spend_detector.obj `if test -f 'txn_double_spend_detector.cpp'; then $(CYGPATH_W) 'txn_double_spend_detector.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_double_spend_detector.cpp'; fi`

libbitcoin_server_a-txn_grouper.o: txn_grouper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_grouper.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_grouper.Tpo -c -o libbitcoin_server_a-txn_grouper.o `test -f 'txn_grouper.cpp' || echo '$(srcdir)/'`txn_grouper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_grouper.Tpo $(DEPDIR)/libbitcoin_server_a-txn_grouper.Po
#	$(AM_V_CXX)source='txn_grouper.cpp' object='libbitcoin_server_a-txn_grouper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_grouper.o `test -f 'txn_grouper.cpp' || echo '$(srcdir)/'`txn_grouper.cpp

libbitcoin_server_a-txn_grouper.obj: txn_grouper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_grouper.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_grouper.Tpo -c -o libbitcoin_server_a-txn_grouper.obj `if test -f 'txn_grouper.cpp'; then $(CYGPATH_W) 'txn_grouper.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_grouper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_grouper.Tpo $(DEPDIR)/libbitcoin_server_a-txn_grouper.Po
#	$(AM_V_CXX)source='txn_grouper.cpp' object='libbitcoin_server_a-txn_grouper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_grouper.obj `if test -f 'txn_grouper.cpp'; then $(CYGPATH_W) 'txn_grouper.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_grouper.cpp'; fi`

libbitcoin_server_a-txn_propagator.o: txn_propagator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_propagator.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_propagator.Tpo -c -o libbitcoin_server_a-txn_propagator.o `test -f 'txn_propagator.cpp' || echo '$(srcdir)/'`txn_propagator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_propagator.Tpo $(DEPDIR)/libbitcoin_server_a-txn_propagator.Po
#	$(AM_V_CXX)source='txn_propagator.cpp' object='libbitcoin_server_a-txn_propagator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_propagator.o `test -f 'txn_propagator.cpp' || echo '$(srcdir)/'`txn_propagator.cpp

libbitcoin_server_a-txn_propagator.obj: txn_propagator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_propagator.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_propagator.Tpo -c -o libbitcoin_server_a-txn_propagator.obj `if test -f 'txn_propagator.cpp'; then $(CYGPATH_W) 'txn_propagator.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_propagator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_propagator.Tpo $(DEPDIR)/libbitcoin_server_a-txn_propagator.Po
#	$(AM_V_CXX)source='txn_propagator.cpp' object='libbitcoin_server_a-txn_propagator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_propagator.obj `if test -f 'txn_propagator.cpp'; then $(CYGPATH_W) 'txn_propagator.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_propagator.cpp'; fi`

libbitcoin_server_a-txn_validation_data.o: txn_validation_data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_validation_data.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_validation_data.Tpo -c -o libbitcoin_server_a-txn_validation_data.o `test -f 'txn_validation_data.cpp' || echo '$(srcdir)/'`txn_validation_data.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_validation_data.Tpo $(DEPDIR)/libbitcoin_server_a-txn_validation_data.Po
#	$(AM_V_CXX)source='txn_validation_data.cpp' object='libbitcoin_server_a-txn_validation_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_validation_data.o `test -f 'txn_validation_data.cpp' || echo '$(srcdir)/'`txn_validation_data.cpp

libbitcoin_server_a-txn_validation_data.obj: txn_validation_data.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_validation_data.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_validation_data.Tpo -c -o libbitcoin_server_a-txn_validation_data.obj `if test -f 'txn_validation_data.cpp'; then $(CYGPATH_W) 'txn_validation_data.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_validation_data.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_validation_data.Tpo $(DEPDIR)/libbitcoin_server_a-txn_validation_data.Po
#	$(AM_V_CXX)source='txn_validation_data.cpp' object='libbitcoin_server_a-txn_validation_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_validation_data.obj `if test -f 'txn_validation_data.cpp'; then $(CYGPATH_W) 'txn_validation_data.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_validation_data.cpp'; fi`

libbitcoin_server_a-txn_recent_rejects.o: txn_recent_rejects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_recent_rejects.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Tpo -c -o libbitcoin_server_a-txn_recent_rejects.o `test -f 'txn_recent_rejects.cpp' || echo '$(srcdir)/'`txn_recent_rejects.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Tpo $(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Po
#	$(AM_V_CXX)source='txn_recent_rejects.cpp' object='libbitcoin_server_a-txn_recent_rejects.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_recent_rejects.o `test -f 'txn_recent_rejects.cpp' || echo '$(srcdir)/'`txn_recent_rejects.cpp

libbitcoin_server_a-txn_recent_rejects.obj: txn_recent_rejects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_recent_rejects.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Tpo -c -o libbitcoin_server_a-txn_recent_rejects.obj `if test -f 'txn_recent_rejects.cpp'; then $(CYGPATH_W) 'txn_recent_rejects.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_recent_rejects.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Tpo $(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Po
#	$(AM_V_CXX)source='txn_recent_rejects.cpp' object='libbitcoin_server_a-txn_recent_rejects.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_recent_rejects.obj `if test -f 'txn_recent_rejects.cpp'; then $(CYGPATH_W) 'txn_recent_rejects.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_recent_rejects.cpp'; fi`

libbitcoin_server_a-txn_validator.o: txn_validator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_validator.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_validator.Tpo -c -o libbitcoin_server_a-txn_validator.o `test -f 'txn_validator.cpp' || echo '$(srcdir)/'`txn_validator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_validator.Tpo $(DEPDIR)/libbitcoin_server_a-txn_validator.Po
#	$(AM_V_CXX)source='txn_validator.cpp' object='libbitcoin_server_a-txn_validator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_validator.o `test -f 'txn_validator.cpp' || echo '$(srcdir)/'`txn_validator.cpp

libbitcoin_server_a-txn_validator.obj: txn_validator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-txn_validator.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-txn_validator.Tpo -c -o libbitcoin_server_a-txn_validator.obj `if test -f 'txn_validator.cpp'; then $(CYGPATH_W) 'txn_validator.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_validator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-txn_validator.Tpo $(DEPDIR)/libbitcoin_server_a-txn_validator.Po
#	$(AM_V_CXX)source='txn_validator.cpp' object='libbitcoin_server_a-txn_validator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-txn_validator.obj `if test -f 'txn_validator.cpp'; then $(CYGPATH_W) 'txn_validator.cpp'; else $(CYGPATH_W) '$(srcdir)/txn_validator.cpp'; fi`

libbitcoin_server_a-ui_interface.o: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-ui_interface.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-ui_interface.Tpo -c -o libbitcoin_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-ui_interface.Tpo $(DEPDIR)/libbitcoin_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libbitcoin_server_a-ui_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp

libbitcoin_server_a-ui_interface.obj: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-ui_interface.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-ui_interface.Tpo -c -o libbitcoin_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-ui_interface.Tpo $(DEPDIR)/libbitcoin_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libbitcoin_server_a-ui_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`

libbitcoin_server_a-unique_array.o: unique_array.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-unique_array.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-unique_array.Tpo -c -o libbitcoin_server_a-unique_array.o `test -f 'unique_array.cpp' || echo '$(srcdir)/'`unique_array.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-unique_array.Tpo $(DEPDIR)/libbitcoin_server_a-unique_array.Po
#	$(AM_V_CXX)source='unique_array.cpp' object='libbitcoin_server_a-unique_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-unique_array.o `test -f 'unique_array.cpp' || echo '$(srcdir)/'`unique_array.cpp

libbitcoin_server_a-unique_array.obj: unique_array.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-unique_array.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-unique_array.Tpo -c -o libbitcoin_server_a-unique_array.obj `if test -f 'unique_array.cpp'; then $(CYGPATH_W) 'unique_array.cpp'; else $(CYGPATH_W) '$(srcdir)/unique_array.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-unique_array.Tpo $(DEPDIR)/libbitcoin_server_a-unique_array.Po
#	$(AM_V_CXX)source='unique_array.cpp' object='libbitcoin_server_a-unique_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-unique_array.obj `if test -f 'unique_array.cpp'; then $(CYGPATH_W) 'unique_array.cpp'; else $(CYGPATH_W) '$(srcdir)/unique_array.cpp'; fi`

libbitcoin_server_a-validation.o: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-validation.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-validation.Tpo -c -o libbitcoin_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-validation.Tpo $(DEPDIR)/libbitcoin_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libbitcoin_server_a-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp

libbitcoin_server_a-validation.obj: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-validation.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-validation.Tpo -c -o libbitcoin_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-validation.Tpo $(DEPDIR)/libbitcoin_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libbitcoin_server_a-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`

libbitcoin_server_a-validationinterface.o: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-validationinterface.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo -c -o libbitcoin_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo $(DEPDIR)/libbitcoin_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libbitcoin_server_a-validationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp

libbitcoin_server_a-validationinterface.obj: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-validationinterface.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo -c -o libbitcoin_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-validationinterface.Tpo $(DEPDIR)/libbitcoin_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libbitcoin_server_a-validationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`

libbitcoin_server_a-vmtouch.o: vmtouch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-vmtouch.o -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-vmtouch.Tpo -c -o libbitcoin_server_a-vmtouch.o `test -f 'vmtouch.cpp' || echo '$(srcdir)/'`vmtouch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-vmtouch.Tpo $(DEPDIR)/libbitcoin_server_a-vmtouch.Po
#	$(AM_V_CXX)source='vmtouch.cpp' object='libbitcoin_server_a-vmtouch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-vmtouch.o `test -f 'vmtouch.cpp' || echo '$(srcdir)/'`vmtouch.cpp

libbitcoin_server_a-vmtouch.obj: vmtouch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_server_a-vmtouch.obj -MD -MP -MF $(DEPDIR)/libbitcoin_server_a-vmtouch.Tpo -c -o libbitcoin_server_a-vmtouch.obj `if test -f 'vmtouch.cpp'; then $(CYGPATH_W) 'vmtouch.cpp'; else $(CYGPATH_W) '$(srcdir)/vmtouch.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_server_a-vmtouch.Tpo $(DEPDIR)/libbitcoin_server_a-vmtouch.Po
#	$(AM_V_CXX)source='vmtouch.cpp' object='libbitcoin_server_a-vmtouch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_server_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_server_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_server_a-vmtouch.obj `if test -f 'vmtouch.cpp'; then $(CYGPATH_W) 'vmtouch.cpp'; else $(CYGPATH_W) '$(srcdir)/vmtouch.cpp'; fi`

support/libbitcoin_util_a-lockedpool.o: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-lockedpool.o -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo -c -o support/libbitcoin_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libbitcoin_util_a-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp

support/libbitcoin_util_a-lockedpool.obj: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-lockedpool.obj -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo -c -o support/libbitcoin_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Tpo support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libbitcoin_util_a-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`

libbitcoin_util_a-chainparamsbase.o: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-chainparamsbase.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo -c -o libbitcoin_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitcoin_util_a-chainparamsbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp

libbitcoin_util_a-chainparamsbase.obj: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-chainparamsbase.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo -c -o libbitcoin_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Tpo $(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libbitcoin_util_a-chainparamsbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`

libbitcoin_util_a-clientversion.o: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libbitcoin_util_a-clientversion.obj: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-clientversion.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-clientversion.Tpo $(DEPDIR)/libbitcoin_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libbitcoin_util_a-clientversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`

compat/libbitcoin_util_a-glibc_sanity.o: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_sanity.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo -c -o compat/libbitcoin_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libbitcoin_util_a-glibc_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp

compat/libbitcoin_util_a-glibc_sanity.obj: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo -c -o compat/libbitcoin_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libbitcoin_util_a-glibc_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`

compat/libbitcoin_util_a-glibcxx_sanity.o: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibcxx_sanity.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo -c -o compat/libbitcoin_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libbitcoin_util_a-glibcxx_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp

compat/libbitcoin_util_a-glibcxx_sanity.obj: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibcxx_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo -c -o compat/libbitcoin_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libbitcoin_util_a-glibcxx_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`

compat/libbitcoin_util_a-strnlen.o: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-strnlen.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo -c -o compat/libbitcoin_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libbitcoin_util_a-strnlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp

compat/libbitcoin_util_a-strnlen.obj: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-strnlen.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo -c -o compat/libbitcoin_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Tpo compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libbitcoin_util_a-strnlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`

libbitcoin_util_a-fs.o: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-fs.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-fs.Tpo -c -o libbitcoin_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-fs.Tpo $(DEPDIR)/libbitcoin_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libbitcoin_util_a-fs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp

libbitcoin_util_a-fs.obj: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-fs.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-fs.Tpo -c -o libbitcoin_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-fs.Tpo $(DEPDIR)/libbitcoin_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libbitcoin_util_a-fs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`

libbitcoin_util_a-logging.o: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-logging.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-logging.Tpo -c -o libbitcoin_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-logging.Tpo $(DEPDIR)/libbitcoin_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libbitcoin_util_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-logging.o `test -f 'logging.cpp' || echo '$(srcdir)/'`logging.cpp

libbitcoin_util_a-logging.obj: logging.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-logging.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-logging.Tpo -c -o libbitcoin_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-logging.Tpo $(DEPDIR)/libbitcoin_util_a-logging.Po
#	$(AM_V_CXX)source='logging.cpp' object='libbitcoin_util_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-logging.obj `if test -f 'logging.cpp'; then $(CYGPATH_W) 'logging.cpp'; else $(CYGPATH_W) '$(srcdir)/logging.cpp'; fi`

libbitcoin_util_a-random.o: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-random.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-random.Tpo -c -o libbitcoin_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-random.Tpo $(DEPDIR)/libbitcoin_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libbitcoin_util_a-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libbitcoin_util_a-random.obj: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-random.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-random.Tpo -c -o libbitcoin_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-random.Tpo $(DEPDIR)/libbitcoin_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libbitcoin_util_a-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`

rpc/libbitcoin_util_a-protocol.o: rpc/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-protocol.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo -c -o rpc/libbitcoin_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po
#	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libbitcoin_util_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp

rpc/libbitcoin_util_a-protocol.obj: rpc/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-protocol.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo -c -o rpc/libbitcoin_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po
#	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libbitcoin_util_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`

rpc/libbitcoin_util_a-text_writer.o: rpc/text_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-text_writer.o -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Tpo -c -o rpc/libbitcoin_util_a-text_writer.o `test -f 'rpc/text_writer.cpp' || echo '$(srcdir)/'`rpc/text_writer.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Po
#	$(AM_V_CXX)source='rpc/text_writer.cpp' object='rpc/libbitcoin_util_a-text_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-text_writer.o `test -f 'rpc/text_writer.cpp' || echo '$(srcdir)/'`rpc/text_writer.cpp

rpc/libbitcoin_util_a-text_writer.obj: rpc/text_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT rpc/libbitcoin_util_a-text_writer.obj -MD -MP -MF rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Tpo -c -o rpc/libbitcoin_util_a-text_writer.obj `if test -f 'rpc/text_writer.cpp'; then $(CYGPATH_W) 'rpc/text_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/text_writer.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Tpo rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Po
#	$(AM_V_CXX)source='rpc/text_writer.cpp' object='rpc/libbitcoin_util_a-text_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libbitcoin_util_a-text_writer.obj `if test -f 'rpc/text_writer.cpp'; then $(CYGPATH_W) 'rpc/text_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/text_writer.cpp'; fi`

support/libbitcoin_util_a-cleanse.o: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-cleanse.o -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo -c -o support/libbitcoin_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoin_util_a-cleanse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/libbitcoin_util_a-cleanse.obj: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT support/libbitcoin_util_a-cleanse.obj -MD -MP -MF support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo -c -o support/libbitcoin_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libbitcoin_util_a-cleanse.Tpo support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libbitcoin_util_a-cleanse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o support/libbitcoin_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`

libbitcoin_util_a-sync.o: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libbitcoin_util_a-sync.obj: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-sync.Tpo -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-sync.Tpo $(DEPDIR)/libbitcoin_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libbitcoin_util_a-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`

libbitcoin_util_a-threadinterrupt.o: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-threadinterrupt.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo -c -o libbitcoin_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libbitcoin_util_a-threadinterrupt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp

libbitcoin_util_a-threadinterrupt.obj: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-threadinterrupt.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo -c -o libbitcoin_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Tpo $(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libbitcoin_util_a-threadinterrupt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`

libbitcoin_util_a-threadpriority.o: threadpriority.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-threadpriority.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-threadpriority.Tpo -c -o libbitcoin_util_a-threadpriority.o `test -f 'threadpriority.cpp' || echo '$(srcdir)/'`threadpriority.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-threadpriority.Tpo $(DEPDIR)/libbitcoin_util_a-threadpriority.Po
#	$(AM_V_CXX)source='threadpriority.cpp' object='libbitcoin_util_a-threadpriority.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-threadpriority.o `test -f 'threadpriority.cpp' || echo '$(srcdir)/'`threadpriority.cpp

libbitcoin_util_a-threadpriority.obj: threadpriority.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-threadpriority.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-threadpriority.Tpo -c -o libbitcoin_util_a-threadpriority.obj `if test -f 'threadpriority.cpp'; then $(CYGPATH_W) 'threadpriority.cpp'; else $(CYGPATH_W) '$(srcdir)/threadpriority.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-threadpriority.Tpo $(DEPDIR)/libbitcoin_util_a-threadpriority.Po
#	$(AM_V_CXX)source='threadpriority.cpp' object='libbitcoin_util_a-threadpriority.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-threadpriority.obj `if test -f 'threadpriority.cpp'; then $(CYGPATH_W) 'threadpriority.cpp'; else $(CYGPATH_W) '$(srcdir)/threadpriority.cpp'; fi`

libbitcoin_util_a-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

libbitcoin_util_a-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-util.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-util.Tpo -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-util.Tpo $(DEPDIR)/libbitcoin_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libbitcoin_util_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

libbitcoin_util_a-utilmoneystr.o: utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilmoneystr.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo -c -o libbitcoin_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utilmoneystr.cpp' object='libbitcoin_util_a-utilmoneystr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp

libbitcoin_util_a-utilmoneystr.obj: utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilmoneystr.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo -c -o libbitcoin_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Tpo $(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utilmoneystr.cpp' object='libbitcoin_util_a-utilmoneystr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`

libbitcoin_util_a-utilstrencodings.o: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilstrencodings.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo -c -o libbitcoin_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libbitcoin_util_a-utilstrencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

libbitcoin_util_a-utilstrencodings.obj: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utilstrencodings.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo -c -o libbitcoin_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Tpo $(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libbitcoin_util_a-utilstrencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`

libbitcoin_util_a-utiltime.o: utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utiltime.o -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo -c -o libbitcoin_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo $(DEPDIR)/libbitcoin_util_a-utiltime.Po
#	$(AM_V_CXX)source='utiltime.cpp' object='libbitcoin_util_a-utiltime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp

libbitcoin_util_a-utiltime.obj: utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT libbitcoin_util_a-utiltime.obj -MD -MP -MF $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo -c -o libbitcoin_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoin_util_a-utiltime.Tpo $(DEPDIR)/libbitcoin_util_a-utiltime.Po
#	$(AM_V_CXX)source='utiltime.cpp' object='libbitcoin_util_a-utiltime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoin_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`

compat/libbitcoin_util_a-glibc_compat.o: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_compat.o -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo -c -o compat/libbitcoin_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitcoin_util_a-glibc_compat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

compat/libbitcoin_util_a-glibc_compat.obj: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoin_util_a-glibc_compat.obj -MD -MP -MF compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo -c -o compat/libbitcoin_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitcoin_util_a-glibc_compat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_util_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_util_a_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoin_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`

wallet/libbitcoin_wallet_a-crypter.o: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-crypter.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o wallet/libbitcoin_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitcoin_wallet_a-crypter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp

wallet/libbitcoin_wallet_a-crypter.obj: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-crypter.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo -c -o wallet/libbitcoin_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libbitcoin_wallet_a-crypter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`

wallet/libbitcoin_wallet_a-db.o: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-db.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o wallet/libbitcoin_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitcoin_wallet_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/libbitcoin_wallet_a-db.obj: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo -c -o wallet/libbitcoin_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libbitcoin_wallet_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

wallet/libbitcoin_wallet_a-finaltx.o: wallet/finaltx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-finaltx.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Tpo -c -o wallet/libbitcoin_wallet_a-finaltx.o `test -f 'wallet/finaltx.cpp' || echo '$(srcdir)/'`wallet/finaltx.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Po
#	$(AM_V_CXX)source='wallet/finaltx.cpp' object='wallet/libbitcoin_wallet_a-finaltx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-finaltx.o `test -f 'wallet/finaltx.cpp' || echo '$(srcdir)/'`wallet/finaltx.cpp

wallet/libbitcoin_wallet_a-finaltx.obj: wallet/finaltx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-finaltx.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Tpo -c -o wallet/libbitcoin_wallet_a-finaltx.obj `if test -f 'wallet/finaltx.cpp'; then $(CYGPATH_W) 'wallet/finaltx.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/finaltx.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Po
#	$(AM_V_CXX)source='wallet/finaltx.cpp' object='wallet/libbitcoin_wallet_a-finaltx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-finaltx.obj `if test -f 'wallet/finaltx.cpp'; then $(CYGPATH_W) 'wallet/finaltx.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/finaltx.cpp'; fi`

wallet/libbitcoin_wallet_a-rpcdump.o: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcdump.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o wallet/libbitcoin_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libbitcoin_wallet_a-rpcdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp

wallet/libbitcoin_wallet_a-rpcdump.obj: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcdump.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo -c -o wallet/libbitcoin_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libbitcoin_wallet_a-rpcdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`

wallet/libbitcoin_wallet_a-rpcwallet.o: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcwallet.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o wallet/libbitcoin_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libbitcoin_wallet_a-rpcwallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp

wallet/libbitcoin_wallet_a-rpcwallet.obj: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-rpcwallet.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo -c -o wallet/libbitcoin_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libbitcoin_wallet_a-rpcwallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`

wallet/libbitcoin_wallet_a-wallet.o: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/libbitcoin_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitcoin_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp

wallet/libbitcoin_wallet_a-wallet.obj: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-wallet.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo -c -o wallet/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libbitcoin_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`

wallet/libbitcoin_wallet_a-walletdb.o: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletdb.o -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o wallet/libbitcoin_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitcoin_wallet_a-walletdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp

wallet/libbitcoin_wallet_a-walletdb.obj: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -MT wallet/libbitcoin_wallet_a-walletdb.obj -MD -MP -MF wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo -c -o wallet/libbitcoin_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libbitcoin_wallet_a-walletdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_wallet_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_wallet_a_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libbitcoin_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`

zmq/libbitcoin_zmq_a-zmq_publisher.o: zmq/zmq_publisher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmq_publisher.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Tpo -c -o zmq/libbitcoin_zmq_a-zmq_publisher.o `test -f 'zmq/zmq_publisher.cpp' || echo '$(srcdir)/'`zmq/zmq_publisher.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Po
#	$(AM_V_CXX)source='zmq/zmq_publisher.cpp' object='zmq/libbitcoin_zmq_a-zmq_publisher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmq_publisher.o `test -f 'zmq/zmq_publisher.cpp' || echo '$(srcdir)/'`zmq/zmq_publisher.cpp

zmq/libbitcoin_zmq_a-zmq_publisher.obj: zmq/zmq_publisher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmq_publisher.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Tpo -c -o zmq/libbitcoin_zmq_a-zmq_publisher.obj `if test -f 'zmq/zmq_publisher.cpp'; then $(CYGPATH_W) 'zmq/zmq_publisher.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmq_publisher.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Po
#	$(AM_V_CXX)source='zmq/zmq_publisher.cpp' object='zmq/libbitcoin_zmq_a-zmq_publisher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmq_publisher.obj `if test -f 'zmq/zmq_publisher.cpp'; then $(CYGPATH_W) 'zmq/zmq_publisher.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmq_publisher.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqabstractnotifier.o: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqabstractnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqabstractnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp

zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqnotificationinterface.o: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqnotificationinterface.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitcoin_zmq_a-zmqnotificationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp

zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`

zmq/libbitcoin_zmq_a-zmqpublishnotifier.o: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqpublishnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqpublishnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp

zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -MT zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoin_zmq_a_CPPFLAGS) $(CPPFLAGS) $(libbitcoin_zmq_a_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libbitcoin_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`

crypto/libbitcoinconsensus_la-aes.lo: crypto/aes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-aes.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Tpo -c -o crypto/libbitcoinconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Plo
#	$(AM_V_CXX)source='crypto/aes.cpp' object='crypto/libbitcoinconsensus_la-aes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-aes.lo `test -f 'crypto/aes.cpp' || echo '$(srcdir)/'`crypto/aes.cpp

crypto/libbitcoinconsensus_la-chacha20.lo: crypto/chacha20.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-chacha20.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Tpo -c -o crypto/libbitcoinconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Plo
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/libbitcoinconsensus_la-chacha20.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-chacha20.lo `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/libbitcoinconsensus_la-hmac_sha256.lo: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-hmac_sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Tpo -c -o crypto/libbitcoinconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/libbitcoinconsensus_la-hmac_sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-hmac_sha256.lo `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/libbitcoinconsensus_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Tpo -c -o crypto/libbitcoinconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libbitcoinconsensus_la-hmac_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libbitcoinconsensus_la-ripemd160.lo: crypto/ripemd160.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Tpo -c -o crypto/libbitcoinconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Plo
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libbitcoinconsensus_la-ripemd160.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libbitcoinconsensus_la-sha1.lo: crypto/sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Tpo -c -o crypto/libbitcoinconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Plo
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libbitcoinconsensus_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libbitcoinconsensus_la-sha256.lo: crypto/sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Tpo -c -o crypto/libbitcoinconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Plo
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libbitcoinconsensus_la-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libbitcoinconsensus_la-sha512.lo: crypto/sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Tpo -c -o crypto/libbitcoinconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Plo
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libbitcoinconsensus_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/libbitcoinconsensus_la-sha256_sse4.lo: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT crypto/libbitcoinconsensus_la-sha256_sse4.lo -MD -MP -MF crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Tpo -c -o crypto/libbitcoinconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Tpo crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Plo
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/libbitcoinconsensus_la-sha256_sse4.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libbitcoinconsensus_la-sha256_sse4.lo `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

libbitcoinconsensus_la-arith_uint256.lo: arith_uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-arith_uint256.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Tpo -c -o libbitcoinconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Tpo $(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Plo
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libbitcoinconsensus_la-arith_uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-arith_uint256.lo `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libbitcoinconsensus_la-big_int.lo: big_int.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-big_int.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-big_int.Tpo -c -o libbitcoinconsensus_la-big_int.lo `test -f 'big_int.cpp' || echo '$(srcdir)/'`big_int.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-big_int.Tpo $(DEPDIR)/libbitcoinconsensus_la-big_int.Plo
#	$(AM_V_CXX)source='big_int.cpp' object='libbitcoinconsensus_la-big_int.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-big_int.lo `test -f 'big_int.cpp' || echo '$(srcdir)/'`big_int.cpp

libbitcoinconsensus_la-cfile_util.lo: cfile_util.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-cfile_util.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-cfile_util.Tpo -c -o libbitcoinconsensus_la-cfile_util.lo `test -f 'cfile_util.cpp' || echo '$(srcdir)/'`cfile_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-cfile_util.Tpo $(DEPDIR)/libbitcoinconsensus_la-cfile_util.Plo
#	$(AM_V_CXX)source='cfile_util.cpp' object='libbitcoinconsensus_la-cfile_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-cfile_util.lo `test -f 'cfile_util.cpp' || echo '$(srcdir)/'`cfile_util.cpp

consensus/libbitcoinconsensus_la-merkle.lo: consensus/merkle.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT consensus/libbitcoinconsensus_la-merkle.lo -MD -MP -MF consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Tpo -c -o consensus/libbitcoinconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Tpo consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Plo
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libbitcoinconsensus_la-merkle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libbitcoinconsensus_la-merkle.lo `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

libbitcoinconsensus_la-hash.lo: hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-hash.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-hash.Tpo -c -o libbitcoinconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-hash.Tpo $(DEPDIR)/libbitcoinconsensus_la-hash.Plo
#	$(AM_V_CXX)source='hash.cpp' object='libbitcoinconsensus_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

primitives/libbitcoinconsensus_la-block.lo: primitives/block.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoinconsensus_la-block.lo -MD -MP -MF primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Tpo -c -o primitives/libbitcoinconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Tpo primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Plo
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libbitcoinconsensus_la-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoinconsensus_la-block.lo `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libbitcoinconsensus_la-transaction.lo: primitives/transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT primitives/libbitcoinconsensus_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Tpo -c -o primitives/libbitcoinconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Tpo primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Plo
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libbitcoinconsensus_la-transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libbitcoinconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

libbitcoinconsensus_la-pubkey.lo: pubkey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-pubkey.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-pubkey.Tpo -c -o libbitcoinconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-pubkey.Tpo $(DEPDIR)/libbitcoinconsensus_la-pubkey.Plo
#	$(AM_V_CXX)source='pubkey.cpp' object='libbitcoinconsensus_la-pubkey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

script/libbitcoinconsensus_la-bitcoinconsensus.lo: script/bitcoinconsensus.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-bitcoinconsensus.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Tpo -c -o script/libbitcoinconsensus_la-bitcoinconsensus.lo `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Plo
#	$(AM_V_CXX)source='script/bitcoinconsensus.cpp' object='script/libbitcoinconsensus_la-bitcoinconsensus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-bitcoinconsensus.lo `test -f 'script/bitcoinconsensus.cpp' || echo '$(srcdir)/'`script/bitcoinconsensus.cpp

script/libbitcoinconsensus_la-interpreter.lo: script/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Tpo -c -o script/libbitcoinconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Plo
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libbitcoinconsensus_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libbitcoinconsensus_la-limitedstack.lo: script/limitedstack.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-limitedstack.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-limitedstack.Tpo -c -o script/libbitcoinconsensus_la-limitedstack.lo `test -f 'script/limitedstack.cpp' || echo '$(srcdir)/'`script/limitedstack.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-limitedstack.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-limitedstack.Plo
#	$(AM_V_CXX)source='script/limitedstack.cpp' object='script/libbitcoinconsensus_la-limitedstack.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-limitedstack.lo `test -f 'script/limitedstack.cpp' || echo '$(srcdir)/'`script/limitedstack.cpp

script/libbitcoinconsensus_la-opcodes.lo: script/opcodes.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-opcodes.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-opcodes.Tpo -c -o script/libbitcoinconsensus_la-opcodes.lo `test -f 'script/opcodes.cpp' || echo '$(srcdir)/'`script/opcodes.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-opcodes.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-opcodes.Plo
#	$(AM_V_CXX)source='script/opcodes.cpp' object='script/libbitcoinconsensus_la-opcodes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-opcodes.lo `test -f 'script/opcodes.cpp' || echo '$(srcdir)/'`script/opcodes.cpp

script/libbitcoinconsensus_la-script.lo: script/script.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-script.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-script.Tpo -c -o script/libbitcoinconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-script.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-script.Plo
#	$(AM_V_CXX)source='script/script.cpp' object='script/libbitcoinconsensus_la-script.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libbitcoinconsensus_la-script_num.lo: script/script_num.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-script_num.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-script_num.Tpo -c -o script/libbitcoinconsensus_la-script_num.lo `test -f 'script/script_num.cpp' || echo '$(srcdir)/'`script/script_num.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-script_num.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-script_num.Plo
#	$(AM_V_CXX)source='script/script_num.cpp' object='script/libbitcoinconsensus_la-script_num.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-script_num.lo `test -f 'script/script_num.cpp' || echo '$(srcdir)/'`script/script_num.cpp

script/libbitcoinconsensus_la-script_error.lo: script/script_error.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT script/libbitcoinconsensus_la-script_error.lo -MD -MP -MF script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Tpo -c -o script/libbitcoinconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Tpo script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Plo
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libbitcoinconsensus_la-script_error.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o script/libbitcoinconsensus_la-script_error.lo `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

libbitcoinconsensus_la-taskcancellation.lo: taskcancellation.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-taskcancellation.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-taskcancellation.Tpo -c -o libbitcoinconsensus_la-taskcancellation.lo `test -f 'taskcancellation.cpp' || echo '$(srcdir)/'`taskcancellation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-taskcancellation.Tpo $(DEPDIR)/libbitcoinconsensus_la-taskcancellation.Plo
#	$(AM_V_CXX)source='taskcancellation.cpp' object='libbitcoinconsensus_la-taskcancellation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-taskcancellation.lo `test -f 'taskcancellation.cpp' || echo '$(srcdir)/'`taskcancellation.cpp

libbitcoinconsensus_la-utilstrencodings.lo: utilstrencodings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT libbitcoinconsensus_la-utilstrencodings.lo -MD -MP -MF $(DEPDIR)/libbitcoinconsensus_la-utilstrencodings.Tpo -c -o libbitcoinconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libbitcoinconsensus_la-utilstrencodings.Tpo $(DEPDIR)/libbitcoinconsensus_la-utilstrencodings.Plo
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libbitcoinconsensus_la-utilstrencodings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o libbitcoinconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

compat/libbitcoinconsensus_la-glibc_compat.lo: compat/glibc_compat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -MT compat/libbitcoinconsensus_la-glibc_compat.lo -MD -MP -MF compat/$(DEPDIR)/libbitcoinconsensus_la-glibc_compat.Tpo -c -o compat/libbitcoinconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libbitcoinconsensus_la-glibc_compat.Tpo compat/$(DEPDIR)/libbitcoinconsensus_la-glibc_compat.Plo
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libbitcoinconsensus_la-glibc_compat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libbitcoinconsensus_la_CPPFLAGS) $(CPPFLAGS) $(libbitcoinconsensus_la_CXXFLAGS) $(CXXFLAGS) -c -o compat/libbitcoinconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

bench/bench_bitcoin-bench_bitcoin.o: bench/bench_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-bench_bitcoin.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Tpo -c -o bench/bench_bitcoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Po
#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bitcoin-bench_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp

bench/bench_bitcoin-bench_bitcoin.obj: bench/bench_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-bench_bitcoin.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Tpo -c -o bench/bench_bitcoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Po
#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bitcoin-bench_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`

bench/bench_bitcoin-bench.o: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-bench.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-bench.Tpo -c -o bench/bench_bitcoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-bench.Tpo bench/$(DEPDIR)/bench_bitcoin-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bitcoin-bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp

bench/bench_bitcoin-bench.obj: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-bench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-bench.Tpo -c -o bench/bench_bitcoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-bench.Tpo bench/$(DEPDIR)/bench_bitcoin-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bitcoin-bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`

bench/bench_bitcoin-checkblock.o: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-checkblock.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-checkblock.Tpo -c -o bench/bench_bitcoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-checkblock.Tpo bench/$(DEPDIR)/bench_bitcoin-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bitcoin-checkblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp

bench/bench_bitcoin-checkblock.obj: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-checkblock.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-checkblock.Tpo -c -o bench/bench_bitcoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-checkblock.Tpo bench/$(DEPDIR)/bench_bitcoin-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bitcoin-checkblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`

bench/bench_bitcoin-checkqueue.o: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-checkqueue.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-checkqueue.Tpo -c -o bench/bench_bitcoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bitcoin-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bitcoin-checkqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp

bench/bench_bitcoin-checkqueue.obj: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-checkqueue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-checkqueue.Tpo -c -o bench/bench_bitcoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bitcoin-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bitcoin-checkqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`

bench/bench_bitcoin-Examples.o: bench/Examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-Examples.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-Examples.Tpo -c -o bench/bench_bitcoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-Examples.Tpo bench/$(DEPDIR)/bench_bitcoin-Examples.Po
#	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bitcoin-Examples.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp

bench/bench_bitcoin-Examples.obj: bench/Examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-Examples.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-Examples.Tpo -c -o bench/bench_bitcoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-Examples.Tpo bench/$(DEPDIR)/bench_bitcoin-Examples.Po
#	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bitcoin-Examples.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`

bench/bench_bitcoin-rollingbloom.o: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-rollingbloom.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Tpo -c -o bench/bench_bitcoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bitcoin-rollingbloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp

bench/bench_bitcoin-rollingbloom.obj: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-rollingbloom.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Tpo -c -o bench/bench_bitcoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bitcoin-rollingbloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`

bench/bench_bitcoin-crypto_hash.o: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-crypto_hash.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Tpo -c -o bench/bench_bitcoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bitcoin-crypto_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp

bench/bench_bitcoin-crypto_hash.obj: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-crypto_hash.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Tpo -c -o bench/bench_bitcoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bitcoin-crypto_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`

bench/bench_bitcoin-ccoins_caching.o: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-ccoins_caching.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Tpo -c -o bench/bench_bitcoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bitcoin-ccoins_caching.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp

bench/bench_bitcoin-ccoins_caching.obj: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-ccoins_caching.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Tpo -c -o bench/bench_bitcoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bitcoin-ccoins_caching.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`

bench/bench_bitcoin-mempool_eviction.o: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-mempool_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Tpo -c -o bench/bench_bitcoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bitcoin-mempool_eviction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp

bench/bench_bitcoin-mempool_eviction.obj: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-mempool_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Tpo -c -o bench/bench_bitcoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bitcoin-mempool_eviction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`

bench/bench_bitcoin-mempooltxdb.o: bench/mempooltxdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-mempooltxdb.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Tpo -c -o bench/bench_bitcoin-mempooltxdb.o `test -f 'bench/mempooltxdb.cpp' || echo '$(srcdir)/'`bench/mempooltxdb.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Tpo bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Po
#	$(AM_V_CXX)source='bench/mempooltxdb.cpp' object='bench/bench_bitcoin-mempooltxdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-mempooltxdb.o `test -f 'bench/mempooltxdb.cpp' || echo '$(srcdir)/'`bench/mempooltxdb.cpp

bench/bench_bitcoin-mempooltxdb.obj: bench/mempooltxdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-mempooltxdb.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Tpo -c -o bench/bench_bitcoin-mempooltxdb.obj `if test -f 'bench/mempooltxdb.cpp'; then $(CYGPATH_W) 'bench/mempooltxdb.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempooltxdb.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Tpo bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Po
#	$(AM_V_CXX)source='bench/mempooltxdb.cpp' object='bench/bench_bitcoin-mempooltxdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-mempooltxdb.obj `if test -f 'bench/mempooltxdb.cpp'; then $(CYGPATH_W) 'bench/mempooltxdb.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempooltxdb.cpp'; fi`

bench/bench_bitcoin-base58.o: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-base58.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-base58.Tpo -c -o bench/bench_bitcoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-base58.Tpo bench/$(DEPDIR)/bench_bitcoin-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bitcoin-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp

bench/bench_bitcoin-base58.obj: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-base58.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-base58.Tpo -c -o bench/bench_bitcoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-base58.Tpo bench/$(DEPDIR)/bench_bitcoin-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bitcoin-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`

bench/bench_bitcoin-lockedpool.o: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-lockedpool.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-lockedpool.Tpo -c -o bench/bench_bitcoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bitcoin-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bitcoin-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp

bench/bench_bitcoin-lockedpool.obj: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-lockedpool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-lockedpool.Tpo -c -o bench/bench_bitcoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bitcoin-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bitcoin-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`

bench/bench_bitcoin-perf.o: bench/perf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-perf.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-perf.Tpo -c -o bench/bench_bitcoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-perf.Tpo bench/$(DEPDIR)/bench_bitcoin-perf.Po
#	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bitcoin-perf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp

bench/bench_bitcoin-perf.obj: bench/perf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-perf.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-perf.Tpo -c -o bench/bench_bitcoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-perf.Tpo bench/$(DEPDIR)/bench_bitcoin-perf.Po
#	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bitcoin-perf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`

bench/bench_bitcoin-cscript.o: bench/cscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-cscript.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-cscript.Tpo -c -o bench/bench_bitcoin-cscript.o `test -f 'bench/cscript.cpp' || echo '$(srcdir)/'`bench/cscript.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-cscript.Tpo bench/$(DEPDIR)/bench_bitcoin-cscript.Po
#	$(AM_V_CXX)source='bench/cscript.cpp' object='bench/bench_bitcoin-cscript.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-cscript.o `test -f 'bench/cscript.cpp' || echo '$(srcdir)/'`bench/cscript.cpp

bench/bench_bitcoin-cscript.obj: bench/cscript.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-cscript.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-cscript.Tpo -c -o bench/bench_bitcoin-cscript.obj `if test -f 'bench/cscript.cpp'; then $(CYGPATH_W) 'bench/cscript.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/cscript.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-cscript.Tpo bench/$(DEPDIR)/bench_bitcoin-cscript.Po
#	$(AM_V_CXX)source='bench/cscript.cpp' object='bench/bench_bitcoin-cscript.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-cscript.obj `if test -f 'bench/cscript.cpp'; then $(CYGPATH_W) 'bench/cscript.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/cscript.cpp'; fi`

bench/bench_bitcoin-interpreter.o: bench/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-interpreter.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-interpreter.Tpo -c -o bench/bench_bitcoin-interpreter.o `test -f 'bench/interpreter.cpp' || echo '$(srcdir)/'`bench/interpreter.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-interpreter.Tpo bench/$(DEPDIR)/bench_bitcoin-interpreter.Po
#	$(AM_V_CXX)source='bench/interpreter.cpp' object='bench/bench_bitcoin-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-interpreter.o `test -f 'bench/interpreter.cpp' || echo '$(srcdir)/'`bench/interpreter.cpp

bench/bench_bitcoin-interpreter.obj: bench/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-interpreter.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-interpreter.Tpo -c -o bench/bench_bitcoin-interpreter.obj `if test -f 'bench/interpreter.cpp'; then $(CYGPATH_W) 'bench/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-interpreter.Tpo bench/$(DEPDIR)/bench_bitcoin-interpreter.Po
#	$(AM_V_CXX)source='bench/interpreter.cpp' object='bench/bench_bitcoin-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-interpreter.obj `if test -f 'bench/interpreter.cpp'; then $(CYGPATH_W) 'bench/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/interpreter.cpp'; fi`

bench/bench_bitcoin-serialisation.o: bench/serialisation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-serialisation.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-serialisation.Tpo -c -o bench/bench_bitcoin-serialisation.o `test -f 'bench/serialisation.cpp' || echo '$(srcdir)/'`bench/serialisation.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-serialisation.Tpo bench/$(DEPDIR)/bench_bitcoin-serialisation.Po
#	$(AM_V_CXX)source='bench/serialisation.cpp' object='bench/bench_bitcoin-serialisation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-serialisation.o `test -f 'bench/serialisation.cpp' || echo '$(srcdir)/'`bench/serialisation.cpp

bench/bench_bitcoin-serialisation.obj: bench/serialisation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-serialisation.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-serialisation.Tpo -c -o bench/bench_bitcoin-serialisation.obj `if test -f 'bench/serialisation.cpp'; then $(CYGPATH_W) 'bench/serialisation.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/serialisation.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-serialisation.Tpo bench/$(DEPDIR)/bench_bitcoin-serialisation.Po
#	$(AM_V_CXX)source='bench/serialisation.cpp' object='bench/bench_bitcoin-serialisation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-serialisation.obj `if test -f 'bench/serialisation.cpp'; then $(CYGPATH_W) 'bench/serialisation.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/serialisation.cpp'; fi`

bench/bench_bitcoin-thread_safe_queue.o: bench/thread_safe_queue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-thread_safe_queue.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Tpo -c -o bench/bench_bitcoin-thread_safe_queue.o `test -f 'bench/thread_safe_queue.cpp' || echo '$(srcdir)/'`bench/thread_safe_queue.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Tpo bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Po
#	$(AM_V_CXX)source='bench/thread_safe_queue.cpp' object='bench/bench_bitcoin-thread_safe_queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-thread_safe_queue.o `test -f 'bench/thread_safe_queue.cpp' || echo '$(srcdir)/'`bench/thread_safe_queue.cpp

bench/bench_bitcoin-thread_safe_queue.obj: bench/thread_safe_queue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-thread_safe_queue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Tpo -c -o bench/bench_bitcoin-thread_safe_queue.obj `if test -f 'bench/thread_safe_queue.cpp'; then $(CYGPATH_W) 'bench/thread_safe_queue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/thread_safe_queue.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Tpo bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Po
#	$(AM_V_CXX)source='bench/thread_safe_queue.cpp' object='bench/bench_bitcoin-thread_safe_queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-thread_safe_queue.obj `if test -f 'bench/thread_safe_queue.cpp'; then $(CYGPATH_W) 'bench/thread_safe_queue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/thread_safe_queue.cpp'; fi`

bench/bench_bitcoin-coin_selection.o: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-coin_selection.o -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-coin_selection.Tpo -c -o bench/bench_bitcoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bitcoin-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bitcoin-coin_selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp

bench/bench_bitcoin-coin_selection.obj: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bitcoin-coin_selection.obj -MD -MP -MF bench/$(DEPDIR)/bench_bitcoin-coin_selection.Tpo -c -o bench/bench_bitcoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bitcoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bitcoin-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bitcoin-coin_selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bitcoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`

bitcoin_cli-bitcoin-cli.o: bitcoin-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_cli-bitcoin-cli.o -MD -MP -MF $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo -c -o bitcoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo $(DEPDIR)/bitcoin_cli-bitcoin-cli.Po
#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='bitcoin_cli-bitcoin-cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp

bitcoin_cli-bitcoin-cli.obj: bitcoin-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_cli-bitcoin-cli.obj -MD -MP -MF $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo -c -o bitcoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_cli-bitcoin-cli.Tpo $(DEPDIR)/bitcoin_cli-bitcoin-cli.Po
#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='bitcoin_cli-bitcoin-cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_cli_CPPFLAGS) $(CPPFLAGS) $(bitcoin_cli_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`

bitcoin_miner-bitcoin-miner.o: bitcoin-miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_miner-bitcoin-miner.o -MD -MP -MF $(DEPDIR)/bitcoin_miner-bitcoin-miner.Tpo -c -o bitcoin_miner-bitcoin-miner.o `test -f 'bitcoin-miner.cpp' || echo '$(srcdir)/'`bitcoin-miner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_miner-bitcoin-miner.Tpo $(DEPDIR)/bitcoin_miner-bitcoin-miner.Po
#	$(AM_V_CXX)source='bitcoin-miner.cpp' object='bitcoin_miner-bitcoin-miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_miner-bitcoin-miner.o `test -f 'bitcoin-miner.cpp' || echo '$(srcdir)/'`bitcoin-miner.cpp

bitcoin_miner-bitcoin-miner.obj: bitcoin-miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_miner-bitcoin-miner.obj -MD -MP -MF $(DEPDIR)/bitcoin_miner-bitcoin-miner.Tpo -c -o bitcoin_miner-bitcoin-miner.obj `if test -f 'bitcoin-miner.cpp'; then $(CYGPATH_W) 'bitcoin-miner.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-miner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_miner-bitcoin-miner.Tpo $(DEPDIR)/bitcoin_miner-bitcoin-miner.Po
#	$(AM_V_CXX)source='bitcoin-miner.cpp' object='bitcoin_miner-bitcoin-miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_miner-bitcoin-miner.obj `if test -f 'bitcoin-miner.cpp'; then $(CYGPATH_W) 'bitcoin-miner.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-miner.cpp'; fi`

bitcoin_miner-arith_uint256.o: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_miner-arith_uint256.o -MD -MP -MF $(DEPDIR)/bitcoin_miner-arith_uint256.Tpo -c -o bitcoin_miner-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_miner-arith_uint256.Tpo $(DEPDIR)/bitcoin_miner-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='bitcoin_miner-arith_uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_miner-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

bitcoin_miner-arith_uint256.obj: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_miner-arith_uint256.obj -MD -MP -MF $(DEPDIR)/bitcoin_miner-arith_uint256.Tpo -c -o bitcoin_miner-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_miner-arith_uint256.Tpo $(DEPDIR)/bitcoin_miner-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='bitcoin_miner-arith_uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_miner-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`

crypto/bitcoin_miner-sha512.o: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT crypto/bitcoin_miner-sha512.o -MD -MP -MF crypto/$(DEPDIR)/bitcoin_miner-sha512.Tpo -c -o crypto/bitcoin_miner-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/bitcoin_miner-sha512.Tpo crypto/$(DEPDIR)/bitcoin_miner-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/bitcoin_miner-sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o crypto/bitcoin_miner-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/bitcoin_miner-sha512.obj: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT crypto/bitcoin_miner-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/bitcoin_miner-sha512.Tpo -c -o crypto/bitcoin_miner-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/bitcoin_miner-sha512.Tpo crypto/$(DEPDIR)/bitcoin_miner-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/bitcoin_miner-sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o crypto/bitcoin_miner-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

crypto/bitcoin_miner-chacha20.o: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT crypto/bitcoin_miner-chacha20.o -MD -MP -MF crypto/$(DEPDIR)/bitcoin_miner-chacha20.Tpo -c -o crypto/bitcoin_miner-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/bitcoin_miner-chacha20.Tpo crypto/$(DEPDIR)/bitcoin_miner-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/bitcoin_miner-chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o crypto/bitcoin_miner-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/bitcoin_miner-chacha20.obj: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -MT crypto/bitcoin_miner-chacha20.obj -MD -MP -MF crypto/$(DEPDIR)/bitcoin_miner-chacha20.Tpo -c -o crypto/bitcoin_miner-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/bitcoin_miner-chacha20.Tpo crypto/$(DEPDIR)/bitcoin_miner-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/bitcoin_miner-chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_miner_CPPFLAGS) $(CPPFLAGS) $(bitcoin_miner_CXXFLAGS) $(CXXFLAGS) -c -o crypto/bitcoin_miner-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`

bitcoin_tx-bitcoin-tx.o: bitcoin-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_tx-bitcoin-tx.o -MD -MP -MF $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo -c -o bitcoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo $(DEPDIR)/bitcoin_tx-bitcoin-tx.Po
#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='bitcoin_tx-bitcoin-tx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp

bitcoin_tx-bitcoin-tx.obj: bitcoin-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -MT bitcoin_tx-bitcoin-tx.obj -MD -MP -MF $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo -c -o bitcoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoin_tx-bitcoin-tx.Tpo $(DEPDIR)/bitcoin_tx-bitcoin-tx.Po
#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='bitcoin_tx-bitcoin-tx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoin_tx_CPPFLAGS) $(CPPFLAGS) $(bitcoin_tx_CXXFLAGS) $(CXXFLAGS) -c -o bitcoin_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`

bitcoind-bitcoind.o: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -MT bitcoind-bitcoind.o -MD -MP -MF $(DEPDIR)/bitcoind-bitcoind.Tpo -c -o bitcoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoind-bitcoind.Tpo $(DEPDIR)/bitcoind-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='bitcoind-bitcoind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -c -o bitcoind-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp

bitcoind-bitcoind.obj: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -MT bitcoind-bitcoind.obj -MD -MP -MF $(DEPDIR)/bitcoind-bitcoind.Tpo -c -o bitcoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bitcoind-bitcoind.Tpo $(DEPDIR)/bitcoind-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='bitcoind-bitcoind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bitcoind_CPPFLAGS) $(CPPFLAGS) $(bitcoind_CXXFLAGS) $(CXXFLAGS) -c -o bitcoind-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`

test/test_bitcoin-alertnotify_tests.o: test/alertnotify_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-alertnotify_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Tpo -c -o test/test_bitcoin-alertnotify_tests.o `test -f 'test/alertnotify_tests.cpp' || echo '$(srcdir)/'`test/alertnotify_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Tpo test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Po
#	$(AM_V_CXX)source='test/alertnotify_tests.cpp' object='test/test_bitcoin-alertnotify_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-alertnotify_tests.o `test -f 'test/alertnotify_tests.cpp' || echo '$(srcdir)/'`test/alertnotify_tests.cpp

test/test_bitcoin-alertnotify_tests.obj: test/alertnotify_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-alertnotify_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Tpo -c -o test/test_bitcoin-alertnotify_tests.obj `if test -f 'test/alertnotify_tests.cpp'; then $(CYGPATH_W) 'test/alertnotify_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/alertnotify_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Tpo test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Po
#	$(AM_V_CXX)source='test/alertnotify_tests.cpp' object='test/test_bitcoin-alertnotify_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-alertnotify_tests.obj `if test -f 'test/alertnotify_tests.cpp'; then $(CYGPATH_W) 'test/alertnotify_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/alertnotify_tests.cpp'; fi`

test/test_bitcoin-arith_uint256_tests.o: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-arith_uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Tpo -c -o test/test_bitcoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_bitcoin-arith_uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp

test/test_bitcoin-arith_uint256_tests.obj: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-arith_uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Tpo -c -o test/test_bitcoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_bitcoin-arith_uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`

test/test_bitcoin-addrman_tests.o: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-addrman_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-addrman_tests.Tpo -c -o test/test_bitcoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-addrman_tests.Tpo test/$(DEPDIR)/test_bitcoin-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_bitcoin-addrman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp

test/test_bitcoin-addrman_tests.obj: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-addrman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-addrman_tests.Tpo -c -o test/test_bitcoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-addrman_tests.Tpo test/$(DEPDIR)/test_bitcoin-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_bitcoin-addrman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`

test/test_bitcoin-amount_tests.o: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-amount_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-amount_tests.Tpo -c -o test/test_bitcoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-amount_tests.Tpo test/$(DEPDIR)/test_bitcoin-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_bitcoin-amount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-amount_tests.o `test -f 'test/amount_tests.cpp' || echo '$(srcdir)/'`test/amount_tests.cpp

test/test_bitcoin-amount_tests.obj: test/amount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-amount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-amount_tests.Tpo -c -o test/test_bitcoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-amount_tests.Tpo test/$(DEPDIR)/test_bitcoin-amount_tests.Po
#	$(AM_V_CXX)source='test/amount_tests.cpp' object='test/test_bitcoin-amount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-amount_tests.obj `if test -f 'test/amount_tests.cpp'; then $(CYGPATH_W) 'test/amount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/amount_tests.cpp'; fi`

test/test_bitcoin-allocator_tests.o: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-allocator_tests.Tpo -c -o test/test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_bitcoin-allocator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp

test/test_bitcoin-allocator_tests.obj: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-allocator_tests.Tpo -c -o test/test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_bitcoin-allocator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`

test/test_bitcoin-array_parser_tests.o: test/array_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-array_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-array_parser_tests.Tpo -c -o test/test_bitcoin-array_parser_tests.o `test -f 'test/array_parser_tests.cpp' || echo '$(srcdir)/'`test/array_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-array_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-array_parser_tests.Po
#	$(AM_V_CXX)source='test/array_parser_tests.cpp' object='test/test_bitcoin-array_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-array_parser_tests.o `test -f 'test/array_parser_tests.cpp' || echo '$(srcdir)/'`test/array_parser_tests.cpp

test/test_bitcoin-array_parser_tests.obj: test/array_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-array_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-array_parser_tests.Tpo -c -o test/test_bitcoin-array_parser_tests.obj `if test -f 'test/array_parser_tests.cpp'; then $(CYGPATH_W) 'test/array_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/array_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-array_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-array_parser_tests.Po
#	$(AM_V_CXX)source='test/array_parser_tests.cpp' object='test/test_bitcoin-array_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-array_parser_tests.obj `if test -f 'test/array_parser_tests.cpp'; then $(CYGPATH_W) 'test/array_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/array_parser_tests.cpp'; fi`

test/test_bitcoin-base32_tests.o: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-base32_tests.Tpo -c -o test/test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_bitcoin-base32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp

test/test_bitcoin-base32_tests.obj: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-base32_tests.Tpo -c -o test/test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_bitcoin-base32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`

test/test_bitcoin-base58_tests.o: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-base58_tests.Tpo -c -o test/test_bitcoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-base58_tests.Tpo test/$(DEPDIR)/test_bitcoin-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_bitcoin-base58_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp

test/test_bitcoin-base58_tests.obj: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-base58_tests.Tpo -c -o test/test_bitcoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-base58_tests.Tpo test/$(DEPDIR)/test_bitcoin-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_bitcoin-base58_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`

test/test_bitcoin-base64_tests.o: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-base64_tests.Tpo -c -o test/test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_bitcoin-base64_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp

test/test_bitcoin-base64_tests.obj: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-base64_tests.Tpo -c -o test/test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_bitcoin-base64_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`

test/test_bitcoin-bip32_tests.o: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bip32_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bip32_tests.Tpo -c -o test/test_bitcoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bip32_tests.Tpo test/$(DEPDIR)/test_bitcoin-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_bitcoin-bip32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp

test/test_bitcoin-bip32_tests.obj: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bip32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bip32_tests.Tpo -c -o test/test_bitcoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bip32_tests.Tpo test/$(DEPDIR)/test_bitcoin-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_bitcoin-bip32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`

test/test_bitcoin-big_int_tests.o: test/big_int_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-big_int_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-big_int_tests.Tpo -c -o test/test_bitcoin-big_int_tests.o `test -f 'test/big_int_tests.cpp' || echo '$(srcdir)/'`test/big_int_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-big_int_tests.Tpo test/$(DEPDIR)/test_bitcoin-big_int_tests.Po
#	$(AM_V_CXX)source='test/big_int_tests.cpp' object='test/test_bitcoin-big_int_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-big_int_tests.o `test -f 'test/big_int_tests.cpp' || echo '$(srcdir)/'`test/big_int_tests.cpp

test/test_bitcoin-big_int_tests.obj: test/big_int_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-big_int_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-big_int_tests.Tpo -c -o test/test_bitcoin-big_int_tests.obj `if test -f 'test/big_int_tests.cpp'; then $(CYGPATH_W) 'test/big_int_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/big_int_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-big_int_tests.Tpo test/$(DEPDIR)/test_bitcoin-big_int_tests.Po
#	$(AM_V_CXX)source='test/big_int_tests.cpp' object='test/test_bitcoin-big_int_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-big_int_tests.obj `if test -f 'test/big_int_tests.cpp'; then $(CYGPATH_W) 'test/big_int_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/big_int_tests.cpp'; fi`

test/test_bitcoin-blockcheck_tests.o: test/blockcheck_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockcheck_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Tpo -c -o test/test_bitcoin-blockcheck_tests.o `test -f 'test/blockcheck_tests.cpp' || echo '$(srcdir)/'`test/blockcheck_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Po
#	$(AM_V_CXX)source='test/blockcheck_tests.cpp' object='test/test_bitcoin-blockcheck_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockcheck_tests.o `test -f 'test/blockcheck_tests.cpp' || echo '$(srcdir)/'`test/blockcheck_tests.cpp

test/test_bitcoin-blockcheck_tests.obj: test/blockcheck_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockcheck_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Tpo -c -o test/test_bitcoin-blockcheck_tests.obj `if test -f 'test/blockcheck_tests.cpp'; then $(CYGPATH_W) 'test/blockcheck_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockcheck_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Po
#	$(AM_V_CXX)source='test/blockcheck_tests.cpp' object='test/test_bitcoin-blockcheck_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockcheck_tests.obj `if test -f 'test/blockcheck_tests.cpp'; then $(CYGPATH_W) 'test/blockcheck_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockcheck_tests.cpp'; fi`

test/test_bitcoin-block_download_tracking_tests.o: test/block_download_tracking_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_download_tracking_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Tpo -c -o test/test_bitcoin-block_download_tracking_tests.o `test -f 'test/block_download_tracking_tests.cpp' || echo '$(srcdir)/'`test/block_download_tracking_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Po
#	$(AM_V_CXX)source='test/block_download_tracking_tests.cpp' object='test/test_bitcoin-block_download_tracking_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_download_tracking_tests.o `test -f 'test/block_download_tracking_tests.cpp' || echo '$(srcdir)/'`test/block_download_tracking_tests.cpp

test/test_bitcoin-block_download_tracking_tests.obj: test/block_download_tracking_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_download_tracking_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Tpo -c -o test/test_bitcoin-block_download_tracking_tests.obj `if test -f 'test/block_download_tracking_tests.cpp'; then $(CYGPATH_W) 'test/block_download_tracking_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_download_tracking_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Po
#	$(AM_V_CXX)source='test/block_download_tracking_tests.cpp' object='test/test_bitcoin-block_download_tracking_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_download_tracking_tests.obj `if test -f 'test/block_download_tracking_tests.cpp'; then $(CYGPATH_W) 'test/block_download_tracking_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_download_tracking_tests.cpp'; fi`

test/test_bitcoin-blockencodings_tests.o: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockencodings_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Tpo -c -o test/test_bitcoin-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_bitcoin-blockencodings_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockencodings_tests.o `test -f 'test/blockencodings_tests.cpp' || echo '$(srcdir)/'`test/blockencodings_tests.cpp

test/test_bitcoin-blockencodings_tests.obj: test/blockencodings_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockencodings_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Tpo -c -o test/test_bitcoin-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Po
#	$(AM_V_CXX)source='test/blockencodings_tests.cpp' object='test/test_bitcoin-blockencodings_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockencodings_tests.obj `if test -f 'test/blockencodings_tests.cpp'; then $(CYGPATH_W) 'test/blockencodings_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockencodings_tests.cpp'; fi`

test/test_bitcoin-blockfile_reading_tests.o: test/blockfile_reading_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockfile_reading_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Tpo -c -o test/test_bitcoin-blockfile_reading_tests.o `test -f 'test/blockfile_reading_tests.cpp' || echo '$(srcdir)/'`test/blockfile_reading_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Po
#	$(AM_V_CXX)source='test/blockfile_reading_tests.cpp' object='test/test_bitcoin-blockfile_reading_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockfile_reading_tests.o `test -f 'test/blockfile_reading_tests.cpp' || echo '$(srcdir)/'`test/blockfile_reading_tests.cpp

test/test_bitcoin-blockfile_reading_tests.obj: test/blockfile_reading_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockfile_reading_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Tpo -c -o test/test_bitcoin-blockfile_reading_tests.obj `if test -f 'test/blockfile_reading_tests.cpp'; then $(CYGPATH_W) 'test/blockfile_reading_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfile_reading_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Po
#	$(AM_V_CXX)source='test/blockfile_reading_tests.cpp' object='test/test_bitcoin-blockfile_reading_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockfile_reading_tests.obj `if test -f 'test/blockfile_reading_tests.cpp'; then $(CYGPATH_W) 'test/blockfile_reading_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockfile_reading_tests.cpp'; fi`

test/test_bitcoin-block_index_mutex_distribution_tests.o: test/block_index_mutex_distribution_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_index_mutex_distribution_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Tpo -c -o test/test_bitcoin-block_index_mutex_distribution_tests.o `test -f 'test/block_index_mutex_distribution_tests.cpp' || echo '$(srcdir)/'`test/block_index_mutex_distribution_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Po
#	$(AM_V_CXX)source='test/block_index_mutex_distribution_tests.cpp' object='test/test_bitcoin-block_index_mutex_distribution_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_index_mutex_distribution_tests.o `test -f 'test/block_index_mutex_distribution_tests.cpp' || echo '$(srcdir)/'`test/block_index_mutex_distribution_tests.cpp

test/test_bitcoin-block_index_mutex_distribution_tests.obj: test/block_index_mutex_distribution_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_index_mutex_distribution_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Tpo -c -o test/test_bitcoin-block_index_mutex_distribution_tests.obj `if test -f 'test/block_index_mutex_distribution_tests.cpp'; then $(CYGPATH_W) 'test/block_index_mutex_distribution_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_index_mutex_distribution_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Po
#	$(AM_V_CXX)source='test/block_index_mutex_distribution_tests.cpp' object='test/test_bitcoin-block_index_mutex_distribution_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_index_mutex_distribution_tests.obj `if test -f 'test/block_index_mutex_distribution_tests.cpp'; then $(CYGPATH_W) 'test/block_index_mutex_distribution_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_index_mutex_distribution_tests.cpp'; fi`

test/test_bitcoin-block_info_tests.o: test/block_info_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_info_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_info_tests.Tpo -c -o test/test_bitcoin-block_info_tests.o `test -f 'test/block_info_tests.cpp' || echo '$(srcdir)/'`test/block_info_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_info_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_info_tests.Po
#	$(AM_V_CXX)source='test/block_info_tests.cpp' object='test/test_bitcoin-block_info_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_info_tests.o `test -f 'test/block_info_tests.cpp' || echo '$(srcdir)/'`test/block_info_tests.cpp

test/test_bitcoin-block_info_tests.obj: test/block_info_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_info_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_info_tests.Tpo -c -o test/test_bitcoin-block_info_tests.obj `if test -f 'test/block_info_tests.cpp'; then $(CYGPATH_W) 'test/block_info_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_info_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_info_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_info_tests.Po
#	$(AM_V_CXX)source='test/block_info_tests.cpp' object='test/test_bitcoin-block_info_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_info_tests.obj `if test -f 'test/block_info_tests.cpp'; then $(CYGPATH_W) 'test/block_info_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_info_tests.cpp'; fi`

test/test_bitcoin-blockindex_with_descendants_tests.o: test/blockindex_with_descendants_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockindex_with_descendants_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Tpo -c -o test/test_bitcoin-blockindex_with_descendants_tests.o `test -f 'test/blockindex_with_descendants_tests.cpp' || echo '$(srcdir)/'`test/blockindex_with_descendants_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Po
#	$(AM_V_CXX)source='test/blockindex_with_descendants_tests.cpp' object='test/test_bitcoin-blockindex_with_descendants_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockindex_with_descendants_tests.o `test -f 'test/blockindex_with_descendants_tests.cpp' || echo '$(srcdir)/'`test/blockindex_with_descendants_tests.cpp

test/test_bitcoin-blockindex_with_descendants_tests.obj: test/blockindex_with_descendants_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockindex_with_descendants_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Tpo -c -o test/test_bitcoin-blockindex_with_descendants_tests.obj `if test -f 'test/blockindex_with_descendants_tests.cpp'; then $(CYGPATH_W) 'test/blockindex_with_descendants_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockindex_with_descendants_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Po
#	$(AM_V_CXX)source='test/blockindex_with_descendants_tests.cpp' object='test/test_bitcoin-blockindex_with_descendants_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockindex_with_descendants_tests.obj `if test -f 'test/blockindex_with_descendants_tests.cpp'; then $(CYGPATH_W) 'test/blockindex_with_descendants_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockindex_with_descendants_tests.cpp'; fi`

test/test_bitcoin-blockmaxsize_tests.o: test/blockmaxsize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockmaxsize_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Tpo -c -o test/test_bitcoin-blockmaxsize_tests.o `test -f 'test/blockmaxsize_tests.cpp' || echo '$(srcdir)/'`test/blockmaxsize_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Po
#	$(AM_V_CXX)source='test/blockmaxsize_tests.cpp' object='test/test_bitcoin-blockmaxsize_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockmaxsize_tests.o `test -f 'test/blockmaxsize_tests.cpp' || echo '$(srcdir)/'`test/blockmaxsize_tests.cpp

test/test_bitcoin-blockmaxsize_tests.obj: test/blockmaxsize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockmaxsize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Tpo -c -o test/test_bitcoin-blockmaxsize_tests.obj `if test -f 'test/blockmaxsize_tests.cpp'; then $(CYGPATH_W) 'test/blockmaxsize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockmaxsize_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Po
#	$(AM_V_CXX)source='test/blockmaxsize_tests.cpp' object='test/test_bitcoin-blockmaxsize_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockmaxsize_tests.obj `if test -f 'test/blockmaxsize_tests.cpp'; then $(CYGPATH_W) 'test/blockmaxsize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockmaxsize_tests.cpp'; fi`

test/test_bitcoin-block_parser_tests.o: test/block_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_parser_tests.Tpo -c -o test/test_bitcoin-block_parser_tests.o `test -f 'test/block_parser_tests.cpp' || echo '$(srcdir)/'`test/block_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_parser_tests.Po
#	$(AM_V_CXX)source='test/block_parser_tests.cpp' object='test/test_bitcoin-block_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_parser_tests.o `test -f 'test/block_parser_tests.cpp' || echo '$(srcdir)/'`test/block_parser_tests.cpp

test/test_bitcoin-block_parser_tests.obj: test/block_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-block_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-block_parser_tests.Tpo -c -o test/test_bitcoin-block_parser_tests.obj `if test -f 'test/block_parser_tests.cpp'; then $(CYGPATH_W) 'test/block_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-block_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-block_parser_tests.Po
#	$(AM_V_CXX)source='test/block_parser_tests.cpp' object='test/test_bitcoin-block_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-block_parser_tests.obj `if test -f 'test/block_parser_tests.cpp'; then $(CYGPATH_W) 'test/block_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/block_parser_tests.cpp'; fi`

test/test_bitcoin-blocktxn_parser_tests.o: test/blocktxn_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blocktxn_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Tpo -c -o test/test_bitcoin-blocktxn_parser_tests.o `test -f 'test/blocktxn_parser_tests.cpp' || echo '$(srcdir)/'`test/blocktxn_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Po
#	$(AM_V_CXX)source='test/blocktxn_parser_tests.cpp' object='test/test_bitcoin-blocktxn_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blocktxn_parser_tests.o `test -f 'test/blocktxn_parser_tests.cpp' || echo '$(srcdir)/'`test/blocktxn_parser_tests.cpp

test/test_bitcoin-blocktxn_parser_tests.obj: test/blocktxn_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blocktxn_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Tpo -c -o test/test_bitcoin-blocktxn_parser_tests.obj `if test -f 'test/blocktxn_parser_tests.cpp'; then $(CYGPATH_W) 'test/blocktxn_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blocktxn_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Po
#	$(AM_V_CXX)source='test/blocktxn_parser_tests.cpp' object='test/test_bitcoin-blocktxn_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blocktxn_parser_tests.obj `if test -f 'test/blocktxn_parser_tests.cpp'; then $(CYGPATH_W) 'test/blocktxn_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blocktxn_parser_tests.cpp'; fi`

test/test_bitcoin-blockstatus_tests.o: test/blockstatus_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockstatus_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Tpo -c -o test/test_bitcoin-blockstatus_tests.o `test -f 'test/blockstatus_tests.cpp' || echo '$(srcdir)/'`test/blockstatus_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Po
#	$(AM_V_CXX)source='test/blockstatus_tests.cpp' object='test/test_bitcoin-blockstatus_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockstatus_tests.o `test -f 'test/blockstatus_tests.cpp' || echo '$(srcdir)/'`test/blockstatus_tests.cpp

test/test_bitcoin-blockstatus_tests.obj: test/blockstatus_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockstatus_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Tpo -c -o test/test_bitcoin-blockstatus_tests.obj `if test -f 'test/blockstatus_tests.cpp'; then $(CYGPATH_W) 'test/blockstatus_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockstatus_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Po
#	$(AM_V_CXX)source='test/blockstatus_tests.cpp' object='test/test_bitcoin-blockstatus_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockstatus_tests.obj `if test -f 'test/blockstatus_tests.cpp'; then $(CYGPATH_W) 'test/blockstatus_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockstatus_tests.cpp'; fi`

test/test_bitcoin-blockvalidationstatus_tests.o: test/blockvalidationstatus_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockvalidationstatus_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Tpo -c -o test/test_bitcoin-blockvalidationstatus_tests.o `test -f 'test/blockvalidationstatus_tests.cpp' || echo '$(srcdir)/'`test/blockvalidationstatus_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Po
#	$(AM_V_CXX)source='test/blockvalidationstatus_tests.cpp' object='test/test_bitcoin-blockvalidationstatus_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockvalidationstatus_tests.o `test -f 'test/blockvalidationstatus_tests.cpp' || echo '$(srcdir)/'`test/blockvalidationstatus_tests.cpp

test/test_bitcoin-blockvalidationstatus_tests.obj: test/blockvalidationstatus_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-blockvalidationstatus_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Tpo -c -o test/test_bitcoin-blockvalidationstatus_tests.obj `if test -f 'test/blockvalidationstatus_tests.cpp'; then $(CYGPATH_W) 'test/blockvalidationstatus_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockvalidationstatus_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Tpo test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Po
#	$(AM_V_CXX)source='test/blockvalidationstatus_tests.cpp' object='test/test_bitcoin-blockvalidationstatus_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-blockvalidationstatus_tests.obj `if test -f 'test/blockvalidationstatus_tests.cpp'; then $(CYGPATH_W) 'test/blockvalidationstatus_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/blockvalidationstatus_tests.cpp'; fi`

test/test_bitcoin-bloom_tests.o: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bloom_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bloom_tests.Tpo -c -o test/test_bitcoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bloom_tests.Tpo test/$(DEPDIR)/test_bitcoin-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_bitcoin-bloom_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp

test/test_bitcoin-bloom_tests.obj: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bloom_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bloom_tests.Tpo -c -o test/test_bitcoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bloom_tests.Tpo test/$(DEPDIR)/test_bitcoin-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_bitcoin-bloom_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`

test/test_bitcoin-bn_op_tests.o: test/bn_op_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bn_op_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bn_op_tests.Tpo -c -o test/test_bitcoin-bn_op_tests.o `test -f 'test/bn_op_tests.cpp' || echo '$(srcdir)/'`test/bn_op_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bn_op_tests.Tpo test/$(DEPDIR)/test_bitcoin-bn_op_tests.Po
#	$(AM_V_CXX)source='test/bn_op_tests.cpp' object='test/test_bitcoin-bn_op_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bn_op_tests.o `test -f 'test/bn_op_tests.cpp' || echo '$(srcdir)/'`test/bn_op_tests.cpp

test/test_bitcoin-bn_op_tests.obj: test/bn_op_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bn_op_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bn_op_tests.Tpo -c -o test/test_bitcoin-bn_op_tests.obj `if test -f 'test/bn_op_tests.cpp'; then $(CYGPATH_W) 'test/bn_op_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bn_op_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bn_op_tests.Tpo test/$(DEPDIR)/test_bitcoin-bn_op_tests.Po
#	$(AM_V_CXX)source='test/bn_op_tests.cpp' object='test/test_bitcoin-bn_op_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bn_op_tests.obj `if test -f 'test/bn_op_tests.cpp'; then $(CYGPATH_W) 'test/bn_op_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bn_op_tests.cpp'; fi`

test/test_bitcoin-bswap_tests.o: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bswap_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bswap_tests.Tpo -c -o test/test_bitcoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bswap_tests.Tpo test/$(DEPDIR)/test_bitcoin-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_bitcoin-bswap_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bswap_tests.o `test -f 'test/bswap_tests.cpp' || echo '$(srcdir)/'`test/bswap_tests.cpp

test/test_bitcoin-bswap_tests.obj: test/bswap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-bswap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-bswap_tests.Tpo -c -o test/test_bitcoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-bswap_tests.Tpo test/$(DEPDIR)/test_bitcoin-bswap_tests.Po
#	$(AM_V_CXX)source='test/bswap_tests.cpp' object='test/test_bitcoin-bswap_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-bswap_tests.obj `if test -f 'test/bswap_tests.cpp'; then $(CYGPATH_W) 'test/bswap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bswap_tests.cpp'; fi`

test/test_bitcoin-checkpoints_tests.o: test/checkpoints_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-checkpoints_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Tpo -c -o test/test_bitcoin-checkpoints_tests.o `test -f 'test/checkpoints_tests.cpp' || echo '$(srcdir)/'`test/checkpoints_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Tpo test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Po
#	$(AM_V_CXX)source='test/checkpoints_tests.cpp' object='test/test_bitcoin-checkpoints_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-checkpoints_tests.o `test -f 'test/checkpoints_tests.cpp' || echo '$(srcdir)/'`test/checkpoints_tests.cpp

test/test_bitcoin-checkpoints_tests.obj: test/checkpoints_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-checkpoints_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Tpo -c -o test/test_bitcoin-checkpoints_tests.obj `if test -f 'test/checkpoints_tests.cpp'; then $(CYGPATH_W) 'test/checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkpoints_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Tpo test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Po
#	$(AM_V_CXX)source='test/checkpoints_tests.cpp' object='test/test_bitcoin-checkpoints_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-checkpoints_tests.obj `if test -f 'test/checkpoints_tests.cpp'; then $(CYGPATH_W) 'test/checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkpoints_tests.cpp'; fi`

test/test_bitcoin-checkqueue_tests.o: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-checkqueue_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Tpo -c -o test/test_bitcoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_bitcoin-checkqueue_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-checkqueue_tests.o `test -f 'test/checkqueue_tests.cpp' || echo '$(srcdir)/'`test/checkqueue_tests.cpp

test/test_bitcoin-checkqueue_tests.obj: test/checkqueue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-checkqueue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Tpo -c -o test/test_bitcoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Tpo test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Po
#	$(AM_V_CXX)source='test/checkqueue_tests.cpp' object='test/test_bitcoin-checkqueue_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-checkqueue_tests.obj `if test -f 'test/checkqueue_tests.cpp'; then $(CYGPATH_W) 'test/checkqueue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkqueue_tests.cpp'; fi`

test/test_bitcoin-check_selfish_mining_tests.o: test/check_selfish_mining_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-check_selfish_mining_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Tpo -c -o test/test_bitcoin-check_selfish_mining_tests.o `test -f 'test/check_selfish_mining_tests.cpp' || echo '$(srcdir)/'`test/check_selfish_mining_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Tpo test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Po
#	$(AM_V_CXX)source='test/check_selfish_mining_tests.cpp' object='test/test_bitcoin-check_selfish_mining_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-check_selfish_mining_tests.o `test -f 'test/check_selfish_mining_tests.cpp' || echo '$(srcdir)/'`test/check_selfish_mining_tests.cpp

test/test_bitcoin-check_selfish_mining_tests.obj: test/check_selfish_mining_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-check_selfish_mining_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Tpo -c -o test/test_bitcoin-check_selfish_mining_tests.obj `if test -f 'test/check_selfish_mining_tests.cpp'; then $(CYGPATH_W) 'test/check_selfish_mining_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/check_selfish_mining_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Tpo test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Po
#	$(AM_V_CXX)source='test/check_selfish_mining_tests.cpp' object='test/test_bitcoin-check_selfish_mining_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-check_selfish_mining_tests.obj `if test -f 'test/check_selfish_mining_tests.cpp'; then $(CYGPATH_W) 'test/check_selfish_mining_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/check_selfish_mining_tests.cpp'; fi`

test/test_bitcoin-cmpctblock_parser_tests.o: test/cmpctblock_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cmpctblock_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Tpo -c -o test/test_bitcoin-cmpctblock_parser_tests.o `test -f 'test/cmpctblock_parser_tests.cpp' || echo '$(srcdir)/'`test/cmpctblock_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Po
#	$(AM_V_CXX)source='test/cmpctblock_parser_tests.cpp' object='test/test_bitcoin-cmpctblock_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cmpctblock_parser_tests.o `test -f 'test/cmpctblock_parser_tests.cpp' || echo '$(srcdir)/'`test/cmpctblock_parser_tests.cpp

test/test_bitcoin-cmpctblock_parser_tests.obj: test/cmpctblock_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cmpctblock_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Tpo -c -o test/test_bitcoin-cmpctblock_parser_tests.obj `if test -f 'test/cmpctblock_parser_tests.cpp'; then $(CYGPATH_W) 'test/cmpctblock_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cmpctblock_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Po
#	$(AM_V_CXX)source='test/cmpctblock_parser_tests.cpp' object='test/test_bitcoin-cmpctblock_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cmpctblock_parser_tests.obj `if test -f 'test/cmpctblock_parser_tests.cpp'; then $(CYGPATH_W) 'test/cmpctblock_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cmpctblock_parser_tests.cpp'; fi`

test/test_bitcoin-cmpct_size_tests.o: test/cmpct_size_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cmpct_size_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Tpo -c -o test/test_bitcoin-cmpct_size_tests.o `test -f 'test/cmpct_size_tests.cpp' || echo '$(srcdir)/'`test/cmpct_size_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Tpo test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Po
#	$(AM_V_CXX)source='test/cmpct_size_tests.cpp' object='test/test_bitcoin-cmpct_size_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cmpct_size_tests.o `test -f 'test/cmpct_size_tests.cpp' || echo '$(srcdir)/'`test/cmpct_size_tests.cpp

test/test_bitcoin-cmpct_size_tests.obj: test/cmpct_size_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cmpct_size_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Tpo -c -o test/test_bitcoin-cmpct_size_tests.obj `if test -f 'test/cmpct_size_tests.cpp'; then $(CYGPATH_W) 'test/cmpct_size_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cmpct_size_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Tpo test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Po
#	$(AM_V_CXX)source='test/cmpct_size_tests.cpp' object='test/test_bitcoin-cmpct_size_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cmpct_size_tests.obj `if test -f 'test/cmpct_size_tests.cpp'; then $(CYGPATH_W) 'test/cmpct_size_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cmpct_size_tests.cpp'; fi`

test/test_bitcoin-coins_tests.o: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-coins_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-coins_tests.Tpo -c -o test/test_bitcoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-coins_tests.Tpo test/$(DEPDIR)/test_bitcoin-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_bitcoin-coins_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp

test/test_bitcoin-coins_tests.obj: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-coins_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-coins_tests.Tpo -c -o test/test_bitcoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-coins_tests.Tpo test/$(DEPDIR)/test_bitcoin-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_bitcoin-coins_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`

test/test_bitcoin-write_preferring_upgradable_mutex_tests.o: test/write_preferring_upgradable_mutex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-write_preferring_upgradable_mutex_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Tpo -c -o test/test_bitcoin-write_preferring_upgradable_mutex_tests.o `test -f 'test/write_preferring_upgradable_mutex_tests.cpp' || echo '$(srcdir)/'`test/write_preferring_upgradable_mutex_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Tpo test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Po
#	$(AM_V_CXX)source='test/write_preferring_upgradable_mutex_tests.cpp' object='test/test_bitcoin-write_preferring_upgradable_mutex_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-write_preferring_upgradable_mutex_tests.o `test -f 'test/write_preferring_upgradable_mutex_tests.cpp' || echo '$(srcdir)/'`test/write_preferring_upgradable_mutex_tests.cpp

test/test_bitcoin-write_preferring_upgradable_mutex_tests.obj: test/write_preferring_upgradable_mutex_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-write_preferring_upgradable_mutex_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Tpo -c -o test/test_bitcoin-write_preferring_upgradable_mutex_tests.obj `if test -f 'test/write_preferring_upgradable_mutex_tests.cpp'; then $(CYGPATH_W) 'test/write_preferring_upgradable_mutex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/write_preferring_upgradable_mutex_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Tpo test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Po
#	$(AM_V_CXX)source='test/write_preferring_upgradable_mutex_tests.cpp' object='test/test_bitcoin-write_preferring_upgradable_mutex_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-write_preferring_upgradable_mutex_tests.obj `if test -f 'test/write_preferring_upgradable_mutex_tests.cpp'; then $(CYGPATH_W) 'test/write_preferring_upgradable_mutex_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/write_preferring_upgradable_mutex_tests.cpp'; fi`

test/test_bitcoin-compress_tests.o: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-compress_tests.Tpo -c -o test/test_bitcoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-compress_tests.Tpo test/$(DEPDIR)/test_bitcoin-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_bitcoin-compress_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp

test/test_bitcoin-compress_tests.obj: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-compress_tests.Tpo -c -o test/test_bitcoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-compress_tests.Tpo test/$(DEPDIR)/test_bitcoin-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_bitcoin-compress_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`

test/test_bitcoin-config_tests.o: test/config_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-config_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-config_tests.Tpo -c -o test/test_bitcoin-config_tests.o `test -f 'test/config_tests.cpp' || echo '$(srcdir)/'`test/config_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-config_tests.Tpo test/$(DEPDIR)/test_bitcoin-config_tests.Po
#	$(AM_V_CXX)source='test/config_tests.cpp' object='test/test_bitcoin-config_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-config_tests.o `test -f 'test/config_tests.cpp' || echo '$(srcdir)/'`test/config_tests.cpp

test/test_bitcoin-config_tests.obj: test/config_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-config_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-config_tests.Tpo -c -o test/test_bitcoin-config_tests.obj `if test -f 'test/config_tests.cpp'; then $(CYGPATH_W) 'test/config_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/config_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-config_tests.Tpo test/$(DEPDIR)/test_bitcoin-config_tests.Po
#	$(AM_V_CXX)source='test/config_tests.cpp' object='test/test_bitcoin-config_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-config_tests.obj `if test -f 'test/config_tests.cpp'; then $(CYGPATH_W) 'test/config_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/config_tests.cpp'; fi`

test/test_bitcoin-coinbase_doc_tests.o: test/coinbase_doc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-coinbase_doc_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Tpo -c -o test/test_bitcoin-coinbase_doc_tests.o `test -f 'test/coinbase_doc_tests.cpp' || echo '$(srcdir)/'`test/coinbase_doc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Tpo test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Po
#	$(AM_V_CXX)source='test/coinbase_doc_tests.cpp' object='test/test_bitcoin-coinbase_doc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-coinbase_doc_tests.o `test -f 'test/coinbase_doc_tests.cpp' || echo '$(srcdir)/'`test/coinbase_doc_tests.cpp

test/test_bitcoin-coinbase_doc_tests.obj: test/coinbase_doc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-coinbase_doc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Tpo -c -o test/test_bitcoin-coinbase_doc_tests.obj `if test -f 'test/coinbase_doc_tests.cpp'; then $(CYGPATH_W) 'test/coinbase_doc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coinbase_doc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Tpo test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Po
#	$(AM_V_CXX)source='test/coinbase_doc_tests.cpp' object='test/test_bitcoin-coinbase_doc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-coinbase_doc_tests.obj `if test -f 'test/coinbase_doc_tests.cpp'; then $(CYGPATH_W) 'test/coinbase_doc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coinbase_doc_tests.cpp'; fi`

test/test_bitcoin-core_io_tests.o: test/core_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-core_io_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-core_io_tests.Tpo -c -o test/test_bitcoin-core_io_tests.o `test -f 'test/core_io_tests.cpp' || echo '$(srcdir)/'`test/core_io_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-core_io_tests.Tpo test/$(DEPDIR)/test_bitcoin-core_io_tests.Po
#	$(AM_V_CXX)source='test/core_io_tests.cpp' object='test/test_bitcoin-core_io_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-core_io_tests.o `test -f 'test/core_io_tests.cpp' || echo '$(srcdir)/'`test/core_io_tests.cpp

test/test_bitcoin-core_io_tests.obj: test/core_io_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-core_io_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-core_io_tests.Tpo -c -o test/test_bitcoin-core_io_tests.obj `if test -f 'test/core_io_tests.cpp'; then $(CYGPATH_W) 'test/core_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/core_io_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-core_io_tests.Tpo test/$(DEPDIR)/test_bitcoin-core_io_tests.Po
#	$(AM_V_CXX)source='test/core_io_tests.cpp' object='test/test_bitcoin-core_io_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-core_io_tests.obj `if test -f 'test/core_io_tests.cpp'; then $(CYGPATH_W) 'test/core_io_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/core_io_tests.cpp'; fi`

test/test_bitcoin-cpfp_tests.o: test/cpfp_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cpfp_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cpfp_tests.Tpo -c -o test/test_bitcoin-cpfp_tests.o `test -f 'test/cpfp_tests.cpp' || echo '$(srcdir)/'`test/cpfp_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cpfp_tests.Tpo test/$(DEPDIR)/test_bitcoin-cpfp_tests.Po
#	$(AM_V_CXX)source='test/cpfp_tests.cpp' object='test/test_bitcoin-cpfp_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cpfp_tests.o `test -f 'test/cpfp_tests.cpp' || echo '$(srcdir)/'`test/cpfp_tests.cpp

test/test_bitcoin-cpfp_tests.obj: test/cpfp_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cpfp_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cpfp_tests.Tpo -c -o test/test_bitcoin-cpfp_tests.obj `if test -f 'test/cpfp_tests.cpp'; then $(CYGPATH_W) 'test/cpfp_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cpfp_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cpfp_tests.Tpo test/$(DEPDIR)/test_bitcoin-cpfp_tests.Po
#	$(AM_V_CXX)source='test/cpfp_tests.cpp' object='test/test_bitcoin-cpfp_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cpfp_tests.obj `if test -f 'test/cpfp_tests.cpp'; then $(CYGPATH_W) 'test/cpfp_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cpfp_tests.cpp'; fi`

test/test_bitcoin-crypto_tests.o: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-crypto_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-crypto_tests.Tpo -c -o test/test_bitcoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-crypto_tests.Tpo test/$(DEPDIR)/test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_bitcoin-crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp

test/test_bitcoin-crypto_tests.obj: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-crypto_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-crypto_tests.Tpo -c -o test/test_bitcoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-crypto_tests.Tpo test/$(DEPDIR)/test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_bitcoin-crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`

test/test_bitcoin-cscript_tests.o: test/cscript_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cscript_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cscript_tests.Tpo -c -o test/test_bitcoin-cscript_tests.o `test -f 'test/cscript_tests.cpp' || echo '$(srcdir)/'`test/cscript_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cscript_tests.Tpo test/$(DEPDIR)/test_bitcoin-cscript_tests.Po
#	$(AM_V_CXX)source='test/cscript_tests.cpp' object='test/test_bitcoin-cscript_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cscript_tests.o `test -f 'test/cscript_tests.cpp' || echo '$(srcdir)/'`test/cscript_tests.cpp

test/test_bitcoin-cscript_tests.obj: test/cscript_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cscript_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cscript_tests.Tpo -c -o test/test_bitcoin-cscript_tests.obj `if test -f 'test/cscript_tests.cpp'; then $(CYGPATH_W) 'test/cscript_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cscript_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cscript_tests.Tpo test/$(DEPDIR)/test_bitcoin-cscript_tests.Po
#	$(AM_V_CXX)source='test/cscript_tests.cpp' object='test/test_bitcoin-cscript_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cscript_tests.obj `if test -f 'test/cscript_tests.cpp'; then $(CYGPATH_W) 'test/cscript_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cscript_tests.cpp'; fi`

test/test_bitcoin-cuckoocache_tests.o: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cuckoocache_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Tpo -c -o test/test_bitcoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_bitcoin-cuckoocache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cuckoocache_tests.o `test -f 'test/cuckoocache_tests.cpp' || echo '$(srcdir)/'`test/cuckoocache_tests.cpp

test/test_bitcoin-cuckoocache_tests.obj: test/cuckoocache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-cuckoocache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Tpo -c -o test/test_bitcoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Tpo test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Po
#	$(AM_V_CXX)source='test/cuckoocache_tests.cpp' object='test/test_bitcoin-cuckoocache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-cuckoocache_tests.obj `if test -f 'test/cuckoocache_tests.cpp'; then $(CYGPATH_W) 'test/cuckoocache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/cuckoocache_tests.cpp'; fi`

test/test_bitcoin-dataref_index_tests.o: test/dataref_index_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dataref_index_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Tpo -c -o test/test_bitcoin-dataref_index_tests.o `test -f 'test/dataref_index_tests.cpp' || echo '$(srcdir)/'`test/dataref_index_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Tpo test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Po
#	$(AM_V_CXX)source='test/dataref_index_tests.cpp' object='test/test_bitcoin-dataref_index_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dataref_index_tests.o `test -f 'test/dataref_index_tests.cpp' || echo '$(srcdir)/'`test/dataref_index_tests.cpp

test/test_bitcoin-dataref_index_tests.obj: test/dataref_index_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dataref_index_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Tpo -c -o test/test_bitcoin-dataref_index_tests.obj `if test -f 'test/dataref_index_tests.cpp'; then $(CYGPATH_W) 'test/dataref_index_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dataref_index_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Tpo test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Po
#	$(AM_V_CXX)source='test/dataref_index_tests.cpp' object='test/test_bitcoin-dataref_index_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dataref_index_tests.obj `if test -f 'test/dataref_index_tests.cpp'; then $(CYGPATH_W) 'test/dataref_index_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dataref_index_tests.cpp'; fi`

test/test_bitcoin-datareftx_tests.o: test/datareftx_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-datareftx_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-datareftx_tests.Tpo -c -o test/test_bitcoin-datareftx_tests.o `test -f 'test/datareftx_tests.cpp' || echo '$(srcdir)/'`test/datareftx_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-datareftx_tests.Tpo test/$(DEPDIR)/test_bitcoin-datareftx_tests.Po
#	$(AM_V_CXX)source='test/datareftx_tests.cpp' object='test/test_bitcoin-datareftx_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-datareftx_tests.o `test -f 'test/datareftx_tests.cpp' || echo '$(srcdir)/'`test/datareftx_tests.cpp

test/test_bitcoin-datareftx_tests.obj: test/datareftx_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-datareftx_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-datareftx_tests.Tpo -c -o test/test_bitcoin-datareftx_tests.obj `if test -f 'test/datareftx_tests.cpp'; then $(CYGPATH_W) 'test/datareftx_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/datareftx_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-datareftx_tests.Tpo test/$(DEPDIR)/test_bitcoin-datareftx_tests.Po
#	$(AM_V_CXX)source='test/datareftx_tests.cpp' object='test/test_bitcoin-datareftx_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-datareftx_tests.obj `if test -f 'test/datareftx_tests.cpp'; then $(CYGPATH_W) 'test/datareftx_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/datareftx_tests.cpp'; fi`

test/test_bitcoin-dsattempt_tests.o: test/dsattempt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dsattempt_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Tpo -c -o test/test_bitcoin-dsattempt_tests.o `test -f 'test/dsattempt_tests.cpp' || echo '$(srcdir)/'`test/dsattempt_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Tpo test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Po
#	$(AM_V_CXX)source='test/dsattempt_tests.cpp' object='test/test_bitcoin-dsattempt_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dsattempt_tests.o `test -f 'test/dsattempt_tests.cpp' || echo '$(srcdir)/'`test/dsattempt_tests.cpp

test/test_bitcoin-dsattempt_tests.obj: test/dsattempt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dsattempt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Tpo -c -o test/test_bitcoin-dsattempt_tests.obj `if test -f 'test/dsattempt_tests.cpp'; then $(CYGPATH_W) 'test/dsattempt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dsattempt_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Tpo test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Po
#	$(AM_V_CXX)source='test/dsattempt_tests.cpp' object='test/test_bitcoin-dsattempt_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dsattempt_tests.obj `if test -f 'test/dsattempt_tests.cpp'; then $(CYGPATH_W) 'test/dsattempt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dsattempt_tests.cpp'; fi`

test/test_bitcoin-dsdetected_tests.o: test/dsdetected_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dsdetected_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Tpo -c -o test/test_bitcoin-dsdetected_tests.o `test -f 'test/dsdetected_tests.cpp' || echo '$(srcdir)/'`test/dsdetected_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Tpo test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Po
#	$(AM_V_CXX)source='test/dsdetected_tests.cpp' object='test/test_bitcoin-dsdetected_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dsdetected_tests.o `test -f 'test/dsdetected_tests.cpp' || echo '$(srcdir)/'`test/dsdetected_tests.cpp

test/test_bitcoin-dsdetected_tests.obj: test/dsdetected_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dsdetected_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Tpo -c -o test/test_bitcoin-dsdetected_tests.obj `if test -f 'test/dsdetected_tests.cpp'; then $(CYGPATH_W) 'test/dsdetected_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dsdetected_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Tpo test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Po
#	$(AM_V_CXX)source='test/dsdetected_tests.cpp' object='test/test_bitcoin-dsdetected_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dsdetected_tests.obj `if test -f 'test/dsdetected_tests.cpp'; then $(CYGPATH_W) 'test/dsdetected_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dsdetected_tests.cpp'; fi`

test/test_bitcoin-dstxn_serialiser_tests.o: test/dstxn_serialiser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dstxn_serialiser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Tpo -c -o test/test_bitcoin-dstxn_serialiser_tests.o `test -f 'test/dstxn_serialiser_tests.cpp' || echo '$(srcdir)/'`test/dstxn_serialiser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Tpo test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Po
#	$(AM_V_CXX)source='test/dstxn_serialiser_tests.cpp' object='test/test_bitcoin-dstxn_serialiser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dstxn_serialiser_tests.o `test -f 'test/dstxn_serialiser_tests.cpp' || echo '$(srcdir)/'`test/dstxn_serialiser_tests.cpp

test/test_bitcoin-dstxn_serialiser_tests.obj: test/dstxn_serialiser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dstxn_serialiser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Tpo -c -o test/test_bitcoin-dstxn_serialiser_tests.obj `if test -f 'test/dstxn_serialiser_tests.cpp'; then $(CYGPATH_W) 'test/dstxn_serialiser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dstxn_serialiser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Tpo test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Po
#	$(AM_V_CXX)source='test/dstxn_serialiser_tests.cpp' object='test/test_bitcoin-dstxn_serialiser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dstxn_serialiser_tests.obj `if test -f 'test/dstxn_serialiser_tests.cpp'; then $(CYGPATH_W) 'test/dstxn_serialiser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dstxn_serialiser_tests.cpp'; fi`

test/test_bitcoin-dbwrapper_tests.o: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dbwrapper_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Tpo -c -o test/test_bitcoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_bitcoin-dbwrapper_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dbwrapper_tests.o `test -f 'test/dbwrapper_tests.cpp' || echo '$(srcdir)/'`test/dbwrapper_tests.cpp

test/test_bitcoin-dbwrapper_tests.obj: test/dbwrapper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dbwrapper_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Tpo -c -o test/test_bitcoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Tpo test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Po
#	$(AM_V_CXX)source='test/dbwrapper_tests.cpp' object='test/test_bitcoin-dbwrapper_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dbwrapper_tests.obj `if test -f 'test/dbwrapper_tests.cpp'; then $(CYGPATH_W) 'test/dbwrapper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dbwrapper_tests.cpp'; fi`

test/test_bitcoin-frozentxo_db_tests.o: test/frozentxo_db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-frozentxo_db_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Tpo -c -o test/test_bitcoin-frozentxo_db_tests.o `test -f 'test/frozentxo_db_tests.cpp' || echo '$(srcdir)/'`test/frozentxo_db_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Tpo test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Po
#	$(AM_V_CXX)source='test/frozentxo_db_tests.cpp' object='test/test_bitcoin-frozentxo_db_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-frozentxo_db_tests.o `test -f 'test/frozentxo_db_tests.cpp' || echo '$(srcdir)/'`test/frozentxo_db_tests.cpp

test/test_bitcoin-frozentxo_db_tests.obj: test/frozentxo_db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-frozentxo_db_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Tpo -c -o test/test_bitcoin-frozentxo_db_tests.obj `if test -f 'test/frozentxo_db_tests.cpp'; then $(CYGPATH_W) 'test/frozentxo_db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/frozentxo_db_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Tpo test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Po
#	$(AM_V_CXX)source='test/frozentxo_db_tests.cpp' object='test/test_bitcoin-frozentxo_db_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-frozentxo_db_tests.obj `if test -f 'test/frozentxo_db_tests.cpp'; then $(CYGPATH_W) 'test/frozentxo_db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/frozentxo_db_tests.cpp'; fi`

test/test_bitcoin-frozentxo_mempool_tests.o: test/frozentxo_mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-frozentxo_mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Tpo -c -o test/test_bitcoin-frozentxo_mempool_tests.o `test -f 'test/frozentxo_mempool_tests.cpp' || echo '$(srcdir)/'`test/frozentxo_mempool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Tpo test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Po
#	$(AM_V_CXX)source='test/frozentxo_mempool_tests.cpp' object='test/test_bitcoin-frozentxo_mempool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-frozentxo_mempool_tests.o `test -f 'test/frozentxo_mempool_tests.cpp' || echo '$(srcdir)/'`test/frozentxo_mempool_tests.cpp

test/test_bitcoin-frozentxo_mempool_tests.obj: test/frozentxo_mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-frozentxo_mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Tpo -c -o test/test_bitcoin-frozentxo_mempool_tests.obj `if test -f 'test/frozentxo_mempool_tests.cpp'; then $(CYGPATH_W) 'test/frozentxo_mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/frozentxo_mempool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Tpo test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Po
#	$(AM_V_CXX)source='test/frozentxo_mempool_tests.cpp' object='test/test_bitcoin-frozentxo_mempool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-frozentxo_mempool_tests.obj `if test -f 'test/frozentxo_mempool_tests.cpp'; then $(CYGPATH_W) 'test/frozentxo_mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/frozentxo_mempool_tests.cpp'; fi`

test/test_bitcoin-frozentxo_tests.o: test/frozentxo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-frozentxo_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Tpo -c -o test/test_bitcoin-frozentxo_tests.o `test -f 'test/frozentxo_tests.cpp' || echo '$(srcdir)/'`test/frozentxo_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Tpo test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Po
#	$(AM_V_CXX)source='test/frozentxo_tests.cpp' object='test/test_bitcoin-frozentxo_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-frozentxo_tests.o `test -f 'test/frozentxo_tests.cpp' || echo '$(srcdir)/'`test/frozentxo_tests.cpp

test/test_bitcoin-frozentxo_tests.obj: test/frozentxo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-frozentxo_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Tpo -c -o test/test_bitcoin-frozentxo_tests.obj `if test -f 'test/frozentxo_tests.cpp'; then $(CYGPATH_W) 'test/frozentxo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/frozentxo_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Tpo test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Po
#	$(AM_V_CXX)source='test/frozentxo_tests.cpp' object='test/test_bitcoin-frozentxo_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-frozentxo_tests.obj `if test -f 'test/frozentxo_tests.cpp'; then $(CYGPATH_W) 'test/frozentxo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/frozentxo_tests.cpp'; fi`

test/test_bitcoin-DoS_tests.o: test/DoS_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-DoS_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-DoS_tests.Tpo -c -o test/test_bitcoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-DoS_tests.Tpo test/$(DEPDIR)/test_bitcoin-DoS_tests.Po
#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_bitcoin-DoS_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp

test/test_bitcoin-DoS_tests.obj: test/DoS_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-DoS_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-DoS_tests.Tpo -c -o test/test_bitcoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-DoS_tests.Tpo test/$(DEPDIR)/test_bitcoin-DoS_tests.Po
#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_bitcoin-DoS_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`

test/test_bitcoin-dstencode_tests.o: test/dstencode_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dstencode_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dstencode_tests.Tpo -c -o test/test_bitcoin-dstencode_tests.o `test -f 'test/dstencode_tests.cpp' || echo '$(srcdir)/'`test/dstencode_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dstencode_tests.Tpo test/$(DEPDIR)/test_bitcoin-dstencode_tests.Po
#	$(AM_V_CXX)source='test/dstencode_tests.cpp' object='test/test_bitcoin-dstencode_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dstencode_tests.o `test -f 'test/dstencode_tests.cpp' || echo '$(srcdir)/'`test/dstencode_tests.cpp

test/test_bitcoin-dstencode_tests.obj: test/dstencode_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-dstencode_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-dstencode_tests.Tpo -c -o test/test_bitcoin-dstencode_tests.obj `if test -f 'test/dstencode_tests.cpp'; then $(CYGPATH_W) 'test/dstencode_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dstencode_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-dstencode_tests.Tpo test/$(DEPDIR)/test_bitcoin-dstencode_tests.Po
#	$(AM_V_CXX)source='test/dstencode_tests.cpp' object='test/test_bitcoin-dstencode_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-dstencode_tests.obj `if test -f 'test/dstencode_tests.cpp'; then $(CYGPATH_W) 'test/dstencode_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/dstencode_tests.cpp'; fi`

test/test_bitcoin-enum_cast_tests.o: test/enum_cast_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-enum_cast_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Tpo -c -o test/test_bitcoin-enum_cast_tests.o `test -f 'test/enum_cast_tests.cpp' || echo '$(srcdir)/'`test/enum_cast_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Tpo test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Po
#	$(AM_V_CXX)source='test/enum_cast_tests.cpp' object='test/test_bitcoin-enum_cast_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-enum_cast_tests.o `test -f 'test/enum_cast_tests.cpp' || echo '$(srcdir)/'`test/enum_cast_tests.cpp

test/test_bitcoin-enum_cast_tests.obj: test/enum_cast_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-enum_cast_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Tpo -c -o test/test_bitcoin-enum_cast_tests.obj `if test -f 'test/enum_cast_tests.cpp'; then $(CYGPATH_W) 'test/enum_cast_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/enum_cast_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Tpo test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Po
#	$(AM_V_CXX)source='test/enum_cast_tests.cpp' object='test/test_bitcoin-enum_cast_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-enum_cast_tests.obj `if test -f 'test/enum_cast_tests.cpp'; then $(CYGPATH_W) 'test/enum_cast_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/enum_cast_tests.cpp'; fi`

test/test_bitcoin-eviction_candidates_tracker_tests.o: test/eviction_candidates_tracker_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-eviction_candidates_tracker_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Tpo -c -o test/test_bitcoin-eviction_candidates_tracker_tests.o `test -f 'test/eviction_candidates_tracker_tests.cpp' || echo '$(srcdir)/'`test/eviction_candidates_tracker_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Tpo test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Po
#	$(AM_V_CXX)source='test/eviction_candidates_tracker_tests.cpp' object='test/test_bitcoin-eviction_candidates_tracker_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-eviction_candidates_tracker_tests.o `test -f 'test/eviction_candidates_tracker_tests.cpp' || echo '$(srcdir)/'`test/eviction_candidates_tracker_tests.cpp

test/test_bitcoin-eviction_candidates_tracker_tests.obj: test/eviction_candidates_tracker_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-eviction_candidates_tracker_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Tpo -c -o test/test_bitcoin-eviction_candidates_tracker_tests.obj `if test -f 'test/eviction_candidates_tracker_tests.cpp'; then $(CYGPATH_W) 'test/eviction_candidates_tracker_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/eviction_candidates_tracker_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Tpo test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Po
#	$(AM_V_CXX)source='test/eviction_candidates_tracker_tests.cpp' object='test/test_bitcoin-eviction_candidates_tracker_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-eviction_candidates_tracker_tests.obj `if test -f 'test/eviction_candidates_tracker_tests.cpp'; then $(CYGPATH_W) 'test/eviction_candidates_tracker_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/eviction_candidates_tracker_tests.cpp'; fi`

test/test_bitcoin-excessiveblock_tests.o: test/excessiveblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-excessiveblock_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Tpo -c -o test/test_bitcoin-excessiveblock_tests.o `test -f 'test/excessiveblock_tests.cpp' || echo '$(srcdir)/'`test/excessiveblock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Tpo test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Po
#	$(AM_V_CXX)source='test/excessiveblock_tests.cpp' object='test/test_bitcoin-excessiveblock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-excessiveblock_tests.o `test -f 'test/excessiveblock_tests.cpp' || echo '$(srcdir)/'`test/excessiveblock_tests.cpp

test/test_bitcoin-excessiveblock_tests.obj: test/excessiveblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-excessiveblock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Tpo -c -o test/test_bitcoin-excessiveblock_tests.obj `if test -f 'test/excessiveblock_tests.cpp'; then $(CYGPATH_W) 'test/excessiveblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/excessiveblock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Tpo test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Po
#	$(AM_V_CXX)source='test/excessiveblock_tests.cpp' object='test/test_bitcoin-excessiveblock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-excessiveblock_tests.obj `if test -f 'test/excessiveblock_tests.cpp'; then $(CYGPATH_W) 'test/excessiveblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/excessiveblock_tests.cpp'; fi`

test/test_bitcoin-fixed_len_multi_parser_tests.o: test/fixed_len_multi_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-fixed_len_multi_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Tpo -c -o test/test_bitcoin-fixed_len_multi_parser_tests.o `test -f 'test/fixed_len_multi_parser_tests.cpp' || echo '$(srcdir)/'`test/fixed_len_multi_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Po
#	$(AM_V_CXX)source='test/fixed_len_multi_parser_tests.cpp' object='test/test_bitcoin-fixed_len_multi_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-fixed_len_multi_parser_tests.o `test -f 'test/fixed_len_multi_parser_tests.cpp' || echo '$(srcdir)/'`test/fixed_len_multi_parser_tests.cpp

test/test_bitcoin-fixed_len_multi_parser_tests.obj: test/fixed_len_multi_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-fixed_len_multi_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Tpo -c -o test/test_bitcoin-fixed_len_multi_parser_tests.obj `if test -f 'test/fixed_len_multi_parser_tests.cpp'; then $(CYGPATH_W) 'test/fixed_len_multi_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fixed_len_multi_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Po
#	$(AM_V_CXX)source='test/fixed_len_multi_parser_tests.cpp' object='test/test_bitcoin-fixed_len_multi_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-fixed_len_multi_parser_tests.obj `if test -f 'test/fixed_len_multi_parser_tests.cpp'; then $(CYGPATH_W) 'test/fixed_len_multi_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fixed_len_multi_parser_tests.cpp'; fi`

test/test_bitcoin-fixed_len_parser_tests.o: test/fixed_len_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-fixed_len_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Tpo -c -o test/test_bitcoin-fixed_len_parser_tests.o `test -f 'test/fixed_len_parser_tests.cpp' || echo '$(srcdir)/'`test/fixed_len_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Po
#	$(AM_V_CXX)source='test/fixed_len_parser_tests.cpp' object='test/test_bitcoin-fixed_len_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-fixed_len_parser_tests.o `test -f 'test/fixed_len_parser_tests.cpp' || echo '$(srcdir)/'`test/fixed_len_parser_tests.cpp

test/test_bitcoin-fixed_len_parser_tests.obj: test/fixed_len_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-fixed_len_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Tpo -c -o test/test_bitcoin-fixed_len_parser_tests.obj `if test -f 'test/fixed_len_parser_tests.cpp'; then $(CYGPATH_W) 'test/fixed_len_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fixed_len_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Po
#	$(AM_V_CXX)source='test/fixed_len_parser_tests.cpp' object='test/test_bitcoin-fixed_len_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-fixed_len_parser_tests.obj `if test -f 'test/fixed_len_parser_tests.cpp'; then $(CYGPATH_W) 'test/fixed_len_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/fixed_len_parser_tests.cpp'; fi`

test/test_bitcoin-getarg_tests.o: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-getarg_tests.Tpo -c -o test/test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_bitcoin-getarg_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp

test/test_bitcoin-getarg_tests.obj: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-getarg_tests.Tpo -c -o test/test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_bitcoin-getarg_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`

test/test_bitcoin-hash_tests.o: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-hash_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-hash_tests.Tpo -c -o test/test_bitcoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-hash_tests.Tpo test/$(DEPDIR)/test_bitcoin-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_bitcoin-hash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp

test/test_bitcoin-hash_tests.obj: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-hash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-hash_tests.Tpo -c -o test/test_bitcoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-hash_tests.Tpo test/$(DEPDIR)/test_bitcoin-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_bitcoin-hash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`

test/test_bitcoin-instruction_iterator_tests.o: test/instruction_iterator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-instruction_iterator_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Tpo -c -o test/test_bitcoin-instruction_iterator_tests.o `test -f 'test/instruction_iterator_tests.cpp' || echo '$(srcdir)/'`test/instruction_iterator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Tpo test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Po
#	$(AM_V_CXX)source='test/instruction_iterator_tests.cpp' object='test/test_bitcoin-instruction_iterator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-instruction_iterator_tests.o `test -f 'test/instruction_iterator_tests.cpp' || echo '$(srcdir)/'`test/instruction_iterator_tests.cpp

test/test_bitcoin-instruction_iterator_tests.obj: test/instruction_iterator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-instruction_iterator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Tpo -c -o test/test_bitcoin-instruction_iterator_tests.obj `if test -f 'test/instruction_iterator_tests.cpp'; then $(CYGPATH_W) 'test/instruction_iterator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/instruction_iterator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Tpo test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Po
#	$(AM_V_CXX)source='test/instruction_iterator_tests.cpp' object='test/test_bitcoin-instruction_iterator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-instruction_iterator_tests.obj `if test -f 'test/instruction_iterator_tests.cpp'; then $(CYGPATH_W) 'test/instruction_iterator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/instruction_iterator_tests.cpp'; fi`

test/test_bitcoin-int_serialization_tests.o: test/int_serialization_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-int_serialization_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Tpo -c -o test/test_bitcoin-int_serialization_tests.o `test -f 'test/int_serialization_tests.cpp' || echo '$(srcdir)/'`test/int_serialization_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Tpo test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Po
#	$(AM_V_CXX)source='test/int_serialization_tests.cpp' object='test/test_bitcoin-int_serialization_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-int_serialization_tests.o `test -f 'test/int_serialization_tests.cpp' || echo '$(srcdir)/'`test/int_serialization_tests.cpp

test/test_bitcoin-int_serialization_tests.obj: test/int_serialization_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-int_serialization_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Tpo -c -o test/test_bitcoin-int_serialization_tests.obj `if test -f 'test/int_serialization_tests.cpp'; then $(CYGPATH_W) 'test/int_serialization_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/int_serialization_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Tpo test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Po
#	$(AM_V_CXX)source='test/int_serialization_tests.cpp' object='test/test_bitcoin-int_serialization_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-int_serialization_tests.obj `if test -f 'test/int_serialization_tests.cpp'; then $(CYGPATH_W) 'test/int_serialization_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/int_serialization_tests.cpp'; fi`

test/test_bitcoin-inv_tests.o: test/inv_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-inv_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-inv_tests.Tpo -c -o test/test_bitcoin-inv_tests.o `test -f 'test/inv_tests.cpp' || echo '$(srcdir)/'`test/inv_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-inv_tests.Tpo test/$(DEPDIR)/test_bitcoin-inv_tests.Po
#	$(AM_V_CXX)source='test/inv_tests.cpp' object='test/test_bitcoin-inv_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-inv_tests.o `test -f 'test/inv_tests.cpp' || echo '$(srcdir)/'`test/inv_tests.cpp

test/test_bitcoin-inv_tests.obj: test/inv_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-inv_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-inv_tests.Tpo -c -o test/test_bitcoin-inv_tests.obj `if test -f 'test/inv_tests.cpp'; then $(CYGPATH_W) 'test/inv_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/inv_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-inv_tests.Tpo test/$(DEPDIR)/test_bitcoin-inv_tests.Po
#	$(AM_V_CXX)source='test/inv_tests.cpp' object='test/test_bitcoin-inv_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-inv_tests.obj `if test -f 'test/inv_tests.cpp'; then $(CYGPATH_W) 'test/inv_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/inv_tests.cpp'; fi`

test/test_bitcoin-invalid_txn_publisher_tests.o: test/invalid_txn_publisher_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-invalid_txn_publisher_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Tpo -c -o test/test_bitcoin-invalid_txn_publisher_tests.o `test -f 'test/invalid_txn_publisher_tests.cpp' || echo '$(srcdir)/'`test/invalid_txn_publisher_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Tpo test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Po
#	$(AM_V_CXX)source='test/invalid_txn_publisher_tests.cpp' object='test/test_bitcoin-invalid_txn_publisher_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-invalid_txn_publisher_tests.o `test -f 'test/invalid_txn_publisher_tests.cpp' || echo '$(srcdir)/'`test/invalid_txn_publisher_tests.cpp

test/test_bitcoin-invalid_txn_publisher_tests.obj: test/invalid_txn_publisher_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-invalid_txn_publisher_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Tpo -c -o test/test_bitcoin-invalid_txn_publisher_tests.obj `if test -f 'test/invalid_txn_publisher_tests.cpp'; then $(CYGPATH_W) 'test/invalid_txn_publisher_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/invalid_txn_publisher_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Tpo test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Po
#	$(AM_V_CXX)source='test/invalid_txn_publisher_tests.cpp' object='test/test_bitcoin-invalid_txn_publisher_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-invalid_txn_publisher_tests.obj `if test -f 'test/invalid_txn_publisher_tests.cpp'; then $(CYGPATH_W) 'test/invalid_txn_publisher_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/invalid_txn_publisher_tests.cpp'; fi`

test/test_bitcoin-jba_selfish_mining_tests.o: test/jba_selfish_mining_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-jba_selfish_mining_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Tpo -c -o test/test_bitcoin-jba_selfish_mining_tests.o `test -f 'test/jba_selfish_mining_tests.cpp' || echo '$(srcdir)/'`test/jba_selfish_mining_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Tpo test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Po
#	$(AM_V_CXX)source='test/jba_selfish_mining_tests.cpp' object='test/test_bitcoin-jba_selfish_mining_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-jba_selfish_mining_tests.o `test -f 'test/jba_selfish_mining_tests.cpp' || echo '$(srcdir)/'`test/jba_selfish_mining_tests.cpp

test/test_bitcoin-jba_selfish_mining_tests.obj: test/jba_selfish_mining_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-jba_selfish_mining_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Tpo -c -o test/test_bitcoin-jba_selfish_mining_tests.obj `if test -f 'test/jba_selfish_mining_tests.cpp'; then $(CYGPATH_W) 'test/jba_selfish_mining_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/jba_selfish_mining_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Tpo test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Po
#	$(AM_V_CXX)source='test/jba_selfish_mining_tests.cpp' object='test/test_bitcoin-jba_selfish_mining_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-jba_selfish_mining_tests.obj `if test -f 'test/jba_selfish_mining_tests.cpp'; then $(CYGPATH_W) 'test/jba_selfish_mining_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/jba_selfish_mining_tests.cpp'; fi`

test/test_bitcoin-journal_assembler_group_tests.o: test/journal_assembler_group_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-journal_assembler_group_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Tpo -c -o test/test_bitcoin-journal_assembler_group_tests.o `test -f 'test/journal_assembler_group_tests.cpp' || echo '$(srcdir)/'`test/journal_assembler_group_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Tpo test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Po
#	$(AM_V_CXX)source='test/journal_assembler_group_tests.cpp' object='test/test_bitcoin-journal_assembler_group_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-journal_assembler_group_tests.o `test -f 'test/journal_assembler_group_tests.cpp' || echo '$(srcdir)/'`test/journal_assembler_group_tests.cpp

test/test_bitcoin-journal_assembler_group_tests.obj: test/journal_assembler_group_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-journal_assembler_group_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Tpo -c -o test/test_bitcoin-journal_assembler_group_tests.obj `if test -f 'test/journal_assembler_group_tests.cpp'; then $(CYGPATH_W) 'test/journal_assembler_group_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/journal_assembler_group_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Tpo test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Po
#	$(AM_V_CXX)source='test/journal_assembler_group_tests.cpp' object='test/test_bitcoin-journal_assembler_group_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-journal_assembler_group_tests.obj `if test -f 'test/journal_assembler_group_tests.cpp'; then $(CYGPATH_W) 'test/journal_assembler_group_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/journal_assembler_group_tests.cpp'; fi`

test/test_bitcoin-journal_tests.o: test/journal_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-journal_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-journal_tests.Tpo -c -o test/test_bitcoin-journal_tests.o `test -f 'test/journal_tests.cpp' || echo '$(srcdir)/'`test/journal_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-journal_tests.Tpo test/$(DEPDIR)/test_bitcoin-journal_tests.Po
#	$(AM_V_CXX)source='test/journal_tests.cpp' object='test/test_bitcoin-journal_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-journal_tests.o `test -f 'test/journal_tests.cpp' || echo '$(srcdir)/'`test/journal_tests.cpp

test/test_bitcoin-journal_tests.obj: test/journal_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-journal_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-journal_tests.Tpo -c -o test/test_bitcoin-journal_tests.obj `if test -f 'test/journal_tests.cpp'; then $(CYGPATH_W) 'test/journal_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/journal_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-journal_tests.Tpo test/$(DEPDIR)/test_bitcoin-journal_tests.Po
#	$(AM_V_CXX)source='test/journal_tests.cpp' object='test/test_bitcoin-journal_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-journal_tests.obj `if test -f 'test/journal_tests.cpp'; then $(CYGPATH_W) 'test/journal_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/journal_tests.cpp'; fi`

test/test_bitcoin-jsonutil.o: test/jsonutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-jsonutil.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-jsonutil.Tpo -c -o test/test_bitcoin-jsonutil.o `test -f 'test/jsonutil.cpp' || echo '$(srcdir)/'`test/jsonutil.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-jsonutil.Tpo test/$(DEPDIR)/test_bitcoin-jsonutil.Po
#	$(AM_V_CXX)source='test/jsonutil.cpp' object='test/test_bitcoin-jsonutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-jsonutil.o `test -f 'test/jsonutil.cpp' || echo '$(srcdir)/'`test/jsonutil.cpp

test/test_bitcoin-jsonutil.obj: test/jsonutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-jsonutil.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-jsonutil.Tpo -c -o test/test_bitcoin-jsonutil.obj `if test -f 'test/jsonutil.cpp'; then $(CYGPATH_W) 'test/jsonutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/jsonutil.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-jsonutil.Tpo test/$(DEPDIR)/test_bitcoin-jsonutil.Po
#	$(AM_V_CXX)source='test/jsonutil.cpp' object='test/test_bitcoin-jsonutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-jsonutil.obj `if test -f 'test/jsonutil.cpp'; then $(CYGPATH_W) 'test/jsonutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/jsonutil.cpp'; fi`

test/test_bitcoin-json_tests.o: test/json_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-json_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-json_tests.Tpo -c -o test/test_bitcoin-json_tests.o `test -f 'test/json_tests.cpp' || echo '$(srcdir)/'`test/json_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-json_tests.Tpo test/$(DEPDIR)/test_bitcoin-json_tests.Po
#	$(AM_V_CXX)source='test/json_tests.cpp' object='test/test_bitcoin-json_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-json_tests.o `test -f 'test/json_tests.cpp' || echo '$(srcdir)/'`test/json_tests.cpp

test/test_bitcoin-json_tests.obj: test/json_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-json_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-json_tests.Tpo -c -o test/test_bitcoin-json_tests.obj `if test -f 'test/json_tests.cpp'; then $(CYGPATH_W) 'test/json_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/json_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-json_tests.Tpo test/$(DEPDIR)/test_bitcoin-json_tests.Po
#	$(AM_V_CXX)source='test/json_tests.cpp' object='test/test_bitcoin-json_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-json_tests.obj `if test -f 'test/json_tests.cpp'; then $(CYGPATH_W) 'test/json_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/json_tests.cpp'; fi`

test/test_bitcoin-key_tests.o: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-key_tests.Tpo -c -o test/test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_bitcoin-key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp

test/test_bitcoin-key_tests.obj: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-key_tests.Tpo -c -o test/test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_bitcoin-key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`

test/test_bitcoin-leaky_bucket_tests.o: test/leaky_bucket_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-leaky_bucket_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Tpo -c -o test/test_bitcoin-leaky_bucket_tests.o `test -f 'test/leaky_bucket_tests.cpp' || echo '$(srcdir)/'`test/leaky_bucket_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Tpo test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Po
#	$(AM_V_CXX)source='test/leaky_bucket_tests.cpp' object='test/test_bitcoin-leaky_bucket_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-leaky_bucket_tests.o `test -f 'test/leaky_bucket_tests.cpp' || echo '$(srcdir)/'`test/leaky_bucket_tests.cpp

test/test_bitcoin-leaky_bucket_tests.obj: test/leaky_bucket_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-leaky_bucket_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Tpo -c -o test/test_bitcoin-leaky_bucket_tests.obj `if test -f 'test/leaky_bucket_tests.cpp'; then $(CYGPATH_W) 'test/leaky_bucket_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/leaky_bucket_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Tpo test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Po
#	$(AM_V_CXX)source='test/leaky_bucket_tests.cpp' object='test/test_bitcoin-leaky_bucket_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-leaky_bucket_tests.obj `if test -f 'test/leaky_bucket_tests.cpp'; then $(CYGPATH_W) 'test/leaky_bucket_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/leaky_bucket_tests.cpp'; fi`

test/test_bitcoin-limitedmap_tests.o: test/limitedmap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-limitedmap_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Tpo -c -o test/test_bitcoin-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Tpo test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Po
#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_bitcoin-limitedmap_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-limitedmap_tests.o `test -f 'test/limitedmap_tests.cpp' || echo '$(srcdir)/'`test/limitedmap_tests.cpp

test/test_bitcoin-limitedmap_tests.obj: test/limitedmap_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-limitedmap_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Tpo -c -o test/test_bitcoin-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Tpo test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Po
#	$(AM_V_CXX)source='test/limitedmap_tests.cpp' object='test/test_bitcoin-limitedmap_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-limitedmap_tests.obj `if test -f 'test/limitedmap_tests.cpp'; then $(CYGPATH_W) 'test/limitedmap_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedmap_tests.cpp'; fi`

test/test_bitcoin-limitedstack_tests.o: test/limitedstack_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-limitedstack_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Tpo -c -o test/test_bitcoin-limitedstack_tests.o `test -f 'test/limitedstack_tests.cpp' || echo '$(srcdir)/'`test/limitedstack_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Tpo test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Po
#	$(AM_V_CXX)source='test/limitedstack_tests.cpp' object='test/test_bitcoin-limitedstack_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-limitedstack_tests.o `test -f 'test/limitedstack_tests.cpp' || echo '$(srcdir)/'`test/limitedstack_tests.cpp

test/test_bitcoin-limitedstack_tests.obj: test/limitedstack_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-limitedstack_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Tpo -c -o test/test_bitcoin-limitedstack_tests.obj `if test -f 'test/limitedstack_tests.cpp'; then $(CYGPATH_W) 'test/limitedstack_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedstack_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Tpo test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Po
#	$(AM_V_CXX)source='test/limitedstack_tests.cpp' object='test/test_bitcoin-limitedstack_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-limitedstack_tests.obj `if test -f 'test/limitedstack_tests.cpp'; then $(CYGPATH_W) 'test/limitedstack_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/limitedstack_tests.cpp'; fi`

test/test_bitcoin-locked_ref_tests.o: test/locked_ref_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-locked_ref_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Tpo -c -o test/test_bitcoin-locked_ref_tests.o `test -f 'test/locked_ref_tests.cpp' || echo '$(srcdir)/'`test/locked_ref_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Tpo test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Po
#	$(AM_V_CXX)source='test/locked_ref_tests.cpp' object='test/test_bitcoin-locked_ref_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-locked_ref_tests.o `test -f 'test/locked_ref_tests.cpp' || echo '$(srcdir)/'`test/locked_ref_tests.cpp

test/test_bitcoin-locked_ref_tests.obj: test/locked_ref_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-locked_ref_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Tpo -c -o test/test_bitcoin-locked_ref_tests.obj `if test -f 'test/locked_ref_tests.cpp'; then $(CYGPATH_W) 'test/locked_ref_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/locked_ref_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Tpo test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Po
#	$(AM_V_CXX)source='test/locked_ref_tests.cpp' object='test/test_bitcoin-locked_ref_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-locked_ref_tests.obj `if test -f 'test/locked_ref_tests.cpp'; then $(CYGPATH_W) 'test/locked_ref_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/locked_ref_tests.cpp'; fi`

test/test_bitcoin-m_candidates_tests.o: test/m_candidates_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-m_candidates_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Tpo -c -o test/test_bitcoin-m_candidates_tests.o `test -f 'test/m_candidates_tests.cpp' || echo '$(srcdir)/'`test/m_candidates_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Tpo test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Po
#	$(AM_V_CXX)source='test/m_candidates_tests.cpp' object='test/test_bitcoin-m_candidates_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-m_candidates_tests.o `test -f 'test/m_candidates_tests.cpp' || echo '$(srcdir)/'`test/m_candidates_tests.cpp

test/test_bitcoin-m_candidates_tests.obj: test/m_candidates_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-m_candidates_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Tpo -c -o test/test_bitcoin-m_candidates_tests.obj `if test -f 'test/m_candidates_tests.cpp'; then $(CYGPATH_W) 'test/m_candidates_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/m_candidates_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Tpo test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Po
#	$(AM_V_CXX)source='test/m_candidates_tests.cpp' object='test/test_bitcoin-m_candidates_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-m_candidates_tests.obj `if test -f 'test/m_candidates_tests.cpp'; then $(CYGPATH_W) 'test/m_candidates_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/m_candidates_tests.cpp'; fi`

test/test_bitcoin-main_tests.o: test/main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-main_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-main_tests.Tpo -c -o test/test_bitcoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-main_tests.Tpo test/$(DEPDIR)/test_bitcoin-main_tests.Po
#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_bitcoin-main_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp

test/test_bitcoin-main_tests.obj: test/main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-main_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-main_tests.Tpo -c -o test/test_bitcoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-main_tests.Tpo test/$(DEPDIR)/test_bitcoin-main_tests.Po
#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_bitcoin-main_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`

test/test_bitcoin-mempool_dump_load_tests.o: test/mempool_dump_load_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_dump_load_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Tpo -c -o test/test_bitcoin-mempool_dump_load_tests.o `test -f 'test/mempool_dump_load_tests.cpp' || echo '$(srcdir)/'`test/mempool_dump_load_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Po
#	$(AM_V_CXX)source='test/mempool_dump_load_tests.cpp' object='test/test_bitcoin-mempool_dump_load_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_dump_load_tests.o `test -f 'test/mempool_dump_load_tests.cpp' || echo '$(srcdir)/'`test/mempool_dump_load_tests.cpp

test/test_bitcoin-mempool_dump_load_tests.obj: test/mempool_dump_load_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_dump_load_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Tpo -c -o test/test_bitcoin-mempool_dump_load_tests.obj `if test -f 'test/mempool_dump_load_tests.cpp'; then $(CYGPATH_W) 'test/mempool_dump_load_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_dump_load_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Po
#	$(AM_V_CXX)source='test/mempool_dump_load_tests.cpp' object='test/test_bitcoin-mempool_dump_load_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_dump_load_tests.obj `if test -f 'test/mempool_dump_load_tests.cpp'; then $(CYGPATH_W) 'test/mempool_dump_load_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_dump_load_tests.cpp'; fi`

test/test_bitcoin-mempool_limit_tests.o: test/mempool_limit_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_limit_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Tpo -c -o test/test_bitcoin-mempool_limit_tests.o `test -f 'test/mempool_limit_tests.cpp' || echo '$(srcdir)/'`test/mempool_limit_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Po
#	$(AM_V_CXX)source='test/mempool_limit_tests.cpp' object='test/test_bitcoin-mempool_limit_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_limit_tests.o `test -f 'test/mempool_limit_tests.cpp' || echo '$(srcdir)/'`test/mempool_limit_tests.cpp

test/test_bitcoin-mempool_limit_tests.obj: test/mempool_limit_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_limit_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Tpo -c -o test/test_bitcoin-mempool_limit_tests.obj `if test -f 'test/mempool_limit_tests.cpp'; then $(CYGPATH_W) 'test/mempool_limit_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_limit_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Po
#	$(AM_V_CXX)source='test/mempool_limit_tests.cpp' object='test/test_bitcoin-mempool_limit_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_limit_tests.obj `if test -f 'test/mempool_limit_tests.cpp'; then $(CYGPATH_W) 'test/mempool_limit_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_limit_tests.cpp'; fi`

test/test_bitcoin-mempool_snapshot_tests.o: test/mempool_snapshot_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_snapshot_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Tpo -c -o test/test_bitcoin-mempool_snapshot_tests.o `test -f 'test/mempool_snapshot_tests.cpp' || echo '$(srcdir)/'`test/mempool_snapshot_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Po
#	$(AM_V_CXX)source='test/mempool_snapshot_tests.cpp' object='test/test_bitcoin-mempool_snapshot_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_snapshot_tests.o `test -f 'test/mempool_snapshot_tests.cpp' || echo '$(srcdir)/'`test/mempool_snapshot_tests.cpp

test/test_bitcoin-mempool_snapshot_tests.obj: test/mempool_snapshot_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_snapshot_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Tpo -c -o test/test_bitcoin-mempool_snapshot_tests.obj `if test -f 'test/mempool_snapshot_tests.cpp'; then $(CYGPATH_W) 'test/mempool_snapshot_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_snapshot_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Po
#	$(AM_V_CXX)source='test/mempool_snapshot_tests.cpp' object='test/test_bitcoin-mempool_snapshot_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_snapshot_tests.obj `if test -f 'test/mempool_snapshot_tests.cpp'; then $(CYGPATH_W) 'test/mempool_snapshot_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_snapshot_tests.cpp'; fi`

test/test_bitcoin-mempool_tests.o: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_tests.Tpo -c -o test/test_bitcoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_bitcoin-mempool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp

test/test_bitcoin-mempool_tests.obj: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempool_tests.Tpo -c -o test/test_bitcoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempool_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_bitcoin-mempool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`

test/test_bitcoin-mempooltxdb_tests.o: test/mempooltxdb_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempooltxdb_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Tpo -c -o test/test_bitcoin-mempooltxdb_tests.o `test -f 'test/mempooltxdb_tests.cpp' || echo '$(srcdir)/'`test/mempooltxdb_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Po
#	$(AM_V_CXX)source='test/mempooltxdb_tests.cpp' object='test/test_bitcoin-mempooltxdb_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempooltxdb_tests.o `test -f 'test/mempooltxdb_tests.cpp' || echo '$(srcdir)/'`test/mempooltxdb_tests.cpp

test/test_bitcoin-mempooltxdb_tests.obj: test/mempooltxdb_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mempooltxdb_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Tpo -c -o test/test_bitcoin-mempooltxdb_tests.obj `if test -f 'test/mempooltxdb_tests.cpp'; then $(CYGPATH_W) 'test/mempooltxdb_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempooltxdb_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Tpo test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Po
#	$(AM_V_CXX)source='test/mempooltxdb_tests.cpp' object='test/test_bitcoin-mempooltxdb_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mempooltxdb_tests.obj `if test -f 'test/mempooltxdb_tests.cpp'; then $(CYGPATH_W) 'test/mempooltxdb_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempooltxdb_tests.cpp'; fi`

test/test_bitcoin-merkle_tests.o: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-merkle_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-merkle_tests.Tpo -c -o test/test_bitcoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-merkle_tests.Tpo test/$(DEPDIR)/test_bitcoin-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_bitcoin-merkle_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-merkle_tests.o `test -f 'test/merkle_tests.cpp' || echo '$(srcdir)/'`test/merkle_tests.cpp

test/test_bitcoin-merkle_tests.obj: test/merkle_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-merkle_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-merkle_tests.Tpo -c -o test/test_bitcoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-merkle_tests.Tpo test/$(DEPDIR)/test_bitcoin-merkle_tests.Po
#	$(AM_V_CXX)source='test/merkle_tests.cpp' object='test/test_bitcoin-merkle_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-merkle_tests.obj `if test -f 'test/merkle_tests.cpp'; then $(CYGPATH_W) 'test/merkle_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkle_tests.cpp'; fi`

test/test_bitcoin-merkletreefile_readwrite_tests.o: test/merkletreefile_readwrite_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-merkletreefile_readwrite_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Tpo -c -o test/test_bitcoin-merkletreefile_readwrite_tests.o `test -f 'test/merkletreefile_readwrite_tests.cpp' || echo '$(srcdir)/'`test/merkletreefile_readwrite_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Tpo test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Po
#	$(AM_V_CXX)source='test/merkletreefile_readwrite_tests.cpp' object='test/test_bitcoin-merkletreefile_readwrite_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-merkletreefile_readwrite_tests.o `test -f 'test/merkletreefile_readwrite_tests.cpp' || echo '$(srcdir)/'`test/merkletreefile_readwrite_tests.cpp

test/test_bitcoin-merkletreefile_readwrite_tests.obj: test/merkletreefile_readwrite_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-merkletreefile_readwrite_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Tpo -c -o test/test_bitcoin-merkletreefile_readwrite_tests.obj `if test -f 'test/merkletreefile_readwrite_tests.cpp'; then $(CYGPATH_W) 'test/merkletreefile_readwrite_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkletreefile_readwrite_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Tpo test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Po
#	$(AM_V_CXX)source='test/merkletreefile_readwrite_tests.cpp' object='test/test_bitcoin-merkletreefile_readwrite_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-merkletreefile_readwrite_tests.obj `if test -f 'test/merkletreefile_readwrite_tests.cpp'; then $(CYGPATH_W) 'test/merkletreefile_readwrite_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/merkletreefile_readwrite_tests.cpp'; fi`

test/test_bitcoin-mining_group_builder_tests.o: test/mining_group_builder_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mining_group_builder_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Tpo -c -o test/test_bitcoin-mining_group_builder_tests.o `test -f 'test/mining_group_builder_tests.cpp' || echo '$(srcdir)/'`test/mining_group_builder_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Tpo test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Po
#	$(AM_V_CXX)source='test/mining_group_builder_tests.cpp' object='test/test_bitcoin-mining_group_builder_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mining_group_builder_tests.o `test -f 'test/mining_group_builder_tests.cpp' || echo '$(srcdir)/'`test/mining_group_builder_tests.cpp

test/test_bitcoin-mining_group_builder_tests.obj: test/mining_group_builder_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-mining_group_builder_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Tpo -c -o test/test_bitcoin-mining_group_builder_tests.obj `if test -f 'test/mining_group_builder_tests.cpp'; then $(CYGPATH_W) 'test/mining_group_builder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mining_group_builder_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Tpo test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Po
#	$(AM_V_CXX)source='test/mining_group_builder_tests.cpp' object='test/test_bitcoin-mining_group_builder_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-mining_group_builder_tests.obj `if test -f 'test/mining_group_builder_tests.cpp'; then $(CYGPATH_W) 'test/mining_group_builder_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mining_group_builder_tests.cpp'; fi`

test/test_bitcoin-miner_id_db_tests.o: test/miner_id_db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_id_db_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Tpo -c -o test/test_bitcoin-miner_id_db_tests.o `test -f 'test/miner_id_db_tests.cpp' || echo '$(srcdir)/'`test/miner_id_db_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Po
#	$(AM_V_CXX)source='test/miner_id_db_tests.cpp' object='test/test_bitcoin-miner_id_db_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_id_db_tests.o `test -f 'test/miner_id_db_tests.cpp' || echo '$(srcdir)/'`test/miner_id_db_tests.cpp

test/test_bitcoin-miner_id_db_tests.obj: test/miner_id_db_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_id_db_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Tpo -c -o test/test_bitcoin-miner_id_db_tests.obj `if test -f 'test/miner_id_db_tests.cpp'; then $(CYGPATH_W) 'test/miner_id_db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_id_db_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Po
#	$(AM_V_CXX)source='test/miner_id_db_tests.cpp' object='test/test_bitcoin-miner_id_db_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_id_db_tests.obj `if test -f 'test/miner_id_db_tests.cpp'; then $(CYGPATH_W) 'test/miner_id_db_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_id_db_tests.cpp'; fi`

test/test_bitcoin-miner_id_db_tests3.o: test/miner_id_db_tests3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_id_db_tests3.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Tpo -c -o test/test_bitcoin-miner_id_db_tests3.o `test -f 'test/miner_id_db_tests3.cpp' || echo '$(srcdir)/'`test/miner_id_db_tests3.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Tpo test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Po
#	$(AM_V_CXX)source='test/miner_id_db_tests3.cpp' object='test/test_bitcoin-miner_id_db_tests3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_id_db_tests3.o `test -f 'test/miner_id_db_tests3.cpp' || echo '$(srcdir)/'`test/miner_id_db_tests3.cpp

test/test_bitcoin-miner_id_db_tests3.obj: test/miner_id_db_tests3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_id_db_tests3.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Tpo -c -o test/test_bitcoin-miner_id_db_tests3.obj `if test -f 'test/miner_id_db_tests3.cpp'; then $(CYGPATH_W) 'test/miner_id_db_tests3.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_id_db_tests3.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Tpo test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Po
#	$(AM_V_CXX)source='test/miner_id_db_tests3.cpp' object='test/test_bitcoin-miner_id_db_tests3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_id_db_tests3.obj `if test -f 'test/miner_id_db_tests3.cpp'; then $(CYGPATH_W) 'test/miner_id_db_tests3.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_id_db_tests3.cpp'; fi`

test/test_bitcoin-miner_info_tests.o: test/miner_info_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_tests.Tpo -c -o test/test_bitcoin-miner_info_tests.o `test -f 'test/miner_info_tests.cpp' || echo '$(srcdir)/'`test/miner_info_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_tests.Po
#	$(AM_V_CXX)source='test/miner_info_tests.cpp' object='test/test_bitcoin-miner_info_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_tests.o `test -f 'test/miner_info_tests.cpp' || echo '$(srcdir)/'`test/miner_info_tests.cpp

test/test_bitcoin-miner_info_tests.obj: test/miner_info_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_tests.Tpo -c -o test/test_bitcoin-miner_info_tests.obj `if test -f 'test/miner_info_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_tests.Po
#	$(AM_V_CXX)source='test/miner_info_tests.cpp' object='test/test_bitcoin-miner_info_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_tests.obj `if test -f 'test/miner_info_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_tests.cpp'; fi`

test/test_bitcoin-miner_info_doc_tests.o: test/miner_info_doc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_doc_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Tpo -c -o test/test_bitcoin-miner_info_doc_tests.o `test -f 'test/miner_info_doc_tests.cpp' || echo '$(srcdir)/'`test/miner_info_doc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Po
#	$(AM_V_CXX)source='test/miner_info_doc_tests.cpp' object='test/test_bitcoin-miner_info_doc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_doc_tests.o `test -f 'test/miner_info_doc_tests.cpp' || echo '$(srcdir)/'`test/miner_info_doc_tests.cpp

test/test_bitcoin-miner_info_doc_tests.obj: test/miner_info_doc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_doc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Tpo -c -o test/test_bitcoin-miner_info_doc_tests.obj `if test -f 'test/miner_info_doc_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_doc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_doc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Po
#	$(AM_V_CXX)source='test/miner_info_doc_tests.cpp' object='test/test_bitcoin-miner_info_doc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_doc_tests.obj `if test -f 'test/miner_info_doc_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_doc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_doc_tests.cpp'; fi`

test/test_bitcoin-miner_info_error_tests.o: test/miner_info_error_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_error_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Tpo -c -o test/test_bitcoin-miner_info_error_tests.o `test -f 'test/miner_info_error_tests.cpp' || echo '$(srcdir)/'`test/miner_info_error_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Po
#	$(AM_V_CXX)source='test/miner_info_error_tests.cpp' object='test/test_bitcoin-miner_info_error_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_error_tests.o `test -f 'test/miner_info_error_tests.cpp' || echo '$(srcdir)/'`test/miner_info_error_tests.cpp

test/test_bitcoin-miner_info_error_tests.obj: test/miner_info_error_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_error_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Tpo -c -o test/test_bitcoin-miner_info_error_tests.obj `if test -f 'test/miner_info_error_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_error_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_error_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Po
#	$(AM_V_CXX)source='test/miner_info_error_tests.cpp' object='test/test_bitcoin-miner_info_error_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_error_tests.obj `if test -f 'test/miner_info_error_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_error_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_error_tests.cpp'; fi`

test/test_bitcoin-miner_info_ref_tests.o: test/miner_info_ref_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_ref_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Tpo -c -o test/test_bitcoin-miner_info_ref_tests.o `test -f 'test/miner_info_ref_tests.cpp' || echo '$(srcdir)/'`test/miner_info_ref_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Po
#	$(AM_V_CXX)source='test/miner_info_ref_tests.cpp' object='test/test_bitcoin-miner_info_ref_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_ref_tests.o `test -f 'test/miner_info_ref_tests.cpp' || echo '$(srcdir)/'`test/miner_info_ref_tests.cpp

test/test_bitcoin-miner_info_ref_tests.obj: test/miner_info_ref_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_info_ref_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Tpo -c -o test/test_bitcoin-miner_info_ref_tests.obj `if test -f 'test/miner_info_ref_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_ref_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_ref_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Po
#	$(AM_V_CXX)source='test/miner_info_ref_tests.cpp' object='test/test_bitcoin-miner_info_ref_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_info_ref_tests.obj `if test -f 'test/miner_info_ref_tests.cpp'; then $(CYGPATH_W) 'test/miner_info_ref_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_info_ref_tests.cpp'; fi`

test/test_bitcoin-miner_tests.o: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_tests.Tpo -c -o test/test_bitcoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_bitcoin-miner_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp

test/test_bitcoin-miner_tests.obj: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-miner_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-miner_tests.Tpo -c -o test/test_bitcoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-miner_tests.Tpo test/$(DEPDIR)/test_bitcoin-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_bitcoin-miner_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`

test/test_bitcoin-minerid_tests.o: test/minerid_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-minerid_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-minerid_tests.Tpo -c -o test/test_bitcoin-minerid_tests.o `test -f 'test/minerid_tests.cpp' || echo '$(srcdir)/'`test/minerid_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-minerid_tests.Tpo test/$(DEPDIR)/test_bitcoin-minerid_tests.Po
#	$(AM_V_CXX)source='test/minerid_tests.cpp' object='test/test_bitcoin-minerid_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-minerid_tests.o `test -f 'test/minerid_tests.cpp' || echo '$(srcdir)/'`test/minerid_tests.cpp

test/test_bitcoin-minerid_tests.obj: test/minerid_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-minerid_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-minerid_tests.Tpo -c -o test/test_bitcoin-minerid_tests.obj `if test -f 'test/minerid_tests.cpp'; then $(CYGPATH_W) 'test/minerid_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/minerid_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-minerid_tests.Tpo test/$(DEPDIR)/test_bitcoin-minerid_tests.Po
#	$(AM_V_CXX)source='test/minerid_tests.cpp' object='test/test_bitcoin-minerid_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-minerid_tests.obj `if test -f 'test/minerid_tests.cpp'; then $(CYGPATH_W) 'test/minerid_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/minerid_tests.cpp'; fi`

test/test_bitcoin-msg_buffer_tests.o: test/msg_buffer_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-msg_buffer_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Tpo -c -o test/test_bitcoin-msg_buffer_tests.o `test -f 'test/msg_buffer_tests.cpp' || echo '$(srcdir)/'`test/msg_buffer_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Tpo test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Po
#	$(AM_V_CXX)source='test/msg_buffer_tests.cpp' object='test/test_bitcoin-msg_buffer_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-msg_buffer_tests.o `test -f 'test/msg_buffer_tests.cpp' || echo '$(srcdir)/'`test/msg_buffer_tests.cpp

test/test_bitcoin-msg_buffer_tests.obj: test/msg_buffer_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-msg_buffer_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Tpo -c -o test/test_bitcoin-msg_buffer_tests.obj `if test -f 'test/msg_buffer_tests.cpp'; then $(CYGPATH_W) 'test/msg_buffer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/msg_buffer_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Tpo test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Po
#	$(AM_V_CXX)source='test/msg_buffer_tests.cpp' object='test/test_bitcoin-msg_buffer_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-msg_buffer_tests.obj `if test -f 'test/msg_buffer_tests.cpp'; then $(CYGPATH_W) 'test/msg_buffer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/msg_buffer_tests.cpp'; fi`

test/test_bitcoin-msg_parser_buffer_tests.o: test/msg_parser_buffer_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-msg_parser_buffer_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Tpo -c -o test/test_bitcoin-msg_parser_buffer_tests.o `test -f 'test/msg_parser_buffer_tests.cpp' || echo '$(srcdir)/'`test/msg_parser_buffer_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Tpo test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Po
#	$(AM_V_CXX)source='test/msg_parser_buffer_tests.cpp' object='test/test_bitcoin-msg_parser_buffer_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-msg_parser_buffer_tests.o `test -f 'test/msg_parser_buffer_tests.cpp' || echo '$(srcdir)/'`test/msg_parser_buffer_tests.cpp

test/test_bitcoin-msg_parser_buffer_tests.obj: test/msg_parser_buffer_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-msg_parser_buffer_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Tpo -c -o test/test_bitcoin-msg_parser_buffer_tests.obj `if test -f 'test/msg_parser_buffer_tests.cpp'; then $(CYGPATH_W) 'test/msg_parser_buffer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/msg_parser_buffer_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Tpo test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Po
#	$(AM_V_CXX)source='test/msg_parser_buffer_tests.cpp' object='test/test_bitcoin-msg_parser_buffer_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-msg_parser_buffer_tests.obj `if test -f 'test/msg_parser_buffer_tests.cpp'; then $(CYGPATH_W) 'test/msg_parser_buffer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/msg_parser_buffer_tests.cpp'; fi`

test/test_bitcoin-multisig_tests.o: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-multisig_tests.Tpo -c -o test/test_bitcoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-multisig_tests.Tpo test/$(DEPDIR)/test_bitcoin-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_bitcoin-multisig_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp

test/test_bitcoin-multisig_tests.obj: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-multisig_tests.Tpo -c -o test/test_bitcoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-multisig_tests.Tpo test/$(DEPDIR)/test_bitcoin-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_bitcoin-multisig_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`

test/test_bitcoin-net_association_tests.o: test/net_association_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_association_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_association_tests.Tpo -c -o test/test_bitcoin-net_association_tests.o `test -f 'test/net_association_tests.cpp' || echo '$(srcdir)/'`test/net_association_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_association_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_association_tests.Po
#	$(AM_V_CXX)source='test/net_association_tests.cpp' object='test/test_bitcoin-net_association_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_association_tests.o `test -f 'test/net_association_tests.cpp' || echo '$(srcdir)/'`test/net_association_tests.cpp

test/test_bitcoin-net_association_tests.obj: test/net_association_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_association_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_association_tests.Tpo -c -o test/test_bitcoin-net_association_tests.obj `if test -f 'test/net_association_tests.cpp'; then $(CYGPATH_W) 'test/net_association_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_association_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_association_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_association_tests.Po
#	$(AM_V_CXX)source='test/net_association_tests.cpp' object='test/test_bitcoin-net_association_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_association_tests.obj `if test -f 'test/net_association_tests.cpp'; then $(CYGPATH_W) 'test/net_association_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_association_tests.cpp'; fi`

test/test_bitcoin-net_message_tests.o: test/net_message_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_message_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_message_tests.Tpo -c -o test/test_bitcoin-net_message_tests.o `test -f 'test/net_message_tests.cpp' || echo '$(srcdir)/'`test/net_message_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_message_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_message_tests.Po
#	$(AM_V_CXX)source='test/net_message_tests.cpp' object='test/test_bitcoin-net_message_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_message_tests.o `test -f 'test/net_message_tests.cpp' || echo '$(srcdir)/'`test/net_message_tests.cpp

test/test_bitcoin-net_message_tests.obj: test/net_message_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_message_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_message_tests.Tpo -c -o test/test_bitcoin-net_message_tests.obj `if test -f 'test/net_message_tests.cpp'; then $(CYGPATH_W) 'test/net_message_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_message_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_message_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_message_tests.Po
#	$(AM_V_CXX)source='test/net_message_tests.cpp' object='test/test_bitcoin-net_message_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_message_tests.obj `if test -f 'test/net_message_tests.cpp'; then $(CYGPATH_W) 'test/net_message_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_message_tests.cpp'; fi`

test/test_bitcoin-net_message_maker_tests.o: test/net_message_maker_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_message_maker_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Tpo -c -o test/test_bitcoin-net_message_maker_tests.o `test -f 'test/net_message_maker_tests.cpp' || echo '$(srcdir)/'`test/net_message_maker_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Po
#	$(AM_V_CXX)source='test/net_message_maker_tests.cpp' object='test/test_bitcoin-net_message_maker_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_message_maker_tests.o `test -f 'test/net_message_maker_tests.cpp' || echo '$(srcdir)/'`test/net_message_maker_tests.cpp

test/test_bitcoin-net_message_maker_tests.obj: test/net_message_maker_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_message_maker_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Tpo -c -o test/test_bitcoin-net_message_maker_tests.obj `if test -f 'test/net_message_maker_tests.cpp'; then $(CYGPATH_W) 'test/net_message_maker_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_message_maker_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Po
#	$(AM_V_CXX)source='test/net_message_maker_tests.cpp' object='test/test_bitcoin-net_message_maker_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_message_maker_tests.obj `if test -f 'test/net_message_maker_tests.cpp'; then $(CYGPATH_W) 'test/net_message_maker_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_message_maker_tests.cpp'; fi`

test/test_bitcoin-net_tests.o: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_tests.Tpo -c -o test/test_bitcoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_bitcoin-net_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_tests.o `test -f 'test/net_tests.cpp' || echo '$(srcdir)/'`test/net_tests.cpp

test/test_bitcoin-net_tests.obj: test/net_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-net_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-net_tests.Tpo -c -o test/test_bitcoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-net_tests.Tpo test/$(DEPDIR)/test_bitcoin-net_tests.Po
#	$(AM_V_CXX)source='test/net_tests.cpp' object='test/test_bitcoin-net_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-net_tests.obj `if test -f 'test/net_tests.cpp'; then $(CYGPATH_W) 'test/net_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/net_tests.cpp'; fi`

test/test_bitcoin-netbase_tests.o: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-netbase_tests.Tpo -c -o test/test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_bitcoin-netbase_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp

test/test_bitcoin-netbase_tests.obj: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-netbase_tests.Tpo -c -o test/test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_bitcoin-netbase_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`

test/test_bitcoin-object_stream_deserialization_tests.o: test/object_stream_deserialization_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-object_stream_deserialization_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Tpo -c -o test/test_bitcoin-object_stream_deserialization_tests.o `test -f 'test/object_stream_deserialization_tests.cpp' || echo '$(srcdir)/'`test/object_stream_deserialization_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Tpo test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Po
#	$(AM_V_CXX)source='test/object_stream_deserialization_tests.cpp' object='test/test_bitcoin-object_stream_deserialization_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-object_stream_deserialization_tests.o `test -f 'test/object_stream_deserialization_tests.cpp' || echo '$(srcdir)/'`test/object_stream_deserialization_tests.cpp

test/test_bitcoin-object_stream_deserialization_tests.obj: test/object_stream_deserialization_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-object_stream_deserialization_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Tpo -c -o test/test_bitcoin-object_stream_deserialization_tests.obj `if test -f 'test/object_stream_deserialization_tests.cpp'; then $(CYGPATH_W) 'test/object_stream_deserialization_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/object_stream_deserialization_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Tpo test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Po
#	$(AM_V_CXX)source='test/object_stream_deserialization_tests.cpp' object='test/test_bitcoin-object_stream_deserialization_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-object_stream_deserialization_tests.obj `if test -f 'test/object_stream_deserialization_tests.cpp'; then $(CYGPATH_W) 'test/object_stream_deserialization_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/object_stream_deserialization_tests.cpp'; fi`

test/test_bitcoin-opcode_tests.o: test/opcode_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-opcode_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-opcode_tests.Tpo -c -o test/test_bitcoin-opcode_tests.o `test -f 'test/opcode_tests.cpp' || echo '$(srcdir)/'`test/opcode_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-opcode_tests.Tpo test/$(DEPDIR)/test_bitcoin-opcode_tests.Po
#	$(AM_V_CXX)source='test/opcode_tests.cpp' object='test/test_bitcoin-opcode_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-opcode_tests.o `test -f 'test/opcode_tests.cpp' || echo '$(srcdir)/'`test/opcode_tests.cpp

test/test_bitcoin-opcode_tests.obj: test/opcode_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-opcode_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-opcode_tests.Tpo -c -o test/test_bitcoin-opcode_tests.obj `if test -f 'test/opcode_tests.cpp'; then $(CYGPATH_W) 'test/opcode_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/opcode_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-opcode_tests.Tpo test/$(DEPDIR)/test_bitcoin-opcode_tests.Po
#	$(AM_V_CXX)source='test/opcode_tests.cpp' object='test/test_bitcoin-opcode_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-opcode_tests.obj `if test -f 'test/opcode_tests.cpp'; then $(CYGPATH_W) 'test/opcode_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/opcode_tests.cpp'; fi`

test/test_bitcoin-pmt_tests.o: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-pmt_tests.Tpo -c -o test/test_bitcoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-pmt_tests.Tpo test/$(DEPDIR)/test_bitcoin-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_bitcoin-pmt_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp

test/test_bitcoin-pmt_tests.obj: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-pmt_tests.Tpo -c -o test/test_bitcoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-pmt_tests.Tpo test/$(DEPDIR)/test_bitcoin-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_bitcoin-pmt_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`

test/test_bitcoin-prefilled_tx_parser_tests.o: test/prefilled_tx_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-prefilled_tx_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Tpo -c -o test/test_bitcoin-prefilled_tx_parser_tests.o `test -f 'test/prefilled_tx_parser_tests.cpp' || echo '$(srcdir)/'`test/prefilled_tx_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Po
#	$(AM_V_CXX)source='test/prefilled_tx_parser_tests.cpp' object='test/test_bitcoin-prefilled_tx_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-prefilled_tx_parser_tests.o `test -f 'test/prefilled_tx_parser_tests.cpp' || echo '$(srcdir)/'`test/prefilled_tx_parser_tests.cpp

test/test_bitcoin-prefilled_tx_parser_tests.obj: test/prefilled_tx_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-prefilled_tx_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Tpo -c -o test/test_bitcoin-prefilled_tx_parser_tests.obj `if test -f 'test/prefilled_tx_parser_tests.cpp'; then $(CYGPATH_W) 'test/prefilled_tx_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prefilled_tx_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Po
#	$(AM_V_CXX)source='test/prefilled_tx_parser_tests.cpp' object='test/test_bitcoin-prefilled_tx_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-prefilled_tx_parser_tests.obj `if test -f 'test/prefilled_tx_parser_tests.cpp'; then $(CYGPATH_W) 'test/prefilled_tx_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prefilled_tx_parser_tests.cpp'; fi`

test/test_bitcoin-prefilled_txs_parser_tests.o: test/prefilled_txs_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-prefilled_txs_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Tpo -c -o test/test_bitcoin-prefilled_txs_parser_tests.o `test -f 'test/prefilled_txs_parser_tests.cpp' || echo '$(srcdir)/'`test/prefilled_txs_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Po
#	$(AM_V_CXX)source='test/prefilled_txs_parser_tests.cpp' object='test/test_bitcoin-prefilled_txs_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-prefilled_txs_parser_tests.o `test -f 'test/prefilled_txs_parser_tests.cpp' || echo '$(srcdir)/'`test/prefilled_txs_parser_tests.cpp

test/test_bitcoin-prefilled_txs_parser_tests.obj: test/prefilled_txs_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-prefilled_txs_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Tpo -c -o test/test_bitcoin-prefilled_txs_parser_tests.obj `if test -f 'test/prefilled_txs_parser_tests.cpp'; then $(CYGPATH_W) 'test/prefilled_txs_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prefilled_txs_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Po
#	$(AM_V_CXX)source='test/prefilled_txs_parser_tests.cpp' object='test/test_bitcoin-prefilled_txs_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-prefilled_txs_parser_tests.obj `if test -f 'test/prefilled_txs_parser_tests.cpp'; then $(CYGPATH_W) 'test/prefilled_txs_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prefilled_txs_parser_tests.cpp'; fi`

test/test_bitcoin-pow_tests.o: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-pow_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-pow_tests.Tpo -c -o test/test_bitcoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-pow_tests.Tpo test/$(DEPDIR)/test_bitcoin-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_bitcoin-pow_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp

test/test_bitcoin-pow_tests.obj: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-pow_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-pow_tests.Tpo -c -o test/test_bitcoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-pow_tests.Tpo test/$(DEPDIR)/test_bitcoin-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_bitcoin-pow_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`

test/test_bitcoin-prevector_tests.o: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-prevector_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-prevector_tests.Tpo -c -o test/test_bitcoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-prevector_tests.Tpo test/$(DEPDIR)/test_bitcoin-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_bitcoin-prevector_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-prevector_tests.o `test -f 'test/prevector_tests.cpp' || echo '$(srcdir)/'`test/prevector_tests.cpp

test/test_bitcoin-prevector_tests.obj: test/prevector_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-prevector_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-prevector_tests.Tpo -c -o test/test_bitcoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-prevector_tests.Tpo test/$(DEPDIR)/test_bitcoin-prevector_tests.Po
#	$(AM_V_CXX)source='test/prevector_tests.cpp' object='test/test_bitcoin-prevector_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-prevector_tests.obj `if test -f 'test/prevector_tests.cpp'; then $(CYGPATH_W) 'test/prevector_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/prevector_tests.cpp'; fi`

test/test_bitcoin-protocol_tests.o: test/protocol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-protocol_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-protocol_tests.Tpo -c -o test/test_bitcoin-protocol_tests.o `test -f 'test/protocol_tests.cpp' || echo '$(srcdir)/'`test/protocol_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-protocol_tests.Tpo test/$(DEPDIR)/test_bitcoin-protocol_tests.Po
#	$(AM_V_CXX)source='test/protocol_tests.cpp' object='test/test_bitcoin-protocol_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-protocol_tests.o `test -f 'test/protocol_tests.cpp' || echo '$(srcdir)/'`test/protocol_tests.cpp

test/test_bitcoin-protocol_tests.obj: test/protocol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-protocol_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-protocol_tests.Tpo -c -o test/test_bitcoin-protocol_tests.obj `if test -f 'test/protocol_tests.cpp'; then $(CYGPATH_W) 'test/protocol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/protocol_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-protocol_tests.Tpo test/$(DEPDIR)/test_bitcoin-protocol_tests.Po
#	$(AM_V_CXX)source='test/protocol_tests.cpp' object='test/test_bitcoin-protocol_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-protocol_tests.obj `if test -f 'test/protocol_tests.cpp'; then $(CYGPATH_W) 'test/protocol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/protocol_tests.cpp'; fi`

test/test_bitcoin-raii_event_tests.o: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-raii_event_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-raii_event_tests.Tpo -c -o test/test_bitcoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-raii_event_tests.Tpo test/$(DEPDIR)/test_bitcoin-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_bitcoin-raii_event_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp

test/test_bitcoin-raii_event_tests.obj: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-raii_event_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-raii_event_tests.Tpo -c -o test/test_bitcoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-raii_event_tests.Tpo test/$(DEPDIR)/test_bitcoin-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_bitcoin-raii_event_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`

test/test_bitcoin-random_tests.o: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-random_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-random_tests.Tpo -c -o test/test_bitcoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-random_tests.Tpo test/$(DEPDIR)/test_bitcoin-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_bitcoin-random_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-random_tests.o `test -f 'test/random_tests.cpp' || echo '$(srcdir)/'`test/random_tests.cpp

test/test_bitcoin-random_tests.obj: test/random_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-random_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-random_tests.Tpo -c -o test/test_bitcoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-random_tests.Tpo test/$(DEPDIR)/test_bitcoin-random_tests.Po
#	$(AM_V_CXX)source='test/random_tests.cpp' object='test/test_bitcoin-random_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-random_tests.obj `if test -f 'test/random_tests.cpp'; then $(CYGPATH_W) 'test/random_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/random_tests.cpp'; fi`

test/test_bitcoin-reverselock_tests.o: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-reverselock_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-reverselock_tests.Tpo -c -o test/test_bitcoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-reverselock_tests.Tpo test/$(DEPDIR)/test_bitcoin-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_bitcoin-reverselock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp

test/test_bitcoin-reverselock_tests.obj: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-reverselock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-reverselock_tests.Tpo -c -o test/test_bitcoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-reverselock_tests.Tpo test/$(DEPDIR)/test_bitcoin-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_bitcoin-reverselock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`

test/test_bitcoin-revokemid_tests.o: test/revokemid_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-revokemid_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-revokemid_tests.Tpo -c -o test/test_bitcoin-revokemid_tests.o `test -f 'test/revokemid_tests.cpp' || echo '$(srcdir)/'`test/revokemid_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-revokemid_tests.Tpo test/$(DEPDIR)/test_bitcoin-revokemid_tests.Po
#	$(AM_V_CXX)source='test/revokemid_tests.cpp' object='test/test_bitcoin-revokemid_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-revokemid_tests.o `test -f 'test/revokemid_tests.cpp' || echo '$(srcdir)/'`test/revokemid_tests.cpp

test/test_bitcoin-revokemid_tests.obj: test/revokemid_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-revokemid_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-revokemid_tests.Tpo -c -o test/test_bitcoin-revokemid_tests.obj `if test -f 'test/revokemid_tests.cpp'; then $(CYGPATH_W) 'test/revokemid_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/revokemid_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-revokemid_tests.Tpo test/$(DEPDIR)/test_bitcoin-revokemid_tests.Po
#	$(AM_V_CXX)source='test/revokemid_tests.cpp' object='test/test_bitcoin-revokemid_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-revokemid_tests.obj `if test -f 'test/revokemid_tests.cpp'; then $(CYGPATH_W) 'test/revokemid_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/revokemid_tests.cpp'; fi`

test/test_bitcoin-rpc_tests.o: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-rpc_tests.Tpo -c -o test/test_bitcoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-rpc_tests.Tpo test/$(DEPDIR)/test_bitcoin-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_bitcoin-rpc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp

test/test_bitcoin-rpc_tests.obj: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-rpc_tests.Tpo -c -o test/test_bitcoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-rpc_tests.Tpo test/$(DEPDIR)/test_bitcoin-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_bitcoin-rpc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`

test/test_bitcoin-sanity_tests.o: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sanity_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sanity_tests.Tpo -c -o test/test_bitcoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sanity_tests.Tpo test/$(DEPDIR)/test_bitcoin-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_bitcoin-sanity_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp

test/test_bitcoin-sanity_tests.obj: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sanity_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sanity_tests.Tpo -c -o test/test_bitcoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sanity_tests.Tpo test/$(DEPDIR)/test_bitcoin-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_bitcoin-sanity_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`

test/test_bitcoin-scheduler_tests.o: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-scheduler_tests.Tpo -c -o test/test_bitcoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-scheduler_tests.Tpo test/$(DEPDIR)/test_bitcoin-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_bitcoin-scheduler_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp

test/test_bitcoin-scheduler_tests.obj: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-scheduler_tests.Tpo -c -o test/test_bitcoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-scheduler_tests.Tpo test/$(DEPDIR)/test_bitcoin-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_bitcoin-scheduler_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`

test/test_bitcoin-script_P2SH_tests.o: test/script_P2SH_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-script_P2SH_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Tpo -c -o test/test_bitcoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Po
#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_bitcoin-script_P2SH_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp

test/test_bitcoin-script_P2SH_tests.obj: test/script_P2SH_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-script_P2SH_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Tpo -c -o test/test_bitcoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Po
#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_bitcoin-script_P2SH_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`

test/test_bitcoin-script_tests.o: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-script_tests.Tpo -c -o test/test_bitcoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-script_tests.Tpo test/$(DEPDIR)/test_bitcoin-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_bitcoin-script_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp

test/test_bitcoin-script_tests.obj: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-script_tests.Tpo -c -o test/test_bitcoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-script_tests.Tpo test/$(DEPDIR)/test_bitcoin-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_bitcoin-script_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`

test/test_bitcoin-scriptflags.o: test/scriptflags.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-scriptflags.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-scriptflags.Tpo -c -o test/test_bitcoin-scriptflags.o `test -f 'test/scriptflags.cpp' || echo '$(srcdir)/'`test/scriptflags.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-scriptflags.Tpo test/$(DEPDIR)/test_bitcoin-scriptflags.Po
#	$(AM_V_CXX)source='test/scriptflags.cpp' object='test/test_bitcoin-scriptflags.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-scriptflags.o `test -f 'test/scriptflags.cpp' || echo '$(srcdir)/'`test/scriptflags.cpp

test/test_bitcoin-scriptflags.obj: test/scriptflags.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-scriptflags.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-scriptflags.Tpo -c -o test/test_bitcoin-scriptflags.obj `if test -f 'test/scriptflags.cpp'; then $(CYGPATH_W) 'test/scriptflags.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptflags.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-scriptflags.Tpo test/$(DEPDIR)/test_bitcoin-scriptflags.Po
#	$(AM_V_CXX)source='test/scriptflags.cpp' object='test/test_bitcoin-scriptflags.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-scriptflags.obj `if test -f 'test/scriptflags.cpp'; then $(CYGPATH_W) 'test/scriptflags.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptflags.cpp'; fi`

test/test_bitcoin-scriptnum_tests.o: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-scriptnum_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Tpo -c -o test/test_bitcoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_bitcoin-scriptnum_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp

test/test_bitcoin-scriptnum_tests.obj: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-scriptnum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Tpo -c -o test/test_bitcoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_bitcoin-scriptnum_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`

test/test_bitcoin-serialize_tests.o: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-serialize_tests.Tpo -c -o test/test_bitcoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-serialize_tests.Tpo test/$(DEPDIR)/test_bitcoin-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_bitcoin-serialize_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp

test/test_bitcoin-serialize_tests.obj: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-serialize_tests.Tpo -c -o test/test_bitcoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-serialize_tests.Tpo test/$(DEPDIR)/test_bitcoin-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_bitcoin-serialize_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`

test/test_bitcoin-sighash_tests.o: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sighash_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sighash_tests.Tpo -c -o test/test_bitcoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sighash_tests.Tpo test/$(DEPDIR)/test_bitcoin-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_bitcoin-sighash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp

test/test_bitcoin-sighash_tests.obj: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sighash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sighash_tests.Tpo -c -o test/test_bitcoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sighash_tests.Tpo test/$(DEPDIR)/test_bitcoin-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_bitcoin-sighash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`

test/test_bitcoin-sighashtype_tests.o: test/sighashtype_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sighashtype_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Tpo -c -o test/test_bitcoin-sighashtype_tests.o `test -f 'test/sighashtype_tests.cpp' || echo '$(srcdir)/'`test/sighashtype_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Tpo test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Po
#	$(AM_V_CXX)source='test/sighashtype_tests.cpp' object='test/test_bitcoin-sighashtype_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sighashtype_tests.o `test -f 'test/sighashtype_tests.cpp' || echo '$(srcdir)/'`test/sighashtype_tests.cpp

test/test_bitcoin-sighashtype_tests.obj: test/sighashtype_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sighashtype_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Tpo -c -o test/test_bitcoin-sighashtype_tests.obj `if test -f 'test/sighashtype_tests.cpp'; then $(CYGPATH_W) 'test/sighashtype_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighashtype_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Tpo test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Po
#	$(AM_V_CXX)source='test/sighashtype_tests.cpp' object='test/test_bitcoin-sighashtype_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sighashtype_tests.obj `if test -f 'test/sighashtype_tests.cpp'; then $(CYGPATH_W) 'test/sighashtype_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighashtype_tests.cpp'; fi`

test/test_bitcoin-sigopcount_tests.o: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Tpo -c -o test/test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_bitcoin-sigopcount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp

test/test_bitcoin-sigopcount_tests.obj: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Tpo -c -o test/test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_bitcoin-sigopcount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`

test/test_bitcoin-sigutil.o: test/sigutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sigutil.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sigutil.Tpo -c -o test/test_bitcoin-sigutil.o `test -f 'test/sigutil.cpp' || echo '$(srcdir)/'`test/sigutil.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sigutil.Tpo test/$(DEPDIR)/test_bitcoin-sigutil.Po
#	$(AM_V_CXX)source='test/sigutil.cpp' object='test/test_bitcoin-sigutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sigutil.o `test -f 'test/sigutil.cpp' || echo '$(srcdir)/'`test/sigutil.cpp

test/test_bitcoin-sigutil.obj: test/sigutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-sigutil.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-sigutil.Tpo -c -o test/test_bitcoin-sigutil.obj `if test -f 'test/sigutil.cpp'; then $(CYGPATH_W) 'test/sigutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigutil.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-sigutil.Tpo test/$(DEPDIR)/test_bitcoin-sigutil.Po
#	$(AM_V_CXX)source='test/sigutil.cpp' object='test/test_bitcoin-sigutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-sigutil.obj `if test -f 'test/sigutil.cpp'; then $(CYGPATH_W) 'test/sigutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigutil.cpp'; fi`

test/test_bitcoin-single_seg_parser_tests.o: test/single_seg_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-single_seg_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Tpo -c -o test/test_bitcoin-single_seg_parser_tests.o `test -f 'test/single_seg_parser_tests.cpp' || echo '$(srcdir)/'`test/single_seg_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Po
#	$(AM_V_CXX)source='test/single_seg_parser_tests.cpp' object='test/test_bitcoin-single_seg_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-single_seg_parser_tests.o `test -f 'test/single_seg_parser_tests.cpp' || echo '$(srcdir)/'`test/single_seg_parser_tests.cpp

test/test_bitcoin-single_seg_parser_tests.obj: test/single_seg_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-single_seg_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Tpo -c -o test/test_bitcoin-single_seg_parser_tests.obj `if test -f 'test/single_seg_parser_tests.cpp'; then $(CYGPATH_W) 'test/single_seg_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/single_seg_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Po
#	$(AM_V_CXX)source='test/single_seg_parser_tests.cpp' object='test/test_bitcoin-single_seg_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-single_seg_parser_tests.obj `if test -f 'test/single_seg_parser_tests.cpp'; then $(CYGPATH_W) 'test/single_seg_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/single_seg_parser_tests.cpp'; fi`

test/test_bitcoin-skiplist_tests.o: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-skiplist_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-skiplist_tests.Tpo -c -o test/test_bitcoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-skiplist_tests.Tpo test/$(DEPDIR)/test_bitcoin-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_bitcoin-skiplist_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp

test/test_bitcoin-skiplist_tests.obj: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-skiplist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-skiplist_tests.Tpo -c -o test/test_bitcoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-skiplist_tests.Tpo test/$(DEPDIR)/test_bitcoin-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_bitcoin-skiplist_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`

test/test_bitcoin-streams_tests.o: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-streams_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-streams_tests.Tpo -c -o test/test_bitcoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-streams_tests.Tpo test/$(DEPDIR)/test_bitcoin-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_bitcoin-streams_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-streams_tests.o `test -f 'test/streams_tests.cpp' || echo '$(srcdir)/'`test/streams_tests.cpp

test/test_bitcoin-streams_tests.obj: test/streams_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-streams_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-streams_tests.Tpo -c -o test/test_bitcoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-streams_tests.Tpo test/$(DEPDIR)/test_bitcoin-streams_tests.Po
#	$(AM_V_CXX)source='test/streams_tests.cpp' object='test/test_bitcoin-streams_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-streams_tests.obj `if test -f 'test/streams_tests.cpp'; then $(CYGPATH_W) 'test/streams_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/streams_tests.cpp'; fi`

test/test_bitcoin-stream_serialization_tests.o: test/stream_serialization_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-stream_serialization_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Tpo -c -o test/test_bitcoin-stream_serialization_tests.o `test -f 'test/stream_serialization_tests.cpp' || echo '$(srcdir)/'`test/stream_serialization_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Tpo test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Po
#	$(AM_V_CXX)source='test/stream_serialization_tests.cpp' object='test/test_bitcoin-stream_serialization_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-stream_serialization_tests.o `test -f 'test/stream_serialization_tests.cpp' || echo '$(srcdir)/'`test/stream_serialization_tests.cpp

test/test_bitcoin-stream_serialization_tests.obj: test/stream_serialization_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-stream_serialization_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Tpo -c -o test/test_bitcoin-stream_serialization_tests.obj `if test -f 'test/stream_serialization_tests.cpp'; then $(CYGPATH_W) 'test/stream_serialization_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/stream_serialization_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Tpo test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Po
#	$(AM_V_CXX)source='test/stream_serialization_tests.cpp' object='test/test_bitcoin-stream_serialization_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-stream_serialization_tests.obj `if test -f 'test/stream_serialization_tests.cpp'; then $(CYGPATH_W) 'test/stream_serialization_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/stream_serialization_tests.cpp'; fi`

test/test_bitcoin-string_writer_tests.o: test/string_writer_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-string_writer_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-string_writer_tests.Tpo -c -o test/test_bitcoin-string_writer_tests.o `test -f 'test/string_writer_tests.cpp' || echo '$(srcdir)/'`test/string_writer_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-string_writer_tests.Tpo test/$(DEPDIR)/test_bitcoin-string_writer_tests.Po
#	$(AM_V_CXX)source='test/string_writer_tests.cpp' object='test/test_bitcoin-string_writer_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-string_writer_tests.o `test -f 'test/string_writer_tests.cpp' || echo '$(srcdir)/'`test/string_writer_tests.cpp

test/test_bitcoin-string_writer_tests.obj: test/string_writer_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-string_writer_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-string_writer_tests.Tpo -c -o test/test_bitcoin-string_writer_tests.obj `if test -f 'test/string_writer_tests.cpp'; then $(CYGPATH_W) 'test/string_writer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/string_writer_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-string_writer_tests.Tpo test/$(DEPDIR)/test_bitcoin-string_writer_tests.Po
#	$(AM_V_CXX)source='test/string_writer_tests.cpp' object='test/test_bitcoin-string_writer_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-string_writer_tests.obj `if test -f 'test/string_writer_tests.cpp'; then $(CYGPATH_W) 'test/string_writer_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/string_writer_tests.cpp'; fi`

test/test_bitcoin-taskcancellation_tests.o: test/taskcancellation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-taskcancellation_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Tpo -c -o test/test_bitcoin-taskcancellation_tests.o `test -f 'test/taskcancellation_tests.cpp' || echo '$(srcdir)/'`test/taskcancellation_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Tpo test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Po
#	$(AM_V_CXX)source='test/taskcancellation_tests.cpp' object='test/test_bitcoin-taskcancellation_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-taskcancellation_tests.o `test -f 'test/taskcancellation_tests.cpp' || echo '$(srcdir)/'`test/taskcancellation_tests.cpp

test/test_bitcoin-taskcancellation_tests.obj: test/taskcancellation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-taskcancellation_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Tpo -c -o test/test_bitcoin-taskcancellation_tests.obj `if test -f 'test/taskcancellation_tests.cpp'; then $(CYGPATH_W) 'test/taskcancellation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/taskcancellation_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Tpo test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Po
#	$(AM_V_CXX)source='test/taskcancellation_tests.cpp' object='test/test_bitcoin-taskcancellation_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-taskcancellation_tests.obj `if test -f 'test/taskcancellation_tests.cpp'; then $(CYGPATH_W) 'test/taskcancellation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/taskcancellation_tests.cpp'; fi`

test/test_bitcoin-test_bitcoin.o: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_bitcoin.Tpo -c -o test/test_bitcoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_bitcoin.Tpo test/$(DEPDIR)/test_bitcoin-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_bitcoin-test_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp

test/test_bitcoin-test_bitcoin.obj: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_bitcoin.Tpo -c -o test/test_bitcoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_bitcoin.Tpo test/$(DEPDIR)/test_bitcoin-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_bitcoin-test_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`

test/test_bitcoin-test_bitcoin_main.o: test/test_bitcoin_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_bitcoin_main.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Tpo -c -o test/test_bitcoin-test_bitcoin_main.o `test -f 'test/test_bitcoin_main.cpp' || echo '$(srcdir)/'`test/test_bitcoin_main.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Tpo test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Po
#	$(AM_V_CXX)source='test/test_bitcoin_main.cpp' object='test/test_bitcoin-test_bitcoin_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_bitcoin_main.o `test -f 'test/test_bitcoin_main.cpp' || echo '$(srcdir)/'`test/test_bitcoin_main.cpp

test/test_bitcoin-test_bitcoin_main.obj: test/test_bitcoin_main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_bitcoin_main.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Tpo -c -o test/test_bitcoin-test_bitcoin_main.obj `if test -f 'test/test_bitcoin_main.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_main.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Tpo test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Po
#	$(AM_V_CXX)source='test/test_bitcoin_main.cpp' object='test/test_bitcoin-test_bitcoin_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_bitcoin_main.obj `if test -f 'test/test_bitcoin_main.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_main.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_main.cpp'; fi`

test/test_bitcoin-test_double_spend_detector.o: test/test_double_spend_detector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_double_spend_detector.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Tpo -c -o test/test_bitcoin-test_double_spend_detector.o `test -f 'test/test_double_spend_detector.cpp' || echo '$(srcdir)/'`test/test_double_spend_detector.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Tpo test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Po
#	$(AM_V_CXX)source='test/test_double_spend_detector.cpp' object='test/test_bitcoin-test_double_spend_detector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_double_spend_detector.o `test -f 'test/test_double_spend_detector.cpp' || echo '$(srcdir)/'`test/test_double_spend_detector.cpp

test/test_bitcoin-test_double_spend_detector.obj: test/test_double_spend_detector.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_double_spend_detector.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Tpo -c -o test/test_bitcoin-test_double_spend_detector.obj `if test -f 'test/test_double_spend_detector.cpp'; then $(CYGPATH_W) 'test/test_double_spend_detector.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_double_spend_detector.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Tpo test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Po
#	$(AM_V_CXX)source='test/test_double_spend_detector.cpp' object='test/test_bitcoin-test_double_spend_detector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_double_spend_detector.obj `if test -f 'test/test_double_spend_detector.cpp'; then $(CYGPATH_W) 'test/test_double_spend_detector.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_double_spend_detector.cpp'; fi`

test/test_bitcoin-test_orphantxns.o: test/test_orphantxns.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_orphantxns.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_orphantxns.Tpo -c -o test/test_bitcoin-test_orphantxns.o `test -f 'test/test_orphantxns.cpp' || echo '$(srcdir)/'`test/test_orphantxns.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_orphantxns.Tpo test/$(DEPDIR)/test_bitcoin-test_orphantxns.Po
#	$(AM_V_CXX)source='test/test_orphantxns.cpp' object='test/test_bitcoin-test_orphantxns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_orphantxns.o `test -f 'test/test_orphantxns.cpp' || echo '$(srcdir)/'`test/test_orphantxns.cpp

test/test_bitcoin-test_orphantxns.obj: test/test_orphantxns.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_orphantxns.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_orphantxns.Tpo -c -o test/test_bitcoin-test_orphantxns.obj `if test -f 'test/test_orphantxns.cpp'; then $(CYGPATH_W) 'test/test_orphantxns.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_orphantxns.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_orphantxns.Tpo test/$(DEPDIR)/test_bitcoin-test_orphantxns.Po
#	$(AM_V_CXX)source='test/test_orphantxns.cpp' object='test/test_bitcoin-test_orphantxns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_orphantxns.obj `if test -f 'test/test_orphantxns.cpp'; then $(CYGPATH_W) 'test/test_orphantxns.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_orphantxns.cpp'; fi`

test/test_bitcoin-test_recent_rejects.o: test/test_recent_rejects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_recent_rejects.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Tpo -c -o test/test_bitcoin-test_recent_rejects.o `test -f 'test/test_recent_rejects.cpp' || echo '$(srcdir)/'`test/test_recent_rejects.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Tpo test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Po
#	$(AM_V_CXX)source='test/test_recent_rejects.cpp' object='test/test_bitcoin-test_recent_rejects.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_recent_rejects.o `test -f 'test/test_recent_rejects.cpp' || echo '$(srcdir)/'`test/test_recent_rejects.cpp

test/test_bitcoin-test_recent_rejects.obj: test/test_recent_rejects.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_recent_rejects.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Tpo -c -o test/test_bitcoin-test_recent_rejects.obj `if test -f 'test/test_recent_rejects.cpp'; then $(CYGPATH_W) 'test/test_recent_rejects.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_recent_rejects.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Tpo test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Po
#	$(AM_V_CXX)source='test/test_recent_rejects.cpp' object='test/test_bitcoin-test_recent_rejects.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_recent_rejects.obj `if test -f 'test/test_recent_rejects.cpp'; then $(CYGPATH_W) 'test/test_recent_rejects.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_recent_rejects.cpp'; fi`

test/test_bitcoin-test_txid_tracker.o: test/test_txid_tracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_txid_tracker.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Tpo -c -o test/test_bitcoin-test_txid_tracker.o `test -f 'test/test_txid_tracker.cpp' || echo '$(srcdir)/'`test/test_txid_tracker.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Tpo test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Po
#	$(AM_V_CXX)source='test/test_txid_tracker.cpp' object='test/test_bitcoin-test_txid_tracker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_txid_tracker.o `test -f 'test/test_txid_tracker.cpp' || echo '$(srcdir)/'`test/test_txid_tracker.cpp

test/test_bitcoin-test_txid_tracker.obj: test/test_txid_tracker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_txid_tracker.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Tpo -c -o test/test_bitcoin-test_txid_tracker.obj `if test -f 'test/test_txid_tracker.cpp'; then $(CYGPATH_W) 'test/test_txid_tracker.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_txid_tracker.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Tpo test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Po
#	$(AM_V_CXX)source='test/test_txid_tracker.cpp' object='test/test_bitcoin-test_txid_tracker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_txid_tracker.obj `if test -f 'test/test_txid_tracker.cpp'; then $(CYGPATH_W) 'test/test_txid_tracker.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_txid_tracker.cpp'; fi`

test/test_bitcoin-test_txnvalidation_utils.o: test/test_txnvalidation_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_txnvalidation_utils.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Tpo -c -o test/test_bitcoin-test_txnvalidation_utils.o `test -f 'test/test_txnvalidation_utils.cpp' || echo '$(srcdir)/'`test/test_txnvalidation_utils.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Tpo test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Po
#	$(AM_V_CXX)source='test/test_txnvalidation_utils.cpp' object='test/test_bitcoin-test_txnvalidation_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_txnvalidation_utils.o `test -f 'test/test_txnvalidation_utils.cpp' || echo '$(srcdir)/'`test/test_txnvalidation_utils.cpp

test/test_bitcoin-test_txnvalidation_utils.obj: test/test_txnvalidation_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_txnvalidation_utils.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Tpo -c -o test/test_bitcoin-test_txnvalidation_utils.obj `if test -f 'test/test_txnvalidation_utils.cpp'; then $(CYGPATH_W) 'test/test_txnvalidation_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_txnvalidation_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Tpo test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Po
#	$(AM_V_CXX)source='test/test_txnvalidation_utils.cpp' object='test/test_bitcoin-test_txnvalidation_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_txnvalidation_utils.obj `if test -f 'test/test_txnvalidation_utils.cpp'; then $(CYGPATH_W) 'test/test_txnvalidation_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_txnvalidation_utils.cpp'; fi`

test/test_bitcoin-test_txnvalidator.o: test/test_txnvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_txnvalidator.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Tpo -c -o test/test_bitcoin-test_txnvalidator.o `test -f 'test/test_txnvalidator.cpp' || echo '$(srcdir)/'`test/test_txnvalidator.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Tpo test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Po
#	$(AM_V_CXX)source='test/test_txnvalidator.cpp' object='test/test_bitcoin-test_txnvalidator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_txnvalidator.o `test -f 'test/test_txnvalidator.cpp' || echo '$(srcdir)/'`test/test_txnvalidator.cpp

test/test_bitcoin-test_txnvalidator.obj: test/test_txnvalidator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-test_txnvalidator.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Tpo -c -o test/test_bitcoin-test_txnvalidator.obj `if test -f 'test/test_txnvalidator.cpp'; then $(CYGPATH_W) 'test/test_txnvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_txnvalidator.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Tpo test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Po
#	$(AM_V_CXX)source='test/test_txnvalidator.cpp' object='test/test_bitcoin-test_txnvalidator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-test_txnvalidator.obj `if test -f 'test/test_txnvalidator.cpp'; then $(CYGPATH_W) 'test/test_txnvalidator.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_txnvalidator.cpp'; fi`

test/test_bitcoin-testutil.o: test/testutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-testutil.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-testutil.Tpo -c -o test/test_bitcoin-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-testutil.Tpo test/$(DEPDIR)/test_bitcoin-testutil.Po
#	$(AM_V_CXX)source='test/testutil.cpp' object='test/test_bitcoin-testutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-testutil.o `test -f 'test/testutil.cpp' || echo '$(srcdir)/'`test/testutil.cpp

test/test_bitcoin-testutil.obj: test/testutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-testutil.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-testutil.Tpo -c -o test/test_bitcoin-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-testutil.Tpo test/$(DEPDIR)/test_bitcoin-testutil.Po
#	$(AM_V_CXX)source='test/testutil.cpp' object='test/test_bitcoin-testutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-testutil.obj `if test -f 'test/testutil.cpp'; then $(CYGPATH_W) 'test/testutil.cpp'; else $(CYGPATH_W) '$(srcdir)/test/testutil.cpp'; fi`

test/test_bitcoin-thread_safe_queue_tests.o: test/thread_safe_queue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-thread_safe_queue_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Tpo -c -o test/test_bitcoin-thread_safe_queue_tests.o `test -f 'test/thread_safe_queue_tests.cpp' || echo '$(srcdir)/'`test/thread_safe_queue_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Tpo test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Po
#	$(AM_V_CXX)source='test/thread_safe_queue_tests.cpp' object='test/test_bitcoin-thread_safe_queue_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-thread_safe_queue_tests.o `test -f 'test/thread_safe_queue_tests.cpp' || echo '$(srcdir)/'`test/thread_safe_queue_tests.cpp

test/test_bitcoin-thread_safe_queue_tests.obj: test/thread_safe_queue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-thread_safe_queue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Tpo -c -o test/test_bitcoin-thread_safe_queue_tests.obj `if test -f 'test/thread_safe_queue_tests.cpp'; then $(CYGPATH_W) 'test/thread_safe_queue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/thread_safe_queue_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Tpo test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Po
#	$(AM_V_CXX)source='test/thread_safe_queue_tests.cpp' object='test/test_bitcoin-thread_safe_queue_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-thread_safe_queue_tests.obj `if test -f 'test/thread_safe_queue_tests.cpp'; then $(CYGPATH_W) 'test/thread_safe_queue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/thread_safe_queue_tests.cpp'; fi`

test/test_bitcoin-threadpool_tests.o: test/threadpool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-threadpool_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-threadpool_tests.Tpo -c -o test/test_bitcoin-threadpool_tests.o `test -f 'test/threadpool_tests.cpp' || echo '$(srcdir)/'`test/threadpool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-threadpool_tests.Tpo test/$(DEPDIR)/test_bitcoin-threadpool_tests.Po
#	$(AM_V_CXX)source='test/threadpool_tests.cpp' object='test/test_bitcoin-threadpool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-threadpool_tests.o `test -f 'test/threadpool_tests.cpp' || echo '$(srcdir)/'`test/threadpool_tests.cpp

test/test_bitcoin-threadpool_tests.obj: test/threadpool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-threadpool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-threadpool_tests.Tpo -c -o test/test_bitcoin-threadpool_tests.obj `if test -f 'test/threadpool_tests.cpp'; then $(CYGPATH_W) 'test/threadpool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/threadpool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-threadpool_tests.Tpo test/$(DEPDIR)/test_bitcoin-threadpool_tests.Po
#	$(AM_V_CXX)source='test/threadpool_tests.cpp' object='test/test_bitcoin-threadpool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-threadpool_tests.obj `if test -f 'test/threadpool_tests.cpp'; then $(CYGPATH_W) 'test/threadpool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/threadpool_tests.cpp'; fi`

test/test_bitcoin-timedata_tests.o: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-timedata_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-timedata_tests.Tpo -c -o test/test_bitcoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-timedata_tests.Tpo test/$(DEPDIR)/test_bitcoin-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_bitcoin-timedata_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp

test/test_bitcoin-timedata_tests.obj: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-timedata_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-timedata_tests.Tpo -c -o test/test_bitcoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-timedata_tests.Tpo test/$(DEPDIR)/test_bitcoin-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_bitcoin-timedata_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`

test/test_bitcoin-time_limited_blacklist_tests.o: test/time_limited_blacklist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-time_limited_blacklist_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Tpo -c -o test/test_bitcoin-time_limited_blacklist_tests.o `test -f 'test/time_limited_blacklist_tests.cpp' || echo '$(srcdir)/'`test/time_limited_blacklist_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Tpo test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Po
#	$(AM_V_CXX)source='test/time_limited_blacklist_tests.cpp' object='test/test_bitcoin-time_limited_blacklist_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-time_limited_blacklist_tests.o `test -f 'test/time_limited_blacklist_tests.cpp' || echo '$(srcdir)/'`test/time_limited_blacklist_tests.cpp

test/test_bitcoin-time_limited_blacklist_tests.obj: test/time_limited_blacklist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-time_limited_blacklist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Tpo -c -o test/test_bitcoin-time_limited_blacklist_tests.obj `if test -f 'test/time_limited_blacklist_tests.cpp'; then $(CYGPATH_W) 'test/time_limited_blacklist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/time_limited_blacklist_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Tpo test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Po
#	$(AM_V_CXX)source='test/time_limited_blacklist_tests.cpp' object='test/test_bitcoin-time_limited_blacklist_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-time_limited_blacklist_tests.obj `if test -f 'test/time_limited_blacklist_tests.cpp'; then $(CYGPATH_W) 'test/time_limited_blacklist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/time_limited_blacklist_tests.cpp'; fi`

test/test_bitcoin-time_locked_mempool_tests.o: test/time_locked_mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-time_locked_mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Tpo -c -o test/test_bitcoin-time_locked_mempool_tests.o `test -f 'test/time_locked_mempool_tests.cpp' || echo '$(srcdir)/'`test/time_locked_mempool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Tpo test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Po
#	$(AM_V_CXX)source='test/time_locked_mempool_tests.cpp' object='test/test_bitcoin-time_locked_mempool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-time_locked_mempool_tests.o `test -f 'test/time_locked_mempool_tests.cpp' || echo '$(srcdir)/'`test/time_locked_mempool_tests.cpp

test/test_bitcoin-time_locked_mempool_tests.obj: test/time_locked_mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-time_locked_mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Tpo -c -o test/test_bitcoin-time_locked_mempool_tests.obj `if test -f 'test/time_locked_mempool_tests.cpp'; then $(CYGPATH_W) 'test/time_locked_mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/time_locked_mempool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Tpo test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Po
#	$(AM_V_CXX)source='test/time_locked_mempool_tests.cpp' object='test/test_bitcoin-time_locked_mempool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-time_locked_mempool_tests.obj `if test -f 'test/time_locked_mempool_tests.cpp'; then $(CYGPATH_W) 'test/time_locked_mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/time_locked_mempool_tests.cpp'; fi`

test/test_bitcoin-ttor_tests.o: test/ttor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-ttor_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-ttor_tests.Tpo -c -o test/test_bitcoin-ttor_tests.o `test -f 'test/ttor_tests.cpp' || echo '$(srcdir)/'`test/ttor_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-ttor_tests.Tpo test/$(DEPDIR)/test_bitcoin-ttor_tests.Po
#	$(AM_V_CXX)source='test/ttor_tests.cpp' object='test/test_bitcoin-ttor_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-ttor_tests.o `test -f 'test/ttor_tests.cpp' || echo '$(srcdir)/'`test/ttor_tests.cpp

test/test_bitcoin-ttor_tests.obj: test/ttor_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-ttor_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-ttor_tests.Tpo -c -o test/test_bitcoin-ttor_tests.obj `if test -f 'test/ttor_tests.cpp'; then $(CYGPATH_W) 'test/ttor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/ttor_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-ttor_tests.Tpo test/$(DEPDIR)/test_bitcoin-ttor_tests.Po
#	$(AM_V_CXX)source='test/ttor_tests.cpp' object='test/test_bitcoin-ttor_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-ttor_tests.obj `if test -f 'test/ttor_tests.cpp'; then $(CYGPATH_W) 'test/ttor_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/ttor_tests.cpp'; fi`

test/test_bitcoin-transaction_tests.o: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-transaction_tests.Tpo -c -o test/test_bitcoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-transaction_tests.Tpo test/$(DEPDIR)/test_bitcoin-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_bitcoin-transaction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp

test/test_bitcoin-transaction_tests.obj: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-transaction_tests.Tpo -c -o test/test_bitcoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-transaction_tests.Tpo test/$(DEPDIR)/test_bitcoin-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_bitcoin-transaction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`

test/test_bitcoin-txn_grouper_tests.o: test/txn_grouper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-txn_grouper_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Tpo -c -o test/test_bitcoin-txn_grouper_tests.o `test -f 'test/txn_grouper_tests.cpp' || echo '$(srcdir)/'`test/txn_grouper_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Tpo test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Po
#	$(AM_V_CXX)source='test/txn_grouper_tests.cpp' object='test/test_bitcoin-txn_grouper_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-txn_grouper_tests.o `test -f 'test/txn_grouper_tests.cpp' || echo '$(srcdir)/'`test/txn_grouper_tests.cpp

test/test_bitcoin-txn_grouper_tests.obj: test/txn_grouper_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-txn_grouper_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Tpo -c -o test/test_bitcoin-txn_grouper_tests.obj `if test -f 'test/txn_grouper_tests.cpp'; then $(CYGPATH_W) 'test/txn_grouper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txn_grouper_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Tpo test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Po
#	$(AM_V_CXX)source='test/txn_grouper_tests.cpp' object='test/test_bitcoin-txn_grouper_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-txn_grouper_tests.obj `if test -f 'test/txn_grouper_tests.cpp'; then $(CYGPATH_W) 'test/txn_grouper_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txn_grouper_tests.cpp'; fi`

test/test_bitcoin-txs_parser_tests.o: test/txs_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-txs_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Tpo -c -o test/test_bitcoin-txs_parser_tests.o `test -f 'test/txs_parser_tests.cpp' || echo '$(srcdir)/'`test/txs_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Po
#	$(AM_V_CXX)source='test/txs_parser_tests.cpp' object='test/test_bitcoin-txs_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-txs_parser_tests.o `test -f 'test/txs_parser_tests.cpp' || echo '$(srcdir)/'`test/txs_parser_tests.cpp

test/test_bitcoin-txs_parser_tests.obj: test/txs_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-txs_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Tpo -c -o test/test_bitcoin-txs_parser_tests.obj `if test -f 'test/txs_parser_tests.cpp'; then $(CYGPATH_W) 'test/txs_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txs_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Po
#	$(AM_V_CXX)source='test/txs_parser_tests.cpp' object='test/test_bitcoin-txs_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-txs_parser_tests.obj `if test -f 'test/txs_parser_tests.cpp'; then $(CYGPATH_W) 'test/txs_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txs_parser_tests.cpp'; fi`

test/test_bitcoin-tx_parser_tests.o: test/tx_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-tx_parser_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Tpo -c -o test/test_bitcoin-tx_parser_tests.o `test -f 'test/tx_parser_tests.cpp' || echo '$(srcdir)/'`test/tx_parser_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Po
#	$(AM_V_CXX)source='test/tx_parser_tests.cpp' object='test/test_bitcoin-tx_parser_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-tx_parser_tests.o `test -f 'test/tx_parser_tests.cpp' || echo '$(srcdir)/'`test/tx_parser_tests.cpp

test/test_bitcoin-tx_parser_tests.obj: test/tx_parser_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-tx_parser_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Tpo -c -o test/test_bitcoin-tx_parser_tests.obj `if test -f 'test/tx_parser_tests.cpp'; then $(CYGPATH_W) 'test/tx_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/tx_parser_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Tpo test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Po
#	$(AM_V_CXX)source='test/tx_parser_tests.cpp' object='test/test_bitcoin-tx_parser_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-tx_parser_tests.obj `if test -f 'test/tx_parser_tests.cpp'; then $(CYGPATH_W) 'test/tx_parser_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/tx_parser_tests.cpp'; fi`

test/test_bitcoin-txvalidationcache_tests.o: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-txvalidationcache_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Tpo -c -o test/test_bitcoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_bitcoin-txvalidationcache_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-txvalidationcache_tests.o `test -f 'test/txvalidationcache_tests.cpp' || echo '$(srcdir)/'`test/txvalidationcache_tests.cpp

test/test_bitcoin-txvalidationcache_tests.obj: test/txvalidationcache_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-txvalidationcache_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Tpo -c -o test/test_bitcoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Tpo test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Po
#	$(AM_V_CXX)source='test/txvalidationcache_tests.cpp' object='test/test_bitcoin-txvalidationcache_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-txvalidationcache_tests.obj `if test -f 'test/txvalidationcache_tests.cpp'; then $(CYGPATH_W) 'test/txvalidationcache_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/txvalidationcache_tests.cpp'; fi`

test/test_bitcoin-uint256_tests.o: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-uint256_tests.Tpo -c -o test/test_bitcoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-uint256_tests.Tpo test/$(DEPDIR)/test_bitcoin-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_bitcoin-uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp

test/test_bitcoin-uint256_tests.obj: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-uint256_tests.Tpo -c -o test/test_bitcoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-uint256_tests.Tpo test/$(DEPDIR)/test_bitcoin-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_bitcoin-uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`

test/test_bitcoin-undo_tests.o: test/undo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-undo_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-undo_tests.Tpo -c -o test/test_bitcoin-undo_tests.o `test -f 'test/undo_tests.cpp' || echo '$(srcdir)/'`test/undo_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-undo_tests.Tpo test/$(DEPDIR)/test_bitcoin-undo_tests.Po
#	$(AM_V_CXX)source='test/undo_tests.cpp' object='test/test_bitcoin-undo_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-undo_tests.o `test -f 'test/undo_tests.cpp' || echo '$(srcdir)/'`test/undo_tests.cpp

test/test_bitcoin-undo_tests.obj: test/undo_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-undo_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-undo_tests.Tpo -c -o test/test_bitcoin-undo_tests.obj `if test -f 'test/undo_tests.cpp'; then $(CYGPATH_W) 'test/undo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/undo_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-undo_tests.Tpo test/$(DEPDIR)/test_bitcoin-undo_tests.Po
#	$(AM_V_CXX)source='test/undo_tests.cpp' object='test/test_bitcoin-undo_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-undo_tests.obj `if test -f 'test/undo_tests.cpp'; then $(CYGPATH_W) 'test/undo_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/undo_tests.cpp'; fi`

test/test_bitcoin-unique_array_tests.o: test/unique_array_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-unique_array_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-unique_array_tests.Tpo -c -o test/test_bitcoin-unique_array_tests.o `test -f 'test/unique_array_tests.cpp' || echo '$(srcdir)/'`test/unique_array_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-unique_array_tests.Tpo test/$(DEPDIR)/test_bitcoin-unique_array_tests.Po
#	$(AM_V_CXX)source='test/unique_array_tests.cpp' object='test/test_bitcoin-unique_array_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-unique_array_tests.o `test -f 'test/unique_array_tests.cpp' || echo '$(srcdir)/'`test/unique_array_tests.cpp

test/test_bitcoin-unique_array_tests.obj: test/unique_array_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-unique_array_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-unique_array_tests.Tpo -c -o test/test_bitcoin-unique_array_tests.obj `if test -f 'test/unique_array_tests.cpp'; then $(CYGPATH_W) 'test/unique_array_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/unique_array_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-unique_array_tests.Tpo test/$(DEPDIR)/test_bitcoin-unique_array_tests.Po
#	$(AM_V_CXX)source='test/unique_array_tests.cpp' object='test/test_bitcoin-unique_array_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-unique_array_tests.obj `if test -f 'test/unique_array_tests.cpp'; then $(CYGPATH_W) 'test/unique_array_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/unique_array_tests.cpp'; fi`

test/test_bitcoin-univalue_tests.o: test/univalue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-univalue_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-univalue_tests.Tpo -c -o test/test_bitcoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-univalue_tests.Tpo test/$(DEPDIR)/test_bitcoin-univalue_tests.Po
#	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_bitcoin-univalue_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp

test/test_bitcoin-univalue_tests.obj: test/univalue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-univalue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-univalue_tests.Tpo -c -o test/test_bitcoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-univalue_tests.Tpo test/$(DEPDIR)/test_bitcoin-univalue_tests.Po
#	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_bitcoin-univalue_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`

test/test_bitcoin-util_tests.o: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-util_tests.Tpo -c -o test/test_bitcoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-util_tests.Tpo test/$(DEPDIR)/test_bitcoin-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_bitcoin-util_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp

test/test_bitcoin-util_tests.obj: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-util_tests.Tpo -c -o test/test_bitcoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-util_tests.Tpo test/$(DEPDIR)/test_bitcoin-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_bitcoin-util_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`

test/test_bitcoin-validation_scheduler_tests.o: test/validation_scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-validation_scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Tpo -c -o test/test_bitcoin-validation_scheduler_tests.o `test -f 'test/validation_scheduler_tests.cpp' || echo '$(srcdir)/'`test/validation_scheduler_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Tpo test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Po
#	$(AM_V_CXX)source='test/validation_scheduler_tests.cpp' object='test/test_bitcoin-validation_scheduler_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-validation_scheduler_tests.o `test -f 'test/validation_scheduler_tests.cpp' || echo '$(srcdir)/'`test/validation_scheduler_tests.cpp

test/test_bitcoin-validation_scheduler_tests.obj: test/validation_scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-validation_scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Tpo -c -o test/test_bitcoin-validation_scheduler_tests.obj `if test -f 'test/validation_scheduler_tests.cpp'; then $(CYGPATH_W) 'test/validation_scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_scheduler_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Tpo test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Po
#	$(AM_V_CXX)source='test/validation_scheduler_tests.cpp' object='test/test_bitcoin-validation_scheduler_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-validation_scheduler_tests.obj `if test -f 'test/validation_scheduler_tests.cpp'; then $(CYGPATH_W) 'test/validation_scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_scheduler_tests.cpp'; fi`

test/test_bitcoin-validation_tests.o: test/validation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-validation_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-validation_tests.Tpo -c -o test/test_bitcoin-validation_tests.o `test -f 'test/validation_tests.cpp' || echo '$(srcdir)/'`test/validation_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-validation_tests.Tpo test/$(DEPDIR)/test_bitcoin-validation_tests.Po
#	$(AM_V_CXX)source='test/validation_tests.cpp' object='test/test_bitcoin-validation_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-validation_tests.o `test -f 'test/validation_tests.cpp' || echo '$(srcdir)/'`test/validation_tests.cpp

test/test_bitcoin-validation_tests.obj: test/validation_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-validation_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-validation_tests.Tpo -c -o test/test_bitcoin-validation_tests.obj `if test -f 'test/validation_tests.cpp'; then $(CYGPATH_W) 'test/validation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-validation_tests.Tpo test/$(DEPDIR)/test_bitcoin-validation_tests.Po
#	$(AM_V_CXX)source='test/validation_tests.cpp' object='test/test_bitcoin-validation_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-validation_tests.obj `if test -f 'test/validation_tests.cpp'; then $(CYGPATH_W) 'test/validation_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/validation_tests.cpp'; fi`

test/test_bitcoin-webhook_client_tests.o: test/webhook_client_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-webhook_client_tests.o -MD -MP -MF test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Tpo -c -o test/test_bitcoin-webhook_client_tests.o `test -f 'test/webhook_client_tests.cpp' || echo '$(srcdir)/'`test/webhook_client_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Tpo test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Po
#	$(AM_V_CXX)source='test/webhook_client_tests.cpp' object='test/test_bitcoin-webhook_client_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-webhook_client_tests.o `test -f 'test/webhook_client_tests.cpp' || echo '$(srcdir)/'`test/webhook_client_tests.cpp

test/test_bitcoin-webhook_client_tests.obj: test/webhook_client_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT test/test_bitcoin-webhook_client_tests.obj -MD -MP -MF test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Tpo -c -o test/test_bitcoin-webhook_client_tests.obj `if test -f 'test/webhook_client_tests.cpp'; then $(CYGPATH_W) 'test/webhook_client_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/webhook_client_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Tpo test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Po
#	$(AM_V_CXX)source='test/webhook_client_tests.cpp' object='test/test_bitcoin-webhook_client_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o test/test_bitcoin-webhook_client_tests.obj `if test -f 'test/webhook_client_tests.cpp'; then $(CYGPATH_W) 'test/webhook_client_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/webhook_client_tests.cpp'; fi`

wallet/test/test_test_bitcoin-wallet_test_fixture.o: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_test_fixture.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_bitcoin-wallet_test_fixture.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.o `test -f 'wallet/test/wallet_test_fixture.cpp' || echo '$(srcdir)/'`wallet/test/wallet_test_fixture.cpp

wallet/test/test_test_bitcoin-wallet_test_fixture.obj: wallet/test/wallet_test_fixture.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_test_fixture.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po
#	$(AM_V_CXX)source='wallet/test/wallet_test_fixture.cpp' object='wallet/test/test_test_bitcoin-wallet_test_fixture.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_test_fixture.obj `if test -f 'wallet/test/wallet_test_fixture.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_test_fixture.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_test_fixture.cpp'; fi`

wallet/test/test_test_bitcoin-accounting_tests.o: wallet/test/accounting_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-accounting_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Tpo -c -o wallet/test/test_test_bitcoin-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Po
#	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_bitcoin-accounting_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-accounting_tests.o `test -f 'wallet/test/accounting_tests.cpp' || echo '$(srcdir)/'`wallet/test/accounting_tests.cpp

wallet/test/test_test_bitcoin-accounting_tests.obj: wallet/test/accounting_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-accounting_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Tpo -c -o wallet/test/test_test_bitcoin-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Po
#	$(AM_V_CXX)source='wallet/test/accounting_tests.cpp' object='wallet/test/test_test_bitcoin-accounting_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-accounting_tests.obj `if test -f 'wallet/test/accounting_tests.cpp'; then $(CYGPATH_W) 'wallet/test/accounting_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/accounting_tests.cpp'; fi`

wallet/test/test_test_bitcoin-wallet_tests.o: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp

wallet/test/test_test_bitcoin-wallet_tests.obj: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`

wallet/test/test_test_bitcoin-walletdb_tests.o: wallet/test/walletdb_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-walletdb_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo -c -o wallet/test/test_test_bitcoin-walletdb_tests.o `test -f 'wallet/test/walletdb_tests.cpp' || echo '$(srcdir)/'`wallet/test/walletdb_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po
#	$(AM_V_CXX)source='wallet/test/walletdb_tests.cpp' object='wallet/test/test_test_bitcoin-walletdb_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-walletdb_tests.o `test -f 'wallet/test/walletdb_tests.cpp' || echo '$(srcdir)/'`wallet/test/walletdb_tests.cpp

wallet/test/test_test_bitcoin-walletdb_tests.obj: wallet/test/walletdb_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-walletdb_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo -c -o wallet/test/test_test_bitcoin-walletdb_tests.obj `if test -f 'wallet/test/walletdb_tests.cpp'; then $(CYGPATH_W) 'wallet/test/walletdb_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/walletdb_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po
#	$(AM_V_CXX)source='wallet/test/walletdb_tests.cpp' object='wallet/test/test_test_bitcoin-walletdb_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-walletdb_tests.obj `if test -f 'wallet/test/walletdb_tests.cpp'; then $(CYGPATH_W) 'wallet/test/walletdb_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/walletdb_tests.cpp'; fi`

wallet/test/test_test_bitcoin-crypto_tests.o: wallet/test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-crypto_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo -c -o wallet/test/test_test_bitcoin-crypto_tests.o `test -f 'wallet/test/crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/crypto_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/crypto_tests.cpp' object='wallet/test/test_test_bitcoin-crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-crypto_tests.o `test -f 'wallet/test/crypto_tests.cpp' || echo '$(srcdir)/'`wallet/test/crypto_tests.cpp

wallet/test/test_test_bitcoin-crypto_tests.obj: wallet/test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-crypto_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo -c -o wallet/test/test_test_bitcoin-crypto_tests.obj `if test -f 'wallet/test/crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='wallet/test/crypto_tests.cpp' object='wallet/test/test_test_bitcoin-crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-crypto_tests.obj `if test -f 'wallet/test/crypto_tests.cpp'; then $(CYGPATH_W) 'wallet/test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/crypto_tests.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bench/.libs bench/_libs
	-rm -rf compat/.libs compat/_libs
	-rm -rf consensus/.libs consensus/_libs
	-rm -rf crypto/.libs crypto/_libs
	-rm -rf primitives/.libs primitives/_libs
	-rm -rf script/.libs script/_libs
	-rm -rf test/.libs test/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: 
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test/test_bitcoin.log: test/test_bitcoin$(EXEEXT)
	@p='test/test_bitcoin$(EXEEXT)'; \
	b='test/test_bitcoin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
#check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-recursive
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f bench/$(DEPDIR)/$(am__dirstamp)
	-rm -f bench/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f consensus/$(DEPDIR)/$(am__dirstamp)
	-rm -f consensus/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f double_spend/$(DEPDIR)/$(am__dirstamp)
	-rm -f double_spend/$(am__dirstamp)
	-rm -f invalid_txn_sinks/$(DEPDIR)/$(am__dirstamp)
	-rm -f invalid_txn_sinks/$(am__dirstamp)
	-rm -f leveldb/$(am__dirstamp)
	-rm -f leveldb/crc32c/$(am__dirstamp)
	-rm -f leveldb/crc32c/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/crc32c/src/$(am__dirstamp)
	-rm -f leveldb/db/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/db/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(am__dirstamp)
	-rm -f leveldb/table/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/table/$(am__dirstamp)
	-rm -f leveldb/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/util/$(am__dirstamp)
	-rm -f miner_id/$(DEPDIR)/$(am__dirstamp)
	-rm -f miner_id/$(am__dirstamp)
	-rm -f mining/$(DEPDIR)/$(am__dirstamp)
	-rm -f mining/$(am__dirstamp)
	-rm -f net/$(DEPDIR)/$(am__dirstamp)
	-rm -f net/$(am__dirstamp)
	-rm -f policy/$(DEPDIR)/$(am__dirstamp)
	-rm -f policy/$(am__dirstamp)
	-rm -f primitives/$(DEPDIR)/$(am__dirstamp)
	-rm -f primitives/$(am__dirstamp)
	-rm -f rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f rpc/$(am__dirstamp)
	-rm -f script/$(DEPDIR)/$(am__dirstamp)
	-rm -f script/$(am__dirstamp)
	-rm -f support/$(DEPDIR)/$(am__dirstamp)
	-rm -f support/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-rm -f wallet/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/$(am__dirstamp)
	-rm -f wallet/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/test/$(am__dirstamp)
	-rm -f zmq/$(DEPDIR)/$(am__dirstamp)
	-rm -f zmq/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/bitcoin_cli-bitcoin-cli.Po
	-rm -f ./$(DEPDIR)/bitcoin_miner-arith_uint256.Po
	-rm -f ./$(DEPDIR)/bitcoin_miner-bitcoin-miner.Po
	-rm -f ./$(DEPDIR)/bitcoin_tx-bitcoin-tx.Po
	-rm -f ./$(DEPDIR)/bitcoind-bitcoind.Po
	-rm -f ./$(DEPDIR)/libbitcoin_cli_a-cfile_util.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-amount.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-base58.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-chainparams.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-coins.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-compressor.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-config.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-core_read.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-core_write.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-dstencode.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-key.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-keystore.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-protocol.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-scheduler.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-txhasher.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-warnings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-big_int.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-cfile_util.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-hash.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-pubkey.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-abort_node.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-addrdb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-addrman.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_file_access.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_file_info.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_index.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-blockencodings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-bloom.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-chain.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-dbwrapper.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-frozentxo.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-frozentxo_db.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-httprpc.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-httpserver.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-init.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-mempooltxdb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkleblock.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkleproof.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkletree.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkletreedb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkletreestore.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-noui.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-orphan_txns.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-pow.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-processing_block_index.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rest.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-safe_mode.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-taskcancellation.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-timedata.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txdb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txmempool.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_grouper.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_propagator.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_validation_data.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_validator.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-ui_interface.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-unique_array.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-validation.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-validationinterface.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-vmtouch.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-clientversion.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-fs.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-logging.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-random.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-sync.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-threadpriority.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-util.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-utiltime.Po
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-big_int.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-cfile_util.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-hash.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-pubkey.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-taskcancellation.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-utilstrencodings.Plo
	-rm -f bench/$(DEPDIR)/bench_bitcoin-Examples.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-base58.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-bench.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-checkblock.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-checkqueue.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-coin_selection.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-cscript.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-interpreter.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-lockedpool.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-perf.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-serialisation.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po
	-rm -f compat/$(DEPDIR)/libbitcoinconsensus_la-glibc_compat.Plo
	-rm -f consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po
	-rm -f consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Plo
	-rm -f crypto/$(DEPDIR)/bitcoin_miner-chacha20.Po
	-rm -f crypto/$(DEPDIR)/bitcoin_miner-sha512.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Po
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Plo
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Po
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Po
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Po
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Po
	-rm -f invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Po
	-rm -f invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Po
	-rm -f leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Po
	-rm -f leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Po
	-rm -f leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-c.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po
	-rm -f leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-format.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-options.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-status.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-assembler.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-candidates.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-factory.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Po
	-rm -f net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Po
	-rm -f net/$(DEPDIR)/libbitcoin_cli_a-netbase.Po
	-rm -f net/$(DEPDIR)/libbitcoin_common_a-netaddress.Po
	-rm -f net/$(DEPDIR)/libbitcoin_common_a-netbase.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-association.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-association_id.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-block_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-net.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-net_message.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-net_processing.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-node_state.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-stream.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Po
	-rm -f policy/$(DEPDIR)/libbitcoin_server_a-fees.Po
	-rm -f policy/$(DEPDIR)/libbitcoin_server_a-policy.Po
	-rm -f primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po
	-rm -f primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po
	-rm -f primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Plo
	-rm -f primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Plo
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-abc.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-net.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-server.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Po
	-rm -f script/$(DEPDIR)/libbitcoin_common_a-sign.Po
	-rm -f script/$(DEPDIR)/libbitcoin_common_a-standard.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-script.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Po
	-rm -f script/$(DEPDIR)/libbitcoin_server_a-ismine.Po
	-rm -f script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Po
	-rm -f script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-limitedstack.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-opcodes.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-script.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-script_num.Plo
	-rm -f support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
	-rm -f support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-DoS_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-addrman_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-allocator_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-amount_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-array_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-base32_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-base58_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-base64_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-big_int_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bip32_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_info_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bloom_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bn_op_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bswap_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-coins_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-compress_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-config_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-core_io_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cpfp_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-crypto_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cscript_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-datareftx_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dstencode_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-getarg_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-hash_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-inv_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-journal_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-json_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-jsonutil.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-key_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-main_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-merkle_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-minerid_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-multisig_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_association_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_message_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-netbase_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-opcode_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-pmt_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-pow_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-prevector_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-protocol_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-raii_event_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-random_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-reverselock_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-revokemid_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-rpc_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sanity_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-scheduler_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-script_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-scriptflags.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-serialize_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sighash_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sigutil.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-skiplist_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-streams_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-string_writer_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_bitcoin.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_orphantxns.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-testutil.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-threadpool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-timedata_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-transaction_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-ttor_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-uint256_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-undo_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-unique_array_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-univalue_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-util_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-validation_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/bitcoin_cli-bitcoin-cli.Po
	-rm -f ./$(DEPDIR)/bitcoin_miner-arith_uint256.Po
	-rm -f ./$(DEPDIR)/bitcoin_miner-bitcoin-miner.Po
	-rm -f ./$(DEPDIR)/bitcoin_tx-bitcoin-tx.Po
	-rm -f ./$(DEPDIR)/bitcoind-bitcoind.Po
	-rm -f ./$(DEPDIR)/libbitcoin_cli_a-cfile_util.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-amount.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-base58.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-chainparams.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-coins.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-compressor.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-config.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-core_read.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-core_write.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-dstencode.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-key.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-keystore.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-protocol.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-scheduler.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-transaction_specific_config.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-txhasher.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-warnings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_common_a-write_preferring_upgradable_mutex.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-arith_uint256.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-big_int.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-cfile_util.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-hash.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-pubkey.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-taskcancellation.Po
	-rm -f ./$(DEPDIR)/libbitcoin_consensus_a-utilstrencodings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-abort_node.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-addrdb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-addrman.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_file_access.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_file_info.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_index.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-block_index_store_loader.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-blockencodings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-blockfileinfostore.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-bloom.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-chain.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-checkpoints.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-dbwrapper.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-frozentxo.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-frozentxo_db.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-frozentxo_logging.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-httprpc.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-httpserver.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-init.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-invalid_txn_publisher.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-mempooltxdb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkleblock.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkleproof.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkletree.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkletreedb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-merkletreestore.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-noui.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-orphan_txns.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-pow.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-processing_block_index.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rawtxvalidator.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-rest.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-safe_mode.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-taskcancellation.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-time_locked_mempool.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-timedata.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-tx_mempool_info.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txdb.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txmempool.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txmempoolevictioncandidates.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_double_spend_detector.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_grouper.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_propagator.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_recent_rejects.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_validation_data.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-txn_validator.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-ui_interface.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-unique_array.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-validation.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-validationinterface.Po
	-rm -f ./$(DEPDIR)/libbitcoin_server_a-vmtouch.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-chainparamsbase.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-clientversion.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-fs.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-logging.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-random.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-sync.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-threadinterrupt.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-threadpriority.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-util.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-utilmoneystr.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-utilstrencodings.Po
	-rm -f ./$(DEPDIR)/libbitcoin_util_a-utiltime.Po
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-arith_uint256.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-big_int.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-cfile_util.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-hash.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-pubkey.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-taskcancellation.Plo
	-rm -f ./$(DEPDIR)/libbitcoinconsensus_la-utilstrencodings.Plo
	-rm -f bench/$(DEPDIR)/bench_bitcoin-Examples.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-base58.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-bench.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-bench_bitcoin.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-ccoins_caching.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-checkblock.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-checkqueue.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-coin_selection.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-crypto_hash.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-cscript.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-interpreter.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-lockedpool.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-mempool_eviction.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-mempooltxdb.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-perf.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-rollingbloom.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-serialisation.Po
	-rm -f bench/$(DEPDIR)/bench_bitcoin-thread_safe_queue.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibc_compat.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibc_sanity.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-glibcxx_sanity.Po
	-rm -f compat/$(DEPDIR)/libbitcoin_util_a-strnlen.Po
	-rm -f compat/$(DEPDIR)/libbitcoinconsensus_la-glibc_compat.Plo
	-rm -f consensus/$(DEPDIR)/libbitcoin_consensus_a-merkle.Po
	-rm -f consensus/$(DEPDIR)/libbitcoinconsensus_la-merkle.Plo
	-rm -f crypto/$(DEPDIR)/bitcoin_miner-chacha20.Po
	-rm -f crypto/$(DEPDIR)/bitcoin_miner-sha512.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-aes.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-chacha20.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha256.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-hmac_sha512.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-ripemd160.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha1.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha256_sse4.Po
	-rm -f crypto/$(DEPDIR)/libbitcoin_crypto_a-sha512.Po
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-aes.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-chacha20.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha256.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-hmac_sha512.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-ripemd160.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha1.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha256_sse4.Plo
	-rm -f crypto/$(DEPDIR)/libbitcoinconsensus_la-sha512.Plo
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dsattempt_handler.Po
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dscallback_msg.Po
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dsdetected_message.Po
	-rm -f double_spend/$(DEPDIR)/libbitcoin_server_a-dstxn_serialiser.Po
	-rm -f invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-file_sink.Po
	-rm -f invalid_txn_sinks/$(DEPDIR)/libbitcoin_server_a-zmq_sink.Po
	-rm -f leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c.Po
	-rm -f leveldb/crc32c/src/$(DEPDIR)/libcrc32c_a-crc32c_portable.Po
	-rm -f leveldb/crc32c/src/$(DEPDIR)/libcrc32c_sse42_a-crc32c_sse42.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-builder.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-c.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_impl.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-db_iter.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dbformat.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-dumpfile.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-filename.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_reader.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-log_writer.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-memtable.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-repair.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-table_cache.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_edit.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-version_set.Po
	-rm -f leveldb/db/$(DEPDIR)/libleveldb_a-write_batch.Po
	-rm -f leveldb/helpers/memenv/$(DEPDIR)/libmemenv_a-memenv.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-block_builder.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-filter_block.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-format.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-iterator.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-merger.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-table_builder.Po
	-rm -f leveldb/table/$(DEPDIR)/libleveldb_a-two_level_iterator.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-arena.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-bloom.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-cache.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-coding.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-comparator.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-crc32c.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_posix.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-env_windows.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-filter_policy.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-hash.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-histogram.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-logging.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-options.Po
	-rm -f leveldb/util/$(DEPDIR)/libleveldb_a-status.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-coinbase_doc.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-dataref_index.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-datareftx.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_id_db.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_doc.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_error.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_ref.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-miner_info_tracker.Po
	-rm -f miner_id/$(DEPDIR)/libbitcoin_server_a-revokemid.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-assembler.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-candidates.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-factory.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-group_builder.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal_builder.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal_change_set.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journal_entry.Po
	-rm -f mining/$(DEPDIR)/libbitcoin_server_a-journaling_block_assembler.Po
	-rm -f net/$(DEPDIR)/libbitcoin_cli_a-netaddress.Po
	-rm -f net/$(DEPDIR)/libbitcoin_cli_a-netbase.Po
	-rm -f net/$(DEPDIR)/libbitcoin_common_a-netaddress.Po
	-rm -f net/$(DEPDIR)/libbitcoin_common_a-netbase.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-association.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-association_id.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-block_download_tracker.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-block_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-blocktxn_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-cmpct_size.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-cmpctblock_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-fixed_len_multi_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-fixed_len_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-msg_buffer.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-msg_parser_buffer.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-net.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-net_message.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-net_processing.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-node_state.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-prefilled_tx_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-single_seg_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-stream.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-stream_policy.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-stream_policy_factory.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-tx_parser.Po
	-rm -f net/$(DEPDIR)/libbitcoin_server_a-validation_scheduler.Po
	-rm -f policy/$(DEPDIR)/libbitcoin_server_a-fees.Po
	-rm -f policy/$(DEPDIR)/libbitcoin_server_a-policy.Po
	-rm -f primitives/$(DEPDIR)/libbitcoin_consensus_a-block.Po
	-rm -f primitives/$(DEPDIR)/libbitcoin_consensus_a-transaction.Po
	-rm -f primitives/$(DEPDIR)/libbitcoinconsensus_la-block.Plo
	-rm -f primitives/$(DEPDIR)/libbitcoinconsensus_la-transaction.Plo
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-client.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-client_config.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-client_utils.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-http_request.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_cli_a-http_response.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_common_a-jsonwriter.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-abc.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-blockchain.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-frozentxo_rpc.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-miner_info.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-mining-fbb.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-mining.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-misc.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-net.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-rawtransaction.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-safe_mode.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-server.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_server_a-webhook_client.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_util_a-protocol.Po
	-rm -f rpc/$(DEPDIR)/libbitcoin_util_a-text_writer.Po
	-rm -f script/$(DEPDIR)/libbitcoin_common_a-sign.Po
	-rm -f script/$(DEPDIR)/libbitcoin_common_a-standard.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-bitcoinconsensus.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-interpreter.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-limitedstack.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-opcodes.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-script.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-script_error.Po
	-rm -f script/$(DEPDIR)/libbitcoin_consensus_a-script_num.Po
	-rm -f script/$(DEPDIR)/libbitcoin_server_a-ismine.Po
	-rm -f script/$(DEPDIR)/libbitcoin_server_a-scriptcache.Po
	-rm -f script/$(DEPDIR)/libbitcoin_server_a-sigcache.Po
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-bitcoinconsensus.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-interpreter.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-limitedstack.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-opcodes.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-script.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-script_error.Plo
	-rm -f script/$(DEPDIR)/libbitcoinconsensus_la-script_num.Plo
	-rm -f support/$(DEPDIR)/libbitcoin_util_a-cleanse.Po
	-rm -f support/$(DEPDIR)/libbitcoin_util_a-lockedpool.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-DoS_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-addrman_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-alertnotify_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-allocator_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-amount_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-arith_uint256_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-array_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-base32_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-base58_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-base64_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-big_int_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bip32_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_download_tracking_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_index_mutex_distribution_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_info_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-block_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockcheck_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockencodings_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockfile_reading_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockindex_with_descendants_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockmaxsize_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockstatus_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blocktxn_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-blockvalidationstatus_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bloom_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bn_op_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-bswap_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-check_selfish_mining_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-checkpoints_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-checkqueue_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cmpct_size_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cmpctblock_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-coinbase_doc_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-coins_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-compress_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-config_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-core_io_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cpfp_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-crypto_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cscript_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-cuckoocache_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dataref_index_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-datareftx_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dbwrapper_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dsattempt_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dsdetected_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dstencode_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-dstxn_serialiser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-enum_cast_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-eviction_candidates_tracker_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-excessiveblock_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-fixed_len_multi_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-fixed_len_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-frozentxo_db_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-frozentxo_mempool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-frozentxo_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-getarg_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-hash_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-instruction_iterator_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-int_serialization_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-inv_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-invalid_txn_publisher_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-jba_selfish_mining_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-journal_assembler_group_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-journal_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-json_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-jsonutil.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-key_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-leaky_bucket_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-limitedmap_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-limitedstack_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-locked_ref_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-m_candidates_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-main_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_dump_load_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_limit_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_snapshot_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mempooltxdb_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-merkle_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-merkletreefile_readwrite_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_id_db_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_id_db_tests3.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_doc_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_error_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_ref_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_info_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-miner_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-minerid_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-mining_group_builder_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-msg_buffer_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-msg_parser_buffer_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-multisig_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_association_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_message_maker_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_message_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-net_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-netbase_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-object_stream_deserialization_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-opcode_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-pmt_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-pow_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-prefilled_tx_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-prefilled_txs_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-prevector_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-protocol_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-raii_event_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-random_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-reverselock_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-revokemid_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-rpc_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sanity_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-scheduler_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-script_P2SH_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-script_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-scriptflags.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-scriptnum_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-serialize_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sighash_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sighashtype_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sigopcount_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-sigutil.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-single_seg_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-skiplist_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-stream_serialization_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-streams_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-string_writer_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-taskcancellation_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_bitcoin.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_bitcoin_main.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_double_spend_detector.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_orphantxns.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_recent_rejects.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_txid_tracker.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_txnvalidation_utils.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-test_txnvalidator.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-testutil.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-thread_safe_queue_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-threadpool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-time_limited_blacklist_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-time_locked_mempool_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-timedata_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-transaction_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-ttor_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-tx_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-txn_grouper_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-txs_parser_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-txvalidationcache_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-uint256_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-undo_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-unique_array_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-univalue_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-util_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-validation_scheduler_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-validation_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-webhook_client_tests.Po
	-rm -f test/$(DEPDIR)/test_bitcoin-write_preferring_upgradable_mutex_tests.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-crypter.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-db.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-finaltx.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcdump.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-rpcwallet.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-wallet.Po
	-rm -f wallet/$(DEPDIR)/libbitcoin_wallet_a-walletdb.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-accounting_tests.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_test_fixture.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
	-rm -f wallet/test/$(DEPDIR)/test_test_bitcoin-walletdb_tests.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmq_publisher.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqabstractnotifier.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqnotificationinterface.Po
	-rm -f zmq/$(DEPDIR)/libbitcoin_zmq_a-zmqpublishnotifier.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am check-local clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


$(LIBUNIVALUE): $(wildcard univalue/lib/*) $(wildcard univalue/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

$(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

.PHONY: FORCE check-symbols check-security

obj/build.h: FORCE
	@$(MKDIR_P) "$(builddir)/obj"
	@$(top_srcdir)/share/genbuild.sh "$(abs_top_builddir)/src/obj/build.h" \
	  "$(abs_top_srcdir)"
libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h

clean-local:
	-$(MAKE) -C secp256k1 clean
	-$(MAKE) -C univalue clean
	-rm -f leveldb/*/*.gcda leveldb/*/*.gcno leveldb/helpers/memenv/*.gcda leveldb/helpers/memenv/*.gcno
	-rm -rf test/__pycache__

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@

.mm.o:
	$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) -c -o $@ $<

check-symbols: $(bin_PROGRAMS)
#	@echo "Checking glibc back compat..."
#	$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(top_srcdir)/contrib/devtools/symbol-check.py $(bin_PROGRAMS)

check-security: $(bin_PROGRAMS)
	@echo "Checking binary security..."
	$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(top_srcdir)/contrib/devtools/security-check.py $(bin_PROGRAMS)

%.pb.cc %.pb.h: %.proto
	@test -f $(PROTOC)
	$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(<D) $<

$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)

bitcoin_test: $(TEST_BINARY)

bitcoin_test_check: $(TEST_BINARY) FORCE
	$(MAKE) check-TESTS TESTS=$^

bitcoin_test_clean : FORCE
	rm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)

check-local:
	@echo "Running test/util/bitcoin-util-test.py..."
	$(top_builddir)/test/util/bitcoin-util-test.py
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "namespace json_tests{" && \
	 echo "static unsigned const char $(*F)[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};}"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

bench/checkblock.cpp: bench/data/block413567.raw.h

bitcoin_bench: $(BENCH_BINARY)

bench: $(BENCH_BINARY) FORCE
	$(BENCH_BINARY)

bitcoin_bench_clean : FORCE
	rm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@python3 $(<D)/hexhdr.py "$<" "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
